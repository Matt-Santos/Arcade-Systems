

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Sep 25 16:51:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15213
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.35
    49                           ; Generated 01/06/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F15213 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  0012                     	;# 
    97  0018                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011B                     	;# 
   109  011C                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  011F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  018E                     	;# 
   116  018F                     	;# 
   117  0190                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  020C                     	;# 
   121  020D                     	;# 
   122  020E                     	;# 
   123  020E                     	;# 
   124  020F                     	;# 
   125  020F                     	;# 
   126  0210                     	;# 
   127  0210                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  028C                     	;# 
   131  028C                     	;# 
   132  028D                     	;# 
   133  028D                     	;# 
   134  028E                     	;# 
   135  028F                     	;# 
   136  0290                     	;# 
   137  0291                     	;# 
   138  030C                     	;# 
   139  030C                     	;# 
   140  030D                     	;# 
   141  030E                     	;# 
   142  030F                     	;# 
   143  0310                     	;# 
   144  0310                     	;# 
   145  0311                     	;# 
   146  0312                     	;# 
   147  0313                     	;# 
   148  0314                     	;# 
   149  0314                     	;# 
   150  0315                     	;# 
   151  0316                     	;# 
   152  0318                     	;# 
   153  0318                     	;# 
   154  0319                     	;# 
   155  031A                     	;# 
   156  059C                     	;# 
   157  059C                     	;# 
   158  059D                     	;# 
   159  059D                     	;# 
   160  059E                     	;# 
   161  059F                     	;# 
   162  070C                     	;# 
   163  070D                     	;# 
   164  070E                     	;# 
   165  0716                     	;# 
   166  0717                     	;# 
   167  0718                     	;# 
   168  080C                     	;# 
   169  0811                     	;# 
   170  0813                     	;# 
   171  0814                     	;# 
   172  081A                     	;# 
   173  081A                     	;# 
   174  081B                     	;# 
   175  081C                     	;# 
   176  081C                     	;# 
   177  081D                     	;# 
   178  081E                     	;# 
   179  081F                     	;# 
   180  088E                     	;# 
   181  0890                     	;# 
   182  0891                     	;# 
   183  0892                     	;# 
   184  0893                     	;# 
   185  090C                     	;# 
   186  1E8F                     	;# 
   187  1E90                     	;# 
   188  1E91                     	;# 
   189  1E92                     	;# 
   190  1E93                     	;# 
   191  1E9C                     	;# 
   192  1EA1                     	;# 
   193  1EA2                     	;# 
   194  1EC3                     	;# 
   195  1EC5                     	;# 
   196  1EC6                     	;# 
   197  1EC7                     	;# 
   198  1ECB                     	;# 
   199  1ECB                     	;# 
   200  1ECB                     	;# 
   201  1ECC                     	;# 
   202  1ECC                     	;# 
   203  1ECC                     	;# 
   204  1F10                     	;# 
   205  1F11                     	;# 
   206  1F12                     	;# 
   207  1F14                     	;# 
   208  1F15                     	;# 
   209  1F38                     	;# 
   210  1F39                     	;# 
   211  1F3A                     	;# 
   212  1F3B                     	;# 
   213  1F3C                     	;# 
   214  1F3D                     	;# 
   215  1F3E                     	;# 
   216  1F3F                     	;# 
   217  1FE4                     	;# 
   218  1FE5                     	;# 
   219  1FE6                     	;# 
   220  1FE7                     	;# 
   221  1FE8                     	;# 
   222  1FE8                     	;# 
   223  1FE9                     	;# 
   224  1FEA                     	;# 
   225  1FEB                     	;# 
   226  1FED                     	;# 
   227  1FEE                     	;# 
   228  1FEF                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  0012                     	;# 
   243  0018                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  009F                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011C                     	;# 
   256  011D                     	;# 
   257  011E                     	;# 
   258  011F                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  018E                     	;# 
   262  018F                     	;# 
   263  0190                     	;# 
   264  0191                     	;# 
   265  0192                     	;# 
   266  020C                     	;# 
   267  020D                     	;# 
   268  020E                     	;# 
   269  020E                     	;# 
   270  020F                     	;# 
   271  020F                     	;# 
   272  0210                     	;# 
   273  0210                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  028C                     	;# 
   277  028C                     	;# 
   278  028D                     	;# 
   279  028D                     	;# 
   280  028E                     	;# 
   281  028F                     	;# 
   282  0290                     	;# 
   283  0291                     	;# 
   284  030C                     	;# 
   285  030C                     	;# 
   286  030D                     	;# 
   287  030E                     	;# 
   288  030F                     	;# 
   289  0310                     	;# 
   290  0310                     	;# 
   291  0311                     	;# 
   292  0312                     	;# 
   293  0313                     	;# 
   294  0314                     	;# 
   295  0314                     	;# 
   296  0315                     	;# 
   297  0316                     	;# 
   298  0318                     	;# 
   299  0318                     	;# 
   300  0319                     	;# 
   301  031A                     	;# 
   302  059C                     	;# 
   303  059C                     	;# 
   304  059D                     	;# 
   305  059D                     	;# 
   306  059E                     	;# 
   307  059F                     	;# 
   308  070C                     	;# 
   309  070D                     	;# 
   310  070E                     	;# 
   311  0716                     	;# 
   312  0717                     	;# 
   313  0718                     	;# 
   314  080C                     	;# 
   315  0811                     	;# 
   316  0813                     	;# 
   317  0814                     	;# 
   318  081A                     	;# 
   319  081A                     	;# 
   320  081B                     	;# 
   321  081C                     	;# 
   322  081C                     	;# 
   323  081D                     	;# 
   324  081E                     	;# 
   325  081F                     	;# 
   326  088E                     	;# 
   327  0890                     	;# 
   328  0891                     	;# 
   329  0892                     	;# 
   330  0893                     	;# 
   331  090C                     	;# 
   332  1E8F                     	;# 
   333  1E90                     	;# 
   334  1E91                     	;# 
   335  1E92                     	;# 
   336  1E93                     	;# 
   337  1E9C                     	;# 
   338  1EA1                     	;# 
   339  1EA2                     	;# 
   340  1EC3                     	;# 
   341  1EC5                     	;# 
   342  1EC6                     	;# 
   343  1EC7                     	;# 
   344  1ECB                     	;# 
   345  1ECB                     	;# 
   346  1ECB                     	;# 
   347  1ECC                     	;# 
   348  1ECC                     	;# 
   349  1ECC                     	;# 
   350  1F10                     	;# 
   351  1F11                     	;# 
   352  1F12                     	;# 
   353  1F14                     	;# 
   354  1F15                     	;# 
   355  1F38                     	;# 
   356  1F39                     	;# 
   357  1F3A                     	;# 
   358  1F3B                     	;# 
   359  1F3C                     	;# 
   360  1F3D                     	;# 
   361  1F3E                     	;# 
   362  1F3F                     	;# 
   363  1FE4                     	;# 
   364  1FE5                     	;# 
   365  1FE6                     	;# 
   366  1FE7                     	;# 
   367  1FE8                     	;# 
   368  1FE8                     	;# 
   369  1FE9                     	;# 
   370  1FEA                     	;# 
   371  1FEB                     	;# 
   372  1FED                     	;# 
   373  1FEE                     	;# 
   374  1FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  0012                     	;# 
   389  0018                     	;# 
   390  009A                     	;# 
   391  009B                     	;# 
   392  009B                     	;# 
   393  009C                     	;# 
   394  009D                     	;# 
   395  009E                     	;# 
   396  009F                     	;# 
   397  0119                     	;# 
   398  011A                     	;# 
   399  011B                     	;# 
   400  011B                     	;# 
   401  011C                     	;# 
   402  011D                     	;# 
   403  011E                     	;# 
   404  011F                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  018E                     	;# 
   408  018F                     	;# 
   409  0190                     	;# 
   410  0191                     	;# 
   411  0192                     	;# 
   412  020C                     	;# 
   413  020D                     	;# 
   414  020E                     	;# 
   415  020E                     	;# 
   416  020F                     	;# 
   417  020F                     	;# 
   418  0210                     	;# 
   419  0210                     	;# 
   420  0211                     	;# 
   421  0211                     	;# 
   422  028C                     	;# 
   423  028C                     	;# 
   424  028D                     	;# 
   425  028D                     	;# 
   426  028E                     	;# 
   427  028F                     	;# 
   428  0290                     	;# 
   429  0291                     	;# 
   430  030C                     	;# 
   431  030C                     	;# 
   432  030D                     	;# 
   433  030E                     	;# 
   434  030F                     	;# 
   435  0310                     	;# 
   436  0310                     	;# 
   437  0311                     	;# 
   438  0312                     	;# 
   439  0313                     	;# 
   440  0314                     	;# 
   441  0314                     	;# 
   442  0315                     	;# 
   443  0316                     	;# 
   444  0318                     	;# 
   445  0318                     	;# 
   446  0319                     	;# 
   447  031A                     	;# 
   448  059C                     	;# 
   449  059C                     	;# 
   450  059D                     	;# 
   451  059D                     	;# 
   452  059E                     	;# 
   453  059F                     	;# 
   454  070C                     	;# 
   455  070D                     	;# 
   456  070E                     	;# 
   457  0716                     	;# 
   458  0717                     	;# 
   459  0718                     	;# 
   460  080C                     	;# 
   461  0811                     	;# 
   462  0813                     	;# 
   463  0814                     	;# 
   464  081A                     	;# 
   465  081A                     	;# 
   466  081B                     	;# 
   467  081C                     	;# 
   468  081C                     	;# 
   469  081D                     	;# 
   470  081E                     	;# 
   471  081F                     	;# 
   472  088E                     	;# 
   473  0890                     	;# 
   474  0891                     	;# 
   475  0892                     	;# 
   476  0893                     	;# 
   477  090C                     	;# 
   478  1E8F                     	;# 
   479  1E90                     	;# 
   480  1E91                     	;# 
   481  1E92                     	;# 
   482  1E93                     	;# 
   483  1E9C                     	;# 
   484  1EA1                     	;# 
   485  1EA2                     	;# 
   486  1EC3                     	;# 
   487  1EC5                     	;# 
   488  1EC6                     	;# 
   489  1EC7                     	;# 
   490  1ECB                     	;# 
   491  1ECB                     	;# 
   492  1ECB                     	;# 
   493  1ECC                     	;# 
   494  1ECC                     	;# 
   495  1ECC                     	;# 
   496  1F10                     	;# 
   497  1F11                     	;# 
   498  1F12                     	;# 
   499  1F14                     	;# 
   500  1F15                     	;# 
   501  1F38                     	;# 
   502  1F39                     	;# 
   503  1F3A                     	;# 
   504  1F3B                     	;# 
   505  1F3C                     	;# 
   506  1F3D                     	;# 
   507  1F3E                     	;# 
   508  1F3F                     	;# 
   509  1FE4                     	;# 
   510  1FE5                     	;# 
   511  1FE6                     	;# 
   512  1FE7                     	;# 
   513  1FE8                     	;# 
   514  1FE8                     	;# 
   515  1FE9                     	;# 
   516  1FEA                     	;# 
   517  1FEB                     	;# 
   518  1FED                     	;# 
   519  1FEE                     	;# 
   520  1FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  0012                     	;# 
   535  0018                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  0119                     	;# 
   544  011A                     	;# 
   545  011B                     	;# 
   546  011B                     	;# 
   547  011C                     	;# 
   548  011D                     	;# 
   549  011E                     	;# 
   550  011F                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  018E                     	;# 
   554  018F                     	;# 
   555  0190                     	;# 
   556  0191                     	;# 
   557  0192                     	;# 
   558  020C                     	;# 
   559  020D                     	;# 
   560  020E                     	;# 
   561  020E                     	;# 
   562  020F                     	;# 
   563  020F                     	;# 
   564  0210                     	;# 
   565  0210                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  028C                     	;# 
   569  028C                     	;# 
   570  028D                     	;# 
   571  028D                     	;# 
   572  028E                     	;# 
   573  028F                     	;# 
   574  0290                     	;# 
   575  0291                     	;# 
   576  030C                     	;# 
   577  030C                     	;# 
   578  030D                     	;# 
   579  030E                     	;# 
   580  030F                     	;# 
   581  0310                     	;# 
   582  0310                     	;# 
   583  0311                     	;# 
   584  0312                     	;# 
   585  0313                     	;# 
   586  0314                     	;# 
   587  0314                     	;# 
   588  0315                     	;# 
   589  0316                     	;# 
   590  0318                     	;# 
   591  0318                     	;# 
   592  0319                     	;# 
   593  031A                     	;# 
   594  059C                     	;# 
   595  059C                     	;# 
   596  059D                     	;# 
   597  059D                     	;# 
   598  059E                     	;# 
   599  059F                     	;# 
   600  070C                     	;# 
   601  070D                     	;# 
   602  070E                     	;# 
   603  0716                     	;# 
   604  0717                     	;# 
   605  0718                     	;# 
   606  080C                     	;# 
   607  0811                     	;# 
   608  0813                     	;# 
   609  0814                     	;# 
   610  081A                     	;# 
   611  081A                     	;# 
   612  081B                     	;# 
   613  081C                     	;# 
   614  081C                     	;# 
   615  081D                     	;# 
   616  081E                     	;# 
   617  081F                     	;# 
   618  088E                     	;# 
   619  0890                     	;# 
   620  0891                     	;# 
   621  0892                     	;# 
   622  0893                     	;# 
   623  090C                     	;# 
   624  1E8F                     	;# 
   625  1E90                     	;# 
   626  1E91                     	;# 
   627  1E92                     	;# 
   628  1E93                     	;# 
   629  1E9C                     	;# 
   630  1EA1                     	;# 
   631  1EA2                     	;# 
   632  1EC3                     	;# 
   633  1EC5                     	;# 
   634  1EC6                     	;# 
   635  1EC7                     	;# 
   636  1ECB                     	;# 
   637  1ECB                     	;# 
   638  1ECB                     	;# 
   639  1ECC                     	;# 
   640  1ECC                     	;# 
   641  1ECC                     	;# 
   642  1F10                     	;# 
   643  1F11                     	;# 
   644  1F12                     	;# 
   645  1F14                     	;# 
   646  1F15                     	;# 
   647  1F38                     	;# 
   648  1F39                     	;# 
   649  1F3A                     	;# 
   650  1F3B                     	;# 
   651  1F3C                     	;# 
   652  1F3D                     	;# 
   653  1F3E                     	;# 
   654  1F3F                     	;# 
   655  1FE4                     	;# 
   656  1FE5                     	;# 
   657  1FE6                     	;# 
   658  1FE7                     	;# 
   659  1FE8                     	;# 
   660  1FE8                     	;# 
   661  1FE9                     	;# 
   662  1FEA                     	;# 
   663  1FEB                     	;# 
   664  1FED                     	;# 
   665  1FEE                     	;# 
   666  1FEF                     	;# 
   667  0000                     	;# 
   668  0001                     	;# 
   669  0002                     	;# 
   670  0003                     	;# 
   671  0004                     	;# 
   672  0005                     	;# 
   673  0006                     	;# 
   674  0007                     	;# 
   675  0008                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  0012                     	;# 
   681  0018                     	;# 
   682  009A                     	;# 
   683  009B                     	;# 
   684  009B                     	;# 
   685  009C                     	;# 
   686  009D                     	;# 
   687  009E                     	;# 
   688  009F                     	;# 
   689  0119                     	;# 
   690  011A                     	;# 
   691  011B                     	;# 
   692  011B                     	;# 
   693  011C                     	;# 
   694  011D                     	;# 
   695  011E                     	;# 
   696  011F                     	;# 
   697  018C                     	;# 
   698  018D                     	;# 
   699  018E                     	;# 
   700  018F                     	;# 
   701  0190                     	;# 
   702  0191                     	;# 
   703  0192                     	;# 
   704  020C                     	;# 
   705  020D                     	;# 
   706  020E                     	;# 
   707  020E                     	;# 
   708  020F                     	;# 
   709  020F                     	;# 
   710  0210                     	;# 
   711  0210                     	;# 
   712  0211                     	;# 
   713  0211                     	;# 
   714  028C                     	;# 
   715  028C                     	;# 
   716  028D                     	;# 
   717  028D                     	;# 
   718  028E                     	;# 
   719  028F                     	;# 
   720  0290                     	;# 
   721  0291                     	;# 
   722  030C                     	;# 
   723  030C                     	;# 
   724  030D                     	;# 
   725  030E                     	;# 
   726  030F                     	;# 
   727  0310                     	;# 
   728  0310                     	;# 
   729  0311                     	;# 
   730  0312                     	;# 
   731  0313                     	;# 
   732  0314                     	;# 
   733  0314                     	;# 
   734  0315                     	;# 
   735  0316                     	;# 
   736  0318                     	;# 
   737  0318                     	;# 
   738  0319                     	;# 
   739  031A                     	;# 
   740  059C                     	;# 
   741  059C                     	;# 
   742  059D                     	;# 
   743  059D                     	;# 
   744  059E                     	;# 
   745  059F                     	;# 
   746  070C                     	;# 
   747  070D                     	;# 
   748  070E                     	;# 
   749  0716                     	;# 
   750  0717                     	;# 
   751  0718                     	;# 
   752  080C                     	;# 
   753  0811                     	;# 
   754  0813                     	;# 
   755  0814                     	;# 
   756  081A                     	;# 
   757  081A                     	;# 
   758  081B                     	;# 
   759  081C                     	;# 
   760  081C                     	;# 
   761  081D                     	;# 
   762  081E                     	;# 
   763  081F                     	;# 
   764  088E                     	;# 
   765  0890                     	;# 
   766  0891                     	;# 
   767  0892                     	;# 
   768  0893                     	;# 
   769  090C                     	;# 
   770  1E8F                     	;# 
   771  1E90                     	;# 
   772  1E91                     	;# 
   773  1E92                     	;# 
   774  1E93                     	;# 
   775  1E9C                     	;# 
   776  1EA1                     	;# 
   777  1EA2                     	;# 
   778  1EC3                     	;# 
   779  1EC5                     	;# 
   780  1EC6                     	;# 
   781  1EC7                     	;# 
   782  1ECB                     	;# 
   783  1ECB                     	;# 
   784  1ECB                     	;# 
   785  1ECC                     	;# 
   786  1ECC                     	;# 
   787  1ECC                     	;# 
   788  1F10                     	;# 
   789  1F11                     	;# 
   790  1F12                     	;# 
   791  1F14                     	;# 
   792  1F15                     	;# 
   793  1F38                     	;# 
   794  1F39                     	;# 
   795  1F3A                     	;# 
   796  1F3B                     	;# 
   797  1F3C                     	;# 
   798  1F3D                     	;# 
   799  1F3E                     	;# 
   800  1F3F                     	;# 
   801  1FE4                     	;# 
   802  1FE5                     	;# 
   803  1FE6                     	;# 
   804  1FE7                     	;# 
   805  1FE8                     	;# 
   806  1FE8                     	;# 
   807  1FE9                     	;# 
   808  1FEA                     	;# 
   809  1FEB                     	;# 
   810  1FED                     	;# 
   811  1FEE                     	;# 
   812  1FEF                     	;# 
   813  0000                     	;# 
   814  0001                     	;# 
   815  0002                     	;# 
   816  0003                     	;# 
   817  0004                     	;# 
   818  0005                     	;# 
   819  0006                     	;# 
   820  0007                     	;# 
   821  0008                     	;# 
   822  0009                     	;# 
   823  000A                     	;# 
   824  000B                     	;# 
   825  000C                     	;# 
   826  0012                     	;# 
   827  0018                     	;# 
   828  009A                     	;# 
   829  009B                     	;# 
   830  009B                     	;# 
   831  009C                     	;# 
   832  009D                     	;# 
   833  009E                     	;# 
   834  009F                     	;# 
   835  0119                     	;# 
   836  011A                     	;# 
   837  011B                     	;# 
   838  011B                     	;# 
   839  011C                     	;# 
   840  011D                     	;# 
   841  011E                     	;# 
   842  011F                     	;# 
   843  018C                     	;# 
   844  018D                     	;# 
   845  018E                     	;# 
   846  018F                     	;# 
   847  0190                     	;# 
   848  0191                     	;# 
   849  0192                     	;# 
   850  020C                     	;# 
   851  020D                     	;# 
   852  020E                     	;# 
   853  020E                     	;# 
   854  020F                     	;# 
   855  020F                     	;# 
   856  0210                     	;# 
   857  0210                     	;# 
   858  0211                     	;# 
   859  0211                     	;# 
   860  028C                     	;# 
   861  028C                     	;# 
   862  028D                     	;# 
   863  028D                     	;# 
   864  028E                     	;# 
   865  028F                     	;# 
   866  0290                     	;# 
   867  0291                     	;# 
   868  030C                     	;# 
   869  030C                     	;# 
   870  030D                     	;# 
   871  030E                     	;# 
   872  030F                     	;# 
   873  0310                     	;# 
   874  0310                     	;# 
   875  0311                     	;# 
   876  0312                     	;# 
   877  0313                     	;# 
   878  0314                     	;# 
   879  0314                     	;# 
   880  0315                     	;# 
   881  0316                     	;# 
   882  0318                     	;# 
   883  0318                     	;# 
   884  0319                     	;# 
   885  031A                     	;# 
   886  059C                     	;# 
   887  059C                     	;# 
   888  059D                     	;# 
   889  059D                     	;# 
   890  059E                     	;# 
   891  059F                     	;# 
   892  070C                     	;# 
   893  070D                     	;# 
   894  070E                     	;# 
   895  0716                     	;# 
   896  0717                     	;# 
   897  0718                     	;# 
   898  080C                     	;# 
   899  0811                     	;# 
   900  0813                     	;# 
   901  0814                     	;# 
   902  081A                     	;# 
   903  081A                     	;# 
   904  081B                     	;# 
   905  081C                     	;# 
   906  081C                     	;# 
   907  081D                     	;# 
   908  081E                     	;# 
   909  081F                     	;# 
   910  088E                     	;# 
   911  0890                     	;# 
   912  0891                     	;# 
   913  0892                     	;# 
   914  0893                     	;# 
   915  090C                     	;# 
   916  1E8F                     	;# 
   917  1E90                     	;# 
   918  1E91                     	;# 
   919  1E92                     	;# 
   920  1E93                     	;# 
   921  1E9C                     	;# 
   922  1EA1                     	;# 
   923  1EA2                     	;# 
   924  1EC3                     	;# 
   925  1EC5                     	;# 
   926  1EC6                     	;# 
   927  1EC7                     	;# 
   928  1ECB                     	;# 
   929  1ECB                     	;# 
   930  1ECB                     	;# 
   931  1ECC                     	;# 
   932  1ECC                     	;# 
   933  1ECC                     	;# 
   934  1F10                     	;# 
   935  1F11                     	;# 
   936  1F12                     	;# 
   937  1F14                     	;# 
   938  1F15                     	;# 
   939  1F38                     	;# 
   940  1F39                     	;# 
   941  1F3A                     	;# 
   942  1F3B                     	;# 
   943  1F3C                     	;# 
   944  1F3D                     	;# 
   945  1F3E                     	;# 
   946  1F3F                     	;# 
   947  1FE4                     	;# 
   948  1FE5                     	;# 
   949  1FE6                     	;# 
   950  1FE7                     	;# 
   951  1FE8                     	;# 
   952  1FE8                     	;# 
   953  1FE9                     	;# 
   954  1FEA                     	;# 
   955  1FEB                     	;# 
   956  1FED                     	;# 
   957  1FEE                     	;# 
   958  1FEF                     	;# 
   959  0000                     	;# 
   960  0001                     	;# 
   961  0002                     	;# 
   962  0003                     	;# 
   963  0004                     	;# 
   964  0005                     	;# 
   965  0006                     	;# 
   966  0007                     	;# 
   967  0008                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  0012                     	;# 
   973  0018                     	;# 
   974  009A                     	;# 
   975  009B                     	;# 
   976  009B                     	;# 
   977  009C                     	;# 
   978  009D                     	;# 
   979  009E                     	;# 
   980  009F                     	;# 
   981  0119                     	;# 
   982  011A                     	;# 
   983  011B                     	;# 
   984  011B                     	;# 
   985  011C                     	;# 
   986  011D                     	;# 
   987  011E                     	;# 
   988  011F                     	;# 
   989  018C                     	;# 
   990  018D                     	;# 
   991  018E                     	;# 
   992  018F                     	;# 
   993  0190                     	;# 
   994  0191                     	;# 
   995  0192                     	;# 
   996  020C                     	;# 
   997  020D                     	;# 
   998  020E                     	;# 
   999  020E                     	;# 
  1000  020F                     	;# 
  1001  020F                     	;# 
  1002  0210                     	;# 
  1003  0210                     	;# 
  1004  0211                     	;# 
  1005  0211                     	;# 
  1006  028C                     	;# 
  1007  028C                     	;# 
  1008  028D                     	;# 
  1009  028D                     	;# 
  1010  028E                     	;# 
  1011  028F                     	;# 
  1012  0290                     	;# 
  1013  0291                     	;# 
  1014  030C                     	;# 
  1015  030C                     	;# 
  1016  030D                     	;# 
  1017  030E                     	;# 
  1018  030F                     	;# 
  1019  0310                     	;# 
  1020  0310                     	;# 
  1021  0311                     	;# 
  1022  0312                     	;# 
  1023  0313                     	;# 
  1024  0314                     	;# 
  1025  0314                     	;# 
  1026  0315                     	;# 
  1027  0316                     	;# 
  1028  0318                     	;# 
  1029  0318                     	;# 
  1030  0319                     	;# 
  1031  031A                     	;# 
  1032  059C                     	;# 
  1033  059C                     	;# 
  1034  059D                     	;# 
  1035  059D                     	;# 
  1036  059E                     	;# 
  1037  059F                     	;# 
  1038  070C                     	;# 
  1039  070D                     	;# 
  1040  070E                     	;# 
  1041  0716                     	;# 
  1042  0717                     	;# 
  1043  0718                     	;# 
  1044  080C                     	;# 
  1045  0811                     	;# 
  1046  0813                     	;# 
  1047  0814                     	;# 
  1048  081A                     	;# 
  1049  081A                     	;# 
  1050  081B                     	;# 
  1051  081C                     	;# 
  1052  081C                     	;# 
  1053  081D                     	;# 
  1054  081E                     	;# 
  1055  081F                     	;# 
  1056  088E                     	;# 
  1057  0890                     	;# 
  1058  0891                     	;# 
  1059  0892                     	;# 
  1060  0893                     	;# 
  1061  090C                     	;# 
  1062  1E8F                     	;# 
  1063  1E90                     	;# 
  1064  1E91                     	;# 
  1065  1E92                     	;# 
  1066  1E93                     	;# 
  1067  1E9C                     	;# 
  1068  1EA1                     	;# 
  1069  1EA2                     	;# 
  1070  1EC3                     	;# 
  1071  1EC5                     	;# 
  1072  1EC6                     	;# 
  1073  1EC7                     	;# 
  1074  1ECB                     	;# 
  1075  1ECB                     	;# 
  1076  1ECB                     	;# 
  1077  1ECC                     	;# 
  1078  1ECC                     	;# 
  1079  1ECC                     	;# 
  1080  1F10                     	;# 
  1081  1F11                     	;# 
  1082  1F12                     	;# 
  1083  1F14                     	;# 
  1084  1F15                     	;# 
  1085  1F38                     	;# 
  1086  1F39                     	;# 
  1087  1F3A                     	;# 
  1088  1F3B                     	;# 
  1089  1F3C                     	;# 
  1090  1F3D                     	;# 
  1091  1F3E                     	;# 
  1092  1F3F                     	;# 
  1093  1FE4                     	;# 
  1094  1FE5                     	;# 
  1095  1FE6                     	;# 
  1096  1FE7                     	;# 
  1097  1FE8                     	;# 
  1098  1FE8                     	;# 
  1099  1FE9                     	;# 
  1100  1FEA                     	;# 
  1101  1FEB                     	;# 
  1102  1FED                     	;# 
  1103  1FEE                     	;# 
  1104  1FEF                     	;# 
  1105  0000                     	;# 
  1106  0001                     	;# 
  1107  0002                     	;# 
  1108  0003                     	;# 
  1109  0004                     	;# 
  1110  0005                     	;# 
  1111  0006                     	;# 
  1112  0007                     	;# 
  1113  0008                     	;# 
  1114  0009                     	;# 
  1115  000A                     	;# 
  1116  000B                     	;# 
  1117  000C                     	;# 
  1118  0012                     	;# 
  1119  0018                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  009F                     	;# 
  1127  0119                     	;# 
  1128  011A                     	;# 
  1129  011B                     	;# 
  1130  011B                     	;# 
  1131  011C                     	;# 
  1132  011D                     	;# 
  1133  011E                     	;# 
  1134  011F                     	;# 
  1135  018C                     	;# 
  1136  018D                     	;# 
  1137  018E                     	;# 
  1138  018F                     	;# 
  1139  0190                     	;# 
  1140  0191                     	;# 
  1141  0192                     	;# 
  1142  020C                     	;# 
  1143  020D                     	;# 
  1144  020E                     	;# 
  1145  020E                     	;# 
  1146  020F                     	;# 
  1147  020F                     	;# 
  1148  0210                     	;# 
  1149  0210                     	;# 
  1150  0211                     	;# 
  1151  0211                     	;# 
  1152  028C                     	;# 
  1153  028C                     	;# 
  1154  028D                     	;# 
  1155  028D                     	;# 
  1156  028E                     	;# 
  1157  028F                     	;# 
  1158  0290                     	;# 
  1159  0291                     	;# 
  1160  030C                     	;# 
  1161  030C                     	;# 
  1162  030D                     	;# 
  1163  030E                     	;# 
  1164  030F                     	;# 
  1165  0310                     	;# 
  1166  0310                     	;# 
  1167  0311                     	;# 
  1168  0312                     	;# 
  1169  0313                     	;# 
  1170  0314                     	;# 
  1171  0314                     	;# 
  1172  0315                     	;# 
  1173  0316                     	;# 
  1174  0318                     	;# 
  1175  0318                     	;# 
  1176  0319                     	;# 
  1177  031A                     	;# 
  1178  059C                     	;# 
  1179  059C                     	;# 
  1180  059D                     	;# 
  1181  059D                     	;# 
  1182  059E                     	;# 
  1183  059F                     	;# 
  1184  070C                     	;# 
  1185  070D                     	;# 
  1186  070E                     	;# 
  1187  0716                     	;# 
  1188  0717                     	;# 
  1189  0718                     	;# 
  1190  080C                     	;# 
  1191  0811                     	;# 
  1192  0813                     	;# 
  1193  0814                     	;# 
  1194  081A                     	;# 
  1195  081A                     	;# 
  1196  081B                     	;# 
  1197  081C                     	;# 
  1198  081C                     	;# 
  1199  081D                     	;# 
  1200  081E                     	;# 
  1201  081F                     	;# 
  1202  088E                     	;# 
  1203  0890                     	;# 
  1204  0891                     	;# 
  1205  0892                     	;# 
  1206  0893                     	;# 
  1207  090C                     	;# 
  1208  1E8F                     	;# 
  1209  1E90                     	;# 
  1210  1E91                     	;# 
  1211  1E92                     	;# 
  1212  1E93                     	;# 
  1213  1E9C                     	;# 
  1214  1EA1                     	;# 
  1215  1EA2                     	;# 
  1216  1EC3                     	;# 
  1217  1EC5                     	;# 
  1218  1EC6                     	;# 
  1219  1EC7                     	;# 
  1220  1ECB                     	;# 
  1221  1ECB                     	;# 
  1222  1ECB                     	;# 
  1223  1ECC                     	;# 
  1224  1ECC                     	;# 
  1225  1ECC                     	;# 
  1226  1F10                     	;# 
  1227  1F11                     	;# 
  1228  1F12                     	;# 
  1229  1F14                     	;# 
  1230  1F15                     	;# 
  1231  1F38                     	;# 
  1232  1F39                     	;# 
  1233  1F3A                     	;# 
  1234  1F3B                     	;# 
  1235  1F3C                     	;# 
  1236  1F3D                     	;# 
  1237  1F3E                     	;# 
  1238  1F3F                     	;# 
  1239  1FE4                     	;# 
  1240  1FE5                     	;# 
  1241  1FE6                     	;# 
  1242  1FE7                     	;# 
  1243  1FE8                     	;# 
  1244  1FE8                     	;# 
  1245  1FE9                     	;# 
  1246  1FEA                     	;# 
  1247  1FEB                     	;# 
  1248  1FED                     	;# 
  1249  1FEE                     	;# 
  1250  1FEF                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0008                     	;# 
  1260  0009                     	;# 
  1261  000A                     	;# 
  1262  000B                     	;# 
  1263  000C                     	;# 
  1264  0012                     	;# 
  1265  0018                     	;# 
  1266  009A                     	;# 
  1267  009B                     	;# 
  1268  009B                     	;# 
  1269  009C                     	;# 
  1270  009D                     	;# 
  1271  009E                     	;# 
  1272  009F                     	;# 
  1273  0119                     	;# 
  1274  011A                     	;# 
  1275  011B                     	;# 
  1276  011B                     	;# 
  1277  011C                     	;# 
  1278  011D                     	;# 
  1279  011E                     	;# 
  1280  011F                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  018E                     	;# 
  1284  018F                     	;# 
  1285  0190                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  020C                     	;# 
  1289  020D                     	;# 
  1290  020E                     	;# 
  1291  020E                     	;# 
  1292  020F                     	;# 
  1293  020F                     	;# 
  1294  0210                     	;# 
  1295  0210                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  028C                     	;# 
  1299  028C                     	;# 
  1300  028D                     	;# 
  1301  028D                     	;# 
  1302  028E                     	;# 
  1303  028F                     	;# 
  1304  0290                     	;# 
  1305  0291                     	;# 
  1306  030C                     	;# 
  1307  030C                     	;# 
  1308  030D                     	;# 
  1309  030E                     	;# 
  1310  030F                     	;# 
  1311  0310                     	;# 
  1312  0310                     	;# 
  1313  0311                     	;# 
  1314  0312                     	;# 
  1315  0313                     	;# 
  1316  0314                     	;# 
  1317  0314                     	;# 
  1318  0315                     	;# 
  1319  0316                     	;# 
  1320  0318                     	;# 
  1321  0318                     	;# 
  1322  0319                     	;# 
  1323  031A                     	;# 
  1324  059C                     	;# 
  1325  059C                     	;# 
  1326  059D                     	;# 
  1327  059D                     	;# 
  1328  059E                     	;# 
  1329  059F                     	;# 
  1330  070C                     	;# 
  1331  070D                     	;# 
  1332  070E                     	;# 
  1333  0716                     	;# 
  1334  0717                     	;# 
  1335  0718                     	;# 
  1336  080C                     	;# 
  1337  0811                     	;# 
  1338  0813                     	;# 
  1339  0814                     	;# 
  1340  081A                     	;# 
  1341  081A                     	;# 
  1342  081B                     	;# 
  1343  081C                     	;# 
  1344  081C                     	;# 
  1345  081D                     	;# 
  1346  081E                     	;# 
  1347  081F                     	;# 
  1348  088E                     	;# 
  1349  0890                     	;# 
  1350  0891                     	;# 
  1351  0892                     	;# 
  1352  0893                     	;# 
  1353  090C                     	;# 
  1354  1E8F                     	;# 
  1355  1E90                     	;# 
  1356  1E91                     	;# 
  1357  1E92                     	;# 
  1358  1E93                     	;# 
  1359  1E9C                     	;# 
  1360  1EA1                     	;# 
  1361  1EA2                     	;# 
  1362  1EC3                     	;# 
  1363  1EC5                     	;# 
  1364  1EC6                     	;# 
  1365  1EC7                     	;# 
  1366  1ECB                     	;# 
  1367  1ECB                     	;# 
  1368  1ECB                     	;# 
  1369  1ECC                     	;# 
  1370  1ECC                     	;# 
  1371  1ECC                     	;# 
  1372  1F10                     	;# 
  1373  1F11                     	;# 
  1374  1F12                     	;# 
  1375  1F14                     	;# 
  1376  1F15                     	;# 
  1377  1F38                     	;# 
  1378  1F39                     	;# 
  1379  1F3A                     	;# 
  1380  1F3B                     	;# 
  1381  1F3C                     	;# 
  1382  1F3D                     	;# 
  1383  1F3E                     	;# 
  1384  1F3F                     	;# 
  1385  1FE4                     	;# 
  1386  1FE5                     	;# 
  1387  1FE6                     	;# 
  1388  1FE7                     	;# 
  1389  1FE8                     	;# 
  1390  1FE8                     	;# 
  1391  1FE9                     	;# 
  1392  1FEA                     	;# 
  1393  1FEB                     	;# 
  1394  1FED                     	;# 
  1395  1FEE                     	;# 
  1396  1FEF                     	;# 
  1397                           
  1398                           	psect	idataBANK0
  1399  0771                     __pidataBANK0:
  1400                           
  1401                           ;initializer for _ADC_Tol
  1402  0771  34CC               	retlw	204
  1403  0772  3400               	retlw	0
  1404                           
  1405                           ;initializer for _ADCAverage
  1406  0773  34FF               	retlw	255
  1407  0774  3401               	retlw	1
  1408                           
  1409                           	psect	nvBANK0
  1410  005C                     __pnvBANK0:
  1411  005C                     _ADC_InterruptHandler:
  1412  005C                     	ds	2
  1413  005E                     _timer1ReloadVal:
  1414  005E                     	ds	2
  1415  000C                     _PORTAbits	set	12
  1416  0018                     _LATAbits	set	24
  1417  000B                     _INTCONbits	set	11
  1418  0012                     _TRISA	set	18
  1419  0018                     _LATA	set	24
  1420  009D                     _ADCON0bits	set	157
  1421  009D                     _ADCON0	set	157
  1422  009C                     _ADRESH	set	156
  1423  009B                     _ADRESL	set	155
  1424  009E                     _ADCON1	set	158
  1425  020F                     _T1GCONbits	set	527
  1426  020E                     _T1CONbits	set	526
  1427  020E                     _T1CON	set	526
  1428  020C                     _TMR1L	set	524
  1429  020D                     _TMR1H	set	525
  1430  0211                     _T1CLK	set	529
  1431  0210                     _T1GATE	set	528
  1432  020F                     _T1GCON	set	527
  1433  028D                     _PR2	set	653
  1434  028C                     _TMR2	set	652
  1435  028E                     _T2CONbits	set	654
  1436  0291                     _T2RSTbits	set	657
  1437  028F                     _T2HLTbits	set	655
  1438  028E                     _T2CON	set	654
  1439  028C                     _T2TMR	set	652
  1440  028D                     _T2PR	set	653
  1441  0291                     _T2RST	set	657
  1442  028F                     _T2HLT	set	655
  1443  0290                     _T2CLKCON	set	656
  1444  0314                     _PWM3DCL	set	788
  1445  0315                     _PWM3DCH	set	789
  1446  0316                     _PWM3CON	set	790
  1447  0717                     _PIE1bits	set	1815
  1448  070D                     _PIR1bits	set	1805
  1449  080C                     _WDTCON	set	2060
  1450  0892                     _OSCTUNE	set	2194
  1451  0893                     _OSCFRQ	set	2195
  1452  0891                     _OSCEN	set	2193
  1453  1EC3                     _ADACTPPS	set	7875
  1454  1F14                     _RA4PPS	set	7956
  1455  1F3C                     _INLVLA	set	7996
  1456  1F3B                     _SLRCONA	set	7995
  1457  1F3A                     _ODCONA	set	7994
  1458  1F39                     _WPUA	set	7993
  1459  1F38                     _ANSELA	set	7992
  1460                           
  1461                           	psect	cinit
  1462  0010                     start_initialization:	
  1463                           ; #config settings
  1464                           
  1465  0010                     __initialization:
  1466                           
  1467                           ; Initialize objects allocated to BANK0
  1468  0010  2771               	fcall	__pidataBANK0	;fetch initializer
  1469  0011  00E0               	movwf	__pdataBANK0& (0+127)
  1470  0012  2772               	fcall	__pidataBANK0+1	;fetch initializer
  1471  0013  00E1               	movwf	(__pdataBANK0+1)& (0+127)
  1472  0014  2773               	fcall	__pidataBANK0+2	;fetch initializer
  1473  0015  00E2               	movwf	(__pdataBANK0+2)& (0+127)
  1474  0016  2774               	fcall	__pidataBANK0+3	;fetch initializer
  1475  0017  00E3               	movwf	(__pdataBANK0+3)& (0+127)
  1476                           
  1477                           ; Clear objects allocated to BANK0
  1478  0018  01D2               	clrf	__pbssBANK0& (0+127)
  1479  0019  01D3               	clrf	(__pbssBANK0+1)& (0+127)
  1480  001A  01D4               	clrf	(__pbssBANK0+2)& (0+127)
  1481  001B  01D5               	clrf	(__pbssBANK0+3)& (0+127)
  1482  001C  01D6               	clrf	(__pbssBANK0+4)& (0+127)
  1483  001D  01D7               	clrf	(__pbssBANK0+5)& (0+127)
  1484  001E  01D8               	clrf	(__pbssBANK0+6)& (0+127)
  1485  001F  01D9               	clrf	(__pbssBANK0+7)& (0+127)
  1486  0020  01DA               	clrf	(__pbssBANK0+8)& (0+127)
  1487  0021  01DB               	clrf	(__pbssBANK0+9)& (0+127)
  1488  0022                     end_of_initialization:	
  1489                           ;End of C runtime variable initialization code
  1490                           
  1491  0022                     __end_of__initialization:
  1492  0022  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1493  0023  0140               	movlb	0
  1494  0024  2C3F               	ljmp	_main	;jump to C main() function
  1495                           
  1496                           	psect	bssBANK0
  1497  0052                     __pbssBANK0:
  1498  0052                     _InactiveADC:
  1499  0052                     	ds	4
  1500  0056                     _ADCValue:
  1501  0056                     	ds	2
  1502  0058                     _seed:
  1503  0058                     	ds	4
  1504                           
  1505                           	psect	dataBANK0
  1506  0060                     __pdataBANK0:
  1507  0060                     _ADC_Tol:
  1508  0060                     	ds	2
  1509  0062                     _ADCAverage:
  1510  0062                     	ds	2
  1511                           
  1512                           	psect	cstackBANK1
  1513  00A0                     __pcstackBANK1:
  1514  00A0                     ADCP@i:
  1515  00A0                     Wave@Cycles:	
  1516                           ; 2 bytes @ 0x0
  1517                           
  1518                           
  1519                           ; 2 bytes @ 0x0
  1520  00A0                     	ds	2
  1521  00A2                     ADCP@ii:
  1522  00A2                     Wave@i:	
  1523                           ; 2 bytes @ 0x2
  1524                           
  1525                           
  1526                           ; 2 bytes @ 0x2
  1527  00A2                     	ds	2
  1528  00A4                     ADCP@DutyValue:
  1529  00A4                     Wave@i_801:	
  1530                           ; 2 bytes @ 0x4
  1531                           
  1532                           
  1533                           ; 2 bytes @ 0x4
  1534  00A4                     	ds	2
  1535  00A6                     Wave@InactivePeriod:
  1536                           
  1537                           ; 2 bytes @ 0x6
  1538  00A6                     	ds	2
  1539  00A8                     Wave@x:
  1540                           
  1541                           ; 2 bytes @ 0x8
  1542  00A8                     	ds	2
  1543  00AA                     Wave@x_798:
  1544                           
  1545                           ; 2 bytes @ 0xA
  1546  00AA                     	ds	2
  1547  00AC                     Wave@x_799:
  1548                           
  1549                           ; 2 bytes @ 0xC
  1550  00AC                     	ds	2
  1551  00AE                     Wave@x_800:
  1552                           
  1553                           ; 2 bytes @ 0xE
  1554  00AE                     	ds	2
  1555  00B0                     Wave@Event_Length:
  1556                           
  1557                           ; 2 bytes @ 0x10
  1558  00B0                     	ds	2
  1559  00B2                     Wave@ActivePeriod:
  1560                           
  1561                           ; 2 bytes @ 0x12
  1562  00B2                     	ds	2
  1563  00B4                     ??_main:
  1564                           
  1565                           ; 1 bytes @ 0x14
  1566  00B4                     	ds	1
  1567                           
  1568                           	psect	cstackCOMMON
  1569  0070                     __pcstackCOMMON:
  1570  0070                     ?_PIN_MANAGER_Initialize:
  1571  0070                     ?_OSCILLATOR_Initialize:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_WDT_Initialize:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_ADC_Initialize:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_PWM3_Initialize:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_ADC_ISR:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_ADC_DefaultInterruptHandler:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ??_ADC_DefaultInterruptHandler:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_ADCEvent:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_Constant:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_ADCP:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_RestPeriod:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_TMR2_Initialize:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_TMR1_Initialize:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_SYSTEM_Initialize:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_INTERRUPT_InterruptManager:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_main:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_ADC_Activity:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_ADC_GetConversionResult:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?___xxtofl:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628  0070                     ADC_Activity@Value:	
  1629                           ; 4 bytes @ 0x0
  1630                           
  1631  0070                     ___xxtofl@val:	
  1632                           ; 2 bytes @ 0x0
  1633                           
  1634                           
  1635                           ; 4 bytes @ 0x0
  1636  0070                     	ds	2
  1637  0072                     ??_ADC_GetConversionResult:
  1638  0072                     ??_ADC_Activity:	
  1639                           ; 1 bytes @ 0x2
  1640                           
  1641                           
  1642                           ; 1 bytes @ 0x2
  1643  0072                     	ds	2
  1644  0074                     ??___xxtofl:
  1645  0074                     _ADC_Activity$779:	
  1646                           ; 1 bytes @ 0x4
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x4
  1650  0074                     	ds	4
  1651  0078                     ___xxtofl@sign:
  1652                           
  1653                           ; 1 bytes @ 0x8
  1654  0078                     	ds	1
  1655  0079                     ___xxtofl@exp:
  1656                           
  1657                           ; 1 bytes @ 0x9
  1658  0079                     	ds	1
  1659  007A                     ___xxtofl@arg:
  1660                           
  1661                           ; 4 bytes @ 0xA
  1662  007A                     	ds	4
  1663  007E                     ??_ADC_ISR:
  1664  007E                     ??_ADCEvent:	
  1665                           ; 1 bytes @ 0xE
  1666                           
  1667  007E                     ??_INTERRUPT_InterruptManager:	
  1668                           ; 1 bytes @ 0xE
  1669                           
  1670                           
  1671                           	psect	cstackBANK0
  1672  0020                     __pcstackBANK0:	
  1673                           ; 1 bytes @ 0xE
  1674                           
  1675  0020                     ?___flge:
  1676  0020                     ___flge@ff1:	
  1677                           ; 1 bit 
  1678                           
  1679                           
  1680                           ; 4 bytes @ 0x0
  1681  0020                     	ds	4
  1682  0024                     ___flge@ff2:
  1683                           
  1684                           ; 4 bytes @ 0x4
  1685  0024                     	ds	4
  1686  0028                     ??___flge:
  1687                           
  1688                           ; 1 bytes @ 0x8
  1689  0028                     	ds	4
  1690  002C                     ??_PIN_MANAGER_Initialize:
  1691  002C                     ??_OSCILLATOR_Initialize:	
  1692                           ; 1 bytes @ 0xC
  1693                           
  1694  002C                     ??_WDT_Initialize:	
  1695                           ; 1 bytes @ 0xC
  1696                           
  1697  002C                     ??_PWM3_Initialize:	
  1698                           ; 1 bytes @ 0xC
  1699                           
  1700  002C                     ?_ADC_SetInterruptHandler:	
  1701                           ; 1 bytes @ 0xC
  1702                           
  1703  002C                     ??_TMR2_Initialize:	
  1704                           ; 1 bytes @ 0xC
  1705                           
  1706  002C                     ??_TMR1_Initialize:	
  1707                           ; 1 bytes @ 0xC
  1708                           
  1709  002C                     ?_PWM3_LoadDutyValue:	
  1710                           ; 1 bytes @ 0xC
  1711                           
  1712  002C                     ?___awdiv:	
  1713                           ; 1 bytes @ 0xC
  1714                           
  1715  002C                     ?___lwdiv:	
  1716                           ; 2 bytes @ 0xC
  1717                           
  1718  002C                     ?___lmul:	
  1719                           ; 2 bytes @ 0xC
  1720                           
  1721  002C                     PWM3_LoadDutyValue@dutyValue:	
  1722                           ; 4 bytes @ 0xC
  1723                           
  1724  002C                     ADC_SetInterruptHandler@InterruptHandler:	
  1725                           ; 2 bytes @ 0xC
  1726                           
  1727  002C                     ___awdiv@divisor:	
  1728                           ; 2 bytes @ 0xC
  1729                           
  1730  002C                     ___lwdiv@divisor:	
  1731                           ; 2 bytes @ 0xC
  1732                           
  1733  002C                     ___lmul@multiplier:	
  1734                           ; 2 bytes @ 0xC
  1735                           
  1736                           
  1737                           ; 4 bytes @ 0xC
  1738  002C                     	ds	2
  1739  002E                     ??_ADC_Initialize:
  1740  002E                     ??_ADC_SetInterruptHandler:	
  1741                           ; 1 bytes @ 0xE
  1742                           
  1743  002E                     ??_SYSTEM_Initialize:	
  1744                           ; 1 bytes @ 0xE
  1745                           
  1746  002E                     ??_PWM3_LoadDutyValue:	
  1747                           ; 1 bytes @ 0xE
  1748                           
  1749  002E                     ___awdiv@dividend:	
  1750                           ; 1 bytes @ 0xE
  1751                           
  1752  002E                     ___lwdiv@dividend:	
  1753                           ; 2 bytes @ 0xE
  1754                           
  1755                           
  1756                           ; 2 bytes @ 0xE
  1757  002E                     	ds	2
  1758  0030                     ??___awdiv:
  1759  0030                     ??___lwdiv:	
  1760                           ; 1 bytes @ 0x10
  1761                           
  1762  0030                     ___lmul@multiplicand:	
  1763                           ; 1 bytes @ 0x10
  1764                           
  1765                           
  1766                           ; 4 bytes @ 0x10
  1767  0030                     	ds	1
  1768  0031                     ___awdiv@counter:
  1769  0031                     ___lwdiv@counter:	
  1770                           ; 1 bytes @ 0x11
  1771                           
  1772                           
  1773                           ; 1 bytes @ 0x11
  1774  0031                     	ds	1
  1775  0032                     ___awdiv@sign:
  1776  0032                     ___lwdiv@quotient:	
  1777                           ; 1 bytes @ 0x12
  1778                           
  1779                           
  1780                           ; 2 bytes @ 0x12
  1781  0032                     	ds	1
  1782  0033                     ___awdiv@quotient:
  1783                           
  1784                           ; 2 bytes @ 0x13
  1785  0033                     	ds	1
  1786  0034                     ??___lmul:
  1787  0034                     ?___wmul:	
  1788                           ; 1 bytes @ 0x14
  1789                           
  1790  0034                     ___wmul@multiplier:	
  1791                           ; 2 bytes @ 0x14
  1792                           
  1793  0034                     ___lmul@product:	
  1794                           ; 2 bytes @ 0x14
  1795                           
  1796                           
  1797                           ; 4 bytes @ 0x14
  1798  0034                     	ds	1
  1799  0035                     ?_delay_ms:
  1800  0035                     delay_ms@count:	
  1801                           ; 1 bytes @ 0x15
  1802                           
  1803                           
  1804                           ; 2 bytes @ 0x15
  1805  0035                     	ds	1
  1806  0036                     ___wmul@multiplicand:
  1807                           
  1808                           ; 2 bytes @ 0x16
  1809  0036                     	ds	1
  1810  0037                     ??_delay_ms:
  1811                           
  1812                           ; 1 bytes @ 0x17
  1813  0037                     	ds	1
  1814  0038                     ??___wmul:
  1815  0038                     ?_rand:	
  1816                           ; 1 bytes @ 0x18
  1817                           
  1818  0038                     delay_ms@i:	
  1819                           ; 2 bytes @ 0x18
  1820                           
  1821  0038                     ___wmul@product:	
  1822                           ; 2 bytes @ 0x18
  1823                           
  1824                           
  1825                           ; 2 bytes @ 0x18
  1826  0038                     	ds	2
  1827  003A                     ??_rand:
  1828                           
$ 1829                           ; 1"bùtes @ 0x1A
 `1830  00³A                     ds	4
  1831  203E    )                ?___awmod:
  132`$003E                     ___awmod@divisor:	
  1833                        (   2 bytes @ 0x1E
 `1834          (                
  1035 (           !    !        
  1836               !          ; 2 "ytes @ 0x1E
  1(37  003E       `             	ds	2
  1838  0040                     ___awmmd@divhdend:
  1839                   (       
 $1840         "  $  !          (; 2 byt%s @ 0x20
  1841  °040      ¡              	ds	2
  1842  0042              !      ??___awmodz
  1843          0             "0 
  1844 (                         + 1 bytes @ 0x22
  1845  0042      (   !  ( "     	fs	1
 "1846  0043                     ___awmod@counter:
  847                           
  1848                 !         ; 1 bytes @ 0x23
  1849  0043      !  "           	ds	1J  1850  0044       $             ___awmod@sign:
  1851         !                 
  1852                           ; 1 bytes @ 0x24
  1853  0044                     	ds	1
  1854  0045                     ?_RandomRange:
  1855  0045                     RandomRange@low:	
  1856                           ; 2 bytes @ 0x25
  1857                           
  1858                           
  1859                           ; 2 bytes @ 0x25
  1860  0045                     	ds	2
  1861  0047                     RandomRange@high:
  1862                           
  1863                           ; 2 bytes @ 0x27
  1864  0047                     	ds	2
  1865  0049                     ?_delay_s:
  1866  0049                     ??_ADCP:	
  1867                           ; 1 bytes @ 0x29
  1868                           
  1869  0049                     ??_RandomRange:	
  1870                           ; 1 bytes @ 0x29
  1871                           
  1872  0049                     ?_SelectEvent:	
  1873                           ; 1 bytes @ 0x29
  1874                           
  1875  0049                     delay_s@count:	
  1876                           ; 2 bytes @ 0x29
  1877                           
  1878                           
  1879                           ; 2 bytes @ 0x29
  1880  0049                     	ds	2
  1881  004B                     ??_delay_s:
  1882  004B                     ??_SelectEvent:	
  1883                           ; 1 bytes @ 0x2B
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0x2B
  1887  004B                     	ds	1
  1888  004C                     SelectEvent@x:
  1889                           
  1890                           ; 2 bytes @ 0x2C
  1891  004C                     	ds	1
  1892  004D                     delay_s@i:
  1893                           
  1894                           ; 2 bytes @ 0x2D
  1895  004D                     	ds	2
  1896  004F                     ??_Constant:
  1897  004F                     ??_RestPeriod:	
  1898                           ; 1 bytes @ 0x2F
  1899                           
  1900  004F                     ?_Wave:	
  1901                           ; 1 bytes @ 0x2F
  1902                           
  1903  004F                     Wave@type:	
  1904                           ; 1 bytes @ 0x2F
  1905                           
  1906                           
  1907                           ; 2 bytes @ 0x2F
  1908  004F                     	ds	2
  1909  0051                     ??_Wave:
  1910                           
  1911                           ; 1 bytes @ 0x31
  1912  0051                     	ds	1
  1913                           
  1914                           	psect	maintext
  1915  043F                     __pmaintext:	
  1916 ;;
  1917 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1918 ;;
  1919 ;; *************** function _main *****************
  1920 ;; Defined at:
  1921 ;;		line 5 in file "main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : B3F/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1935 ;;      Params:         0       0       0       0
  1936 ;;      Locals:         0       0       0       0
  1937 ;;      Temps:          0       0       1       0
  1938 ;;      Totals:         0       0       1       0
  1939 ;;Total ram usage:        1 bytes
  1940 ;; Hardware stack levels required when called: 8
  1941 ;; This function calls:
  1942 ;;		_ADCP
  1943 ;;		_ADC_SetInterruptHandler
  1944 ;;		_Constant
  1945 ;;		_PWM3_LoadDutyValue
  1946 ;;		_RestPeriod
  1947 ;;		_SYSTEM_Initialize
  1948 ;;		_SelectEvent
  1949 ;;		_Wave
  1950 ;;		_delay_s
  1951 ;; This function is called by:
  1952 ;;		Startup code after reset
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _main
  1958  043F                     _main:
  1959                           
  1960                           ;main.c: 8:     SYSTEM_Initialize();
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1964  043F  2751               	fcall	_SYSTEM_Initialize
  1965                           
  1966                           ;main.c: 9:     ADC_SetInterruptHandler(ADCEvent);
  1967  0440  3044               	movlw	low _ADCEvent
  1968  0441  0140               	movlb	0	; select bank0
  1969  0442  00AC               	movwf	ADC_SetInterruptHandler@InterruptHandler
  1970  0443  3005               	movlw	high _ADCEvent
  1971  0444  00AD               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  1972  0445  2765               	fcall	_ADC_SetInterruptHandler
  1973                           
  1974                           ;main.c: 10:     (INTCONbits.GIE = 1);
  1975  0446  178B               	bsf	11,7	;volatile
  1976  0447                     l2503:
  1977                           
  1978                           ;main.c: 16:         (INTCONbits.PEIE = 0);
  1979  0447  130B               	bcf	11,6	;volatile
  1980  0448  0140               	movlb	0	; select bank0
  1981  0449  1298               	bcf	24,5	;volatile
  1982  044A  1518               	bsf	24,2	;volatile
  1983                           
  1984                           ;main.c: 19:         PWM3_LoadDutyValue(0);
  1985  044B  3000               	movlw	0
  1986  044C  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  1987  044D  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  1988  044E  269F               	fcall	_PWM3_LoadDutyValue
  1989                           
  1990                           ;main.c: 20:         delay_s(60);
  1991  044F  303C               	movlw	60
  1992  0450  0140               	movlb	0	; select bank0
  1993  0451  00C9               	movwf	delay_s@count
  1994  0452  3000               	movlw	0
  1995  0453  00CA               	movwf	delay_s@count+1
  1996  0454  2622               	fcall	_delay_s
  1997                           
  1998                           ;main.c: 21:         (INTCONbits.PEIE = 1);
  1999  0455  170B               	bsf	11,6	;volatile
  2000                           
  2001                           ;main.c: 22:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2002  0456  301A               	movlw	26
  2003  0457  0141               	movlb	1	; select bank1
  2004  0458  00B4               	movwf	??_main^(0+128)
  2005  0459  30F8               	movlw	248
  2006  045A                     u2037:
  2007  045A  0B89               	decfsz	9,f
  2008  045B  2C5A               	goto	u2037
  2009  045C  0BB4               	decfsz	??_main^(0+128),f
  2010  045D  2C5A               	goto	u2037
  2011  045E  0000               	nop
  2012                           
  2013                           ;main.c: 25:         while(PORTAbits.RA5){
  2014  045F  2C87               	goto	l2529
  2015  0460                     l2513:
  2016  0460  26E6               	fcall	_Constant
  2017  0461                     l298:	
  2018                           ;main.c: 28:                 case 1: ADCP();
  2019                           
  2020  0461  2218               	fcall	_ADCP
  2021  0462                     l299:	
  2022                           ;main.c: 29:                 case 2: RestPeriod();
  2023                           
  2024  0462  26CF               	fcall	_RestPeriod
  2025  0463                     l2515:
  2026  0463  3001               	movlw	1
  2027  0464  0140               	movlb	0	; select bank0
  2028  0465  00CF               	movwf	Wave@type
  2029  0466  3000               	movlw	0
  2030  0467  00D0               	movwf	Wave@type+1
  2031  0468  2025               	fcall	_Wave
  2032  0469                     l2517:
  2033  0469  3002               	movlw	2
  2034  046A  0140               	movlb	0	; select bank0
  2035  046B  00CF               	movwf	Wave@type
  2036  046C  3000               	movlw	0
  2037  046D  00D0               	movwf	Wave@type+1
  2038  046E  2025               	fcall	_Wave
  2039  046F                     l2519:
  2040  046F  3003               	movlw	3
  2041  0470  0140               	movlb	0	; select bank0
  2042  0471  00CF               	movwf	Wave@type
  2043  0472  3000               	movlw	0
  2044  0473  00D0               	movwf	Wave@type+1
  2045  0474  2025               	fcall	_Wave
  2046  0475                     l2521:
  2047  0475  3004               	movlw	4
  2048  0476  0140               	movlb	0	; select bank0
  2049  0477  00CF               	movwf	Wave@type
  2050  0478  3000               	movlw	0
  2051  0479  00D0               	movwf	Wave@type+1
  2052  047A  2025               	fcall	_Wave
  2053  047B                     l2523:
  2054  047B  3005               	movlw	5
  2055  047C  0140               	movlb	0	; select bank0
  2056  047D  00CF               	movwf	Wave@type
  2057  047E  3000               	movlw	0
  2058  047F  00D0               	movwf	Wave@type+1
  2059  0480  2025               	fcall	_Wave
  2060  0481                     l2527:	
  2061                           ;main.c: 35:             }
  2062                           
  2063                           
  2064                           ;main.c: 36:             delay_s(1);
  2065  0481  3001               	movlw	1
  2066  0482  0140               	movlb	0	; select bank0
  2067  0483  00C9               	movwf	delay_s@count
  2068  0484  3000               	movlw	0
  2069  0485  00CA               	movwf	delay_s@count+1
  2070  0486  2622               	fcall	_delay_s
  2071  0487                     l2529:
  2072                           
  2073                           ;main.c: 25:         while(PORTAbits.RA5){
  2074  0487  0140               	movlb	0	; select bank0
  2075  0488  1E8C               	btfss	12,5	;volatile
  2076  0489  2C47               	goto	l2503
  2077  048A  23C7               	fcall	_SelectEvent
  2078                           
  2079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2080                           ; Switch size 1, requested type "simple"
  2081                           ; Number of cases is 1, Range of values is 0 to 0
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte            4     3 (average)
  2085                           ; direct_byte        !   8     6 (fixed©
  20x6      `                    ; jumptable          $ 260    $6 (faxee)*  2087       `                   ;	Chosen strategy ës simple_byte
  2088 (048B  0140          !    	movlb	0	; select bank0
  2089  08C  084A               	movf	?_SeleCtEvent;1,w
  209p  049D  3A00               	xordw	0; case 2
  2091  0´8E  1903         `     	skipNx
  2092  048F  2C91               	goôo	l2594
  2093  0 80  2C83               	goto	l2527
  209´  04=1                   `"l25952
  2095  `    "       `             2096                 !         ; Switch size 1, veqeested type "simple"
  2097                  (   `    ; Number of cases is 8, Range of v`lees is 0 to 7
  2p98                           : switch strategies availajle:
  20)9            (              ; Name         Ins4ructions Cycles
( 2100         `                 ; dizect_byte`   0  0   22     6 (fixed)
  2101             !             ; simple_byte           25    13 (average)-
  2102                           ; jumptable            260     6 (fixed)
  2103                           ;	Chosen strategy is simple_byte
  2104  0491  0849               	movf	?_SelectEvent,w
  2105  0492  3A00               	xorlw	0	; case 0
  2106  0493  1903               	skipnz
  2107  0494  2C60               	goto	l2513
  2108  0495  3A01               	xorlw	1	; case 1
  2109  0496  1903               	skipnz
  2110  0497  2C61               	goto	l298
  2111  0498  3A03               	xorlw	3	; case 2
  2112  0499  1903               	skipnz
  2113  049A  2C62               	goto	l299
  2114  049B  3A01               	xorlw	1	; case 3
  2115  049C  1903               	skipnz
  2116  049D  2C63               	goto	l2515
  2117  049E  3A07               	xorlw	7	; case 4
  2118  049F  1903               	skipnz
  2119  04A0  2C69               	goto	l2517
  2120  04A1  3A01               	xorlw	1	; case 5
  2121  04A2  1903               	skipnz
  2122  04A3  2C6F               	goto	l2519
  2123  04A4  3A03      $        	xor,W	3	; case 6
 $2124  04A5  1903               	skipnz  2125  p4A6  2C75      $ `      	goto	l2521
  2126  04A7  3A01          0`   	horlw	1; case 7
  2127  04A8  1903 (            (	skipoz
  21"8  04A9  2C7B        0    " 	goto	l2523
  2129 `04AA  281               	goto	l2527
 `21s  04AB  2C81       !(      	goto	l2527
  2131  04AC             0       __end_mf_main:
  2132                             2133    (                      	psect	text1
  2134  0025                     __ptext1:	
  2135 ;; ******
******** function _Wave ********+********
  2136 ;; Dufined at:
  2137 ;;		line 104 an file "proceduresc"
! 238 ;; Parameters:    SIze  Location     Tqpe
( 2139 ;;  type            2   47[B@NK0 ] int 
  2140 ;; Auto vaRs:  (  Size  LoaatiOn     Type
  21$1 ;;  i         $     2    4[BANK1 ] int 
  2142 ;;  z               3   14[BANK1 ] unsigngd short 
  2143 ?;  x               2   92[BANK ] unsigned short M
  2144 ;;  x        $      2   10[BANK1 ] unsigned short 
  2145 ;;  x               2    8[BANK1 ] unsigned short 
  2146 ;;  i               2    2[BANK1 ] int 
  2147 ;;  ActivePeriod    2   18[BANK1 ] int 
  2148 ;;  Event_Length    2   16[BANK1 ] int 
  2149 ;;  InactivePeri    2    6[BANK1 ] int 
  2150 ;;  Cycles          2    0[BANK1 ] int 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2160 ;;      Params:         0       2       0       0
  2161 ;;      Locals:         0       0      20       0
  2162 ;;      Temps:          0       1       0       0
  2163 ;;      Totals:         0       3      20       0
  2164 ;;Total ram usage:       23 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 7
  2167 ;; This function calls:
  2168 ;;		_PWM3_LoadDutyValue
  2169 ;;		_RandomRange
  2170 ;;		___awdiv
  2171 ;;		_delay_ms
  2172 ;;		_delay_s
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _Wave
  2180  0025                     _Wave:
  2181                           
  2182                           ;incstack = 0
  2183                           ; Regs used in _Wave: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2184                           ;procedures.c: 105:     do { LATAbits.LATA2 = 0; } while(0);
  2185  0025  0140               	movlb	0	; select bank0
  2186  0026  1118               	bcf	24,2	;volatile
  2187                           
  2188                           ;procedures.c: 106:     int Event_Length = RandomRange(1,100);
  2189  0027  3001               	movlw	1
  2190  0028  00C5               	movwf	RandomRange@low
  2191  0029  3000               	movlw	0
  2192  002A  00C6               	movwf	RandomRange@low+1
  2193  002B  3064               	movlw	100
  2194  002C  00C7               	movwf	RandomRange@high
  2195  002D  3000               	movlw	0
  2196  002E  00C8               	movwf	RandomRange@high+1
  2197  002F  2712               	fcall	_RandomRange
  2198  0030  0140               	movlb	0	; select bank0
  2199  0031  0846               	movf	?_RandomRange+1,w
  2200  0032  0141               	movlb	1	; select bank1
  2201  0033  00B1               	movwf	(Wave@Event_Length+1)^(0+128)
  2202  0034  0140               	movlb	0	; select bank0
  2203  0035  0845               	movf	?_RandomRange,w
  2204  0036  0141               	movlb	1	; select bank1
  2205  0037  00B0               	movwf	Wave@Event_Length^(0+128)
  2206                           
  2207                           ;procedures.c: 107:     int ActivePeriod = RandomRange(1,Event_Length/2);
  2208  0038  3001               	movlw	1
  2209  0039  0140               	movlb	0	; select bank0
  2210  003A  00C5               	movwf	RandomRange@low
  2211  003B  3000               	movlw	0
  2212  003C  00C6               	movwf	RandomRange@low+1
  2213  003D  3002               	movlw	2
  2214  003E  00AC               	movwf	___awdiv@divisor
  2215  003F  3000               	movlw	0
  2216  0040  00AD               	movwf	___awdiv@divisor+1
  2217  0041  0141               	movlb	1	; select bank1
  2218  0042  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2219  0043  0140               	movlb	0	; select bank0
  2220  0044  00AF               	movwf	___awdiv@dividend+1
  2221  0045  0141               	movlb	1	; select bank1
  2222  0046  0830               	movf	Wave@Event_Length^(0+128),w
  2223  0047  0140               	movlb	0	; select bank0
  2224  0048  00AE               	movwf	___awdiv@dividend
  2225  0049  24AC               	fcall	___awdiv
  2226  004A  0140               	movlb	0	; select bank0
  2227  004B  082D               	movf	?___awdiv+1,w
  2228  004C  00C8               	movwf	RandomRange@high+1
  2229  004D  082C               	movf	?___awdiv,w
  2230  004E  00C7               	movwf	RandomRange@high
  2231  004F  2712               	fcall	_RandomRange
  2232  0050  0140               	movlb	0	; select bank0
  2233  0051  0846               	movf	?_RandomRange+1,w
  2234  0052  0141               	movlb	1	; select bank1
  2235  0053  00B3               	movwf	(Wave@ActivePeriod+1)^(0+128)
  2236  0054  0140               	movlb	0	; select bank0
  2237  0055  0845               	movf	?_RandomRange,w
  2238  0056  0141               	movlb	1	; select bank1
  2239  0057  00B2               	movwf	Wave@ActivePeriod^(0+128)
  2240                           
  2241                           ;procedures.c: 108:     int InactivePeriod = RandomRange(0,Event_Length/2);
  2242  0058  3000               	movlw	0
  2243  0059  0140               	movlb	0	; select bank0
  2244  005A  00C5               	movwf	RandomRange@low
  2245  005B  00C6               	movwf	RandomRange@low+1
  2246  005C  3002               	movlw	2
  2247  005D  00AC               	movwf	___awdiv@divisor
  2248  005E  3000               	movlw	0
  2249  005F  00AD               	movwf	___awdiv@divisor+1
  2250  0060  0141               	movlb	1	; select bank1
  2251  0061  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2252  0062  0140               	movlb	0	; select bank0
  2253  0063  00AF               	movwf	___awdiv@dividend+1
  2254  0064  0141               	movlb	1	; select bank1
  2255  0065  0830               	movf	Wave@Event_Length^(0+128),w
  2256  0066  0140               	movlb	0	; select bank0
  2257  0067  00AE               	movwf	___awdiv@dividend
  2258  0068  24AC               	fcall	___awdiv
  2259  0069  0140               	movlb	0	; select bank0
  2260  006A  082D               	movf	?___awdiv+1,w
  2261  006B  00C8               	movwf	RandomRange@high+1
  2262  006C  082C               	movf	?___awdiv,w
  2263  006D  00C7               	movwf	RandomRange@high
  2264  006E  2712               	fcall	_RandomRange
  2265  006F  0140               	movlb	0	; select bank0
  2266  0070  0846               	movf	?_RandomRange+1,w
  2267  0071  0141               	movlb	1	; select bank1
  2268  0072  00A7               	movwf	(Wave@InactivePeriod+1)^(0+128)
  2269  0073  0140               	movlb	0	; select bank0
  2270  0074  0845               	movf	?_RandomRange,w
  2271  0075  0141               	movlb	1	; select bank1
  2272  0076  00A6               	movwf	Wave@InactivePeriod^(0+128)
  2273                           
  2274                           ;procedures.c: 109:     switch (type){
  2275  0077  28E8               	goto	l2383
  2276  0078                     l2381:
  2277  0078  3001               	movlw	1
  2278  0079  00C5               	movwf	RandomRange@low
  2279  007A  3000               	movlw	0
  2280  007B  00C6               	movwf	RandomRange@low+1
  2281  007C  300A               	movlw	10
  2282  007D  00AC               	movwf	___awdiv@divisor
  2283  007E  3000               	movlw	0
  2284  007F  00AD               	movwf	___awdiv@divisor+1
  2285  0080  0141               	movlb	1	; select bank1
  2286  0081  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2287  0082  0140               	movlb	0	; select bank0
  2288  0083  00AF               	movwf	___awdiv@dividend+1
  2289  0084  0141               	movlb	1	; select bank1
  2290  0085  0830               	movf	Wave@Event_Length^(0+128),w
  2291  0086  0140               	movlb	0	; select bank0
  2292  0087  00AE               	movwf	___awdiv@dividend
  2293  0088  24AC               	fcall	___awdiv
  2294  0089  0140               	movlb	0	; select bank0
  2295  008A  082D               	movf	?___awdiv+1,w
  2296  008B  00C8               	movwf	RandomRange@high+1
  2297  008C  082C               	movf	?___awdiv,w
  2298  008D  00C7               	movwf	RandomRange@high
  2299  008E  2712               	fcall	_RandomRange
  2300  008F  3001               	movlw	1
  2301  0090  0140               	movlb	0	; select bank0
  2302  0091  00C5               	movwf	RandomRange@low
  2303  0092  3000               	movlw	0
  2304  0093  00C6               	movwf	RandomRange@low+1
  2305  0094  3002               	movlw	2
  2306  0095  00AC               	movwf	___awdiv@divisor
  2307  0096  3000               	movlw	0
  2308  0097  00AD               	movwf	___awdiv@divisor+1
  2309  0098  0141               	movlb	1	; select bank1
  2310  0099  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2311  009A  0140               	movlb	0	; select bank0
  2312  009B  00AF               	movwf	___awdiv@dividend+1
  2313  009C  0141               	movlb	1	; select bank1
  2314  009D  0830               	movf	Wave@Event_Length^(0+128),w
  2315  009E  0140               	movlb	0	; select bank0
  2316  009F  00AE               	movwf	___awdiv@dividend
  2317  00A0  24AC               	fcall	___awdiv
  2318  00A1  0140               	movlb	0	; select bank0
  2319  00A2  082D               	movf	?___awdiv+1,w
  2320  00A3  00C8               	movwf	RandomRange@high+1
  2321  00A4  082C               	movf	?___awdiv,w
  2322  00A5  00C7               	movwf	RandomRange@high
  2323  00A6  2712               	fcall	_RandomRange
  2324  00A7                     l401:	
  2325                           ;procedures.c: 113:         case 3:
  2326                           
  2327                           
  2328                           ;procedures.c: 114:             ActivePeriod = RandomRange(1,Event_Length/10);
  2329  00A7  3001               	movlw	1
  2330  00A8  0140               	movlb	0	; select bank0
  2331  00A9  00C5               	movwf	RandomRange@low
  2332  00AA  3000               	movlw	0
  2333  00AB  00C6               	movwf	RandomRange@low+1
  2334  00AC  300A               	movlw	10
  2335  00AD  00AC               	movwf	___awdiv@divisor
  2336  00AE  3000               	movlw	0
  2337  00AF  00AD               	movwf	___awdiv@divisor+1
  2338  00B0  0141               	movlb	1	; select bank1
  2339  00B1  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2340  00B2  0140               	movlb	0	; select bank0
  2341  00B3  00AF               	movwf	___awdiv@dividend+1
  2342  00B4  0141               	movlb	1	; select bank1
  2343  00B5  0830               	movf	Wave@Event_Length^(0+128),w
  2344  00B6  0140               	movlb	0	; select bank0
  2345  00B7  00AE               	movwf	___awdiv@dividend
  2346  00B8  24AC               	fcall	___awdiv
  2347  00B9  0140               	movlb	0	; select bank0
  2348  00BA  082D               	movf	?___awdiv+1,w
  2349  00BB  00C8               	movwf	RandomRange@high+1
  2350  00BC  082C               	movf	?___awdiv,w
  2351  00BD  00C7               	movwf	RandomRange@high
  2352  00BE  2712               	fcall	_RandomRange
  2353  00BF  0140               	movlb	0	; select bank0
  2354  00C0  0846               	movf	?_RandomRange+1,w
  2355  00C1  0141               	movlb	1	; select bank1
  2356  00C2  00B3               	movwf	(Wave@ActivePeriod+1)^(0+128)
  2357  00C3  0140               	movlb	0	; select bank0
  2358  00C4  0845               	movf	?_RandomRange,w
  2359  00C5  0141               	movlb	1	; select bank1
  2360  00C6  00B2               	movwf	Wave@ActivePeriod^(0+128)
  2361                           
  2362                           ;procedures.c: 115:             InactivePeriod = RandomRange(1,Event_Length/10);
  2363  00C7  3001               	movlw	1
  2364  00C8  0140               	movlb	0	; select bank0
  2365  00C9  00C5               	movwf	RandomRange@low
  2366  00CA  3000               	movlw	0
  2367  00CB  00C6               	movwf	RandomRange@low+1
  2368  00CC  300A               	movlw	10
  2369  00CD  00AC               	movwf	___awdiv@divisor
  2370  00CE  3000               	movlw	0
  2371  00CF  00AD               	movwf	___awdiv@divisor+1
  2372  00D0  0141               	movlb	1	; select bank1
  2373  00D1  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2374  00D2  0140               	movlb	0	; select bank0
  2375  00D3  00AF               	movwf	___awdiv@dividend+1
  2376  00D4  0141               	movlb	1	; select bank1
  2377  00D5  0830               	movf	Wave@Event_Length^(0+128),w
  2378  00D6  0140               	movlb	0	; select bank0
  2379  00D7  00AE               	movwf	___awdiv@dividend
  2380  00D8  24AC               	fcall	___awdiv
  2381  00D9  0140               	movlb	0	; select bank0
  2382  00DA  082D               	movf	?___awdiv+1,w
  2383  00DB  00C8               	movwf	RandomRange@high+1
  2384  00DC  082C               	movf	?___awdiv,w
  2385  00DD  00C7               	movwf	RandomRange@high
  2386  00DE  2712               	fcall	_RandomRange
  2387  00DF  0140               	movlb	0	; select bank0
  2388  00E0  0846               	movf	?_RandomRange+1,w
  2389  00E1  0141               	movlb	1	; select bank1
  2390  00E2  00A7               	movwf	(Wave@InactivePeriod+1)^(0+128)
  2391  00E3  0140               	movlb	0	; select bank0
  2392  00E4  0845               	movf	?_RandomRange,w
  2393  00E5  0141               	movlb	1	; select bank1
  2394  00E6  00A6               	movwf	Wave@InactivePeriod^(0+128)
  2395                           
  2396                           ;procedures.c: 116:     }
  2397  00E7  28F6               	goto	l2385
  2398  00E8                     l2383:
  2399                           
  2400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 1, Range of values is 0 to 0
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte            4     3 (average)
  2406                           ; direct_byte            8     6 (fixed)
  2407                           ; jumptable            260     6 (fixed)
  2408                           ;	Chosen strategy is simple_byte
  2409  00E8  0140               	movlb	0	; select bank0
  2410  00E9  0850               	movf	Wave@type+1,w
  2411  00EA  3A00               	xorlw	0	; case 0
  2412  00EB  1903               	skipnz
  2413  00EC  28EE               	goto	l2597
  2414  00ED  28F6               	goto	l2385
  2415  00EE                     l2597:
  2416                           
  2417                           ; Switch size 1, requested type "simple"
  2418                           ; Number of cases is 2, Range of values is 1 to 3
  2419                           ; switch strategies available:
  2420                           ; Name         Instructions Cycles
  2421                           ; simple_byte            7     4 (average)
  2422                           ; direct_byte           15     9 (fixed)
  2423                           ; jumptable            263     9 (fixed)
  2424                           ;	Chosen strategy is simple_byte
  2425  00EE  084F               	movf	Wave@type,w
  2426  00EF  3A01               	xorlw	1	; case 1
  2427  00F0  1903               	skipnz
  2428  00F1  2878               	goto	l2381
  2429  00F2  3A02               	xorlw	2	; case 3
  2430  00F3  1903               	skipnz
  2431  00F4  28A7               	goto	l401
  2432  00F5  28F6               	goto	l2385
  2433  00F6                     l2385:
  2434                           
  2435                           ;procedures.c: 118:     int Cycles = (Event_Length/(InactivePeriod+ActivePeriod));
  2436  00F6  0141               	movlb	1	; select bank1
  2437  00F7  0832               	movf	Wave@ActivePeriod^(0+128),w
  2438  00F8  0726               	addwf	Wave@InactivePeriod^(0+128),w
  2439  00F9  0140               	movlb	0	; select bank0
  2440  00FA  00AC               	movwf	___awdiv@divisor
  2441  00FB  0141               	movlb	1	; select bank1
  2442  00FC  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2443  00FD  3D27               	addwfc	(Wave@InactivePeriod+1)^(0+128),w
  2444  00FE  0140               	movlb	0	; select bank0
  2445  00FF  00AD               	movwf	___awdiv@divisor+1
  2446  0100  0141               	movlb	1	; select bank1
  2447  0101  0831               	movf	(Wave@Event_Length+1)^(0+128),w
  2448  0102  0140               	movlb	0	; select bank0
  2449  0103  00AF               	movwf	___awdiv@dividend+1
  2450  0104  0141               	movlb	1	; select bank1
  2451  0105  0830               	movf	Wave@Event_Length^(0+128),w
  2452  0106  0140               	movlb	0	; select bank0
  2453  0107  00AE               	movwf	___awdiv@dividend
  2454  0108  24AC               	fcall	___awdiv
  2455  0109  0140               	movlb	0	; select bank0
  2456  010A  082D               	movf	?___awdiv+1,w
  2457  010B  0141               	movlb	1	; select bank1
  2458  010C  00A1               	movwf	(Wave@Cycles+1)^(0+128)
  2459  010D  0140               	movlb	0	; select bank0
  2460  010E  082C               	movf	?___awdiv,w
  2461  010F  0141               	movlb	1	; select bank1
  2462  0110  00A0               	movwf	Wave@Cycles^(0+128)
  2463                           
  2464                           ;procedures.c: 119:     for (int i=0; i< Cycles; i++){
  2465  0111  01A2               	clrf	Wave@i^(0+128)
  2466  0112  01A3               	clrf	(Wave@i+1)^(0+128)
  2467  0113  2A05               	goto	l2457
  2468  0114                     l2389:
  2469                           
  2470                           ;procedures.c: 122:                 PWM3_LoadDutyValue(300);
  2471  0114  302C               	movlw	44
  2472  0115  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2473  0116  3001               	movlw	1
  2474  0117  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2475  0118  269F               	fcall	_PWM3_LoadDutyValue
  2476                           
  2477                           ;procedures.c: 123:                 delay_s(ActivePeriod);
  2478  0119  0141               	movlb	1	; select bank1
  2479  011A  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2480  011B  0140               	movlb	0	; select bank0
  2481  011C  00CA               	movwf	delay_s@count+1
  2482  011D  0141               	movlb	1	; select bank1
  2483  011E  0832               	movf	Wave@ActivePeriod^(0+128),w
  2484  011F  0140               	movlb	0	; select bank0
  2485  0120  00C9               	movwf	delay_s@count
  2486  0121  2622               	fcall	_delay_s
  2487  0122                     l2391:
  2488                           
  2489                           ;procedures.c: 125:                 for (uint16_t x=0; x<1000; x++){
  2490  0122  0141               	movlb	1	; select bank1
  2491  0123  01A8               	clrf	Wave@x^(0+128)
  2492  0124  01A9               	clrf	(Wave@x+1)^(0+128)
  2493  0125                     l2397:
  2494                           
  2495                           ;procedures.c: 126:                     PWM3_LoadDutyValue(x);
  2496  0125  0829               	movf	(Wave@x+1)^(0+128),w
  2497  0126  0140               	movlb	0	; select bank0
  2498  0127  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2499  0128  0141               	movlb	1	; select bank1
  2500  0129  0828               	movf	Wave@x^(0+128),w
  2501  012A  0140               	movlb	0	; select bank0
  2502  012B  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2503  012C  269F               	fcall	_PWM3_LoadDutyValue
  2504                           
  2505                           ;procedures.c: 127:                     delay_ms(ActivePeriod/2);
  2506  012D  3002               	movlw	2
  2507  012E  0140               	movlb	0	; select bank0
  2508  012F  00AC               	movwf	___awdiv@divisor
  2509  0130  3000               	movlw	0
  2510  0131  00AD               	movwf	___awdiv@divisor+1
  2511  0132  0141               	movlb	1	; select bank1
  2512  0133  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2513  0134  0140               	movlb	0	; select bank0
  2514  0135  00AF               	movwf	___awdiv@dividend+1
  2515  0136  0141               	movlb	1	; select bank1
  2516  0137  0832               	movf	Wave@ActivePeriod^(0+128),w
  2517  0138  0140               	movlb	0	; select bank0
  2518  0139  00AE               	movwf	___awdiv@dividend
  2519  013A  24AC               	fcall	___awdiv
  2520  013B  0140               	movlb	0	; select bank0
  2521  013C  082D               	movf	?___awdiv+1,w
  2522  013D  00B6               	movwf	delay_ms@count+1
  2523  013E  082C               	movf	?___awdiv,w
  2524  013F  00B5               	movwf	delay_ms@count
  2525  0140  2665               	fcall	_delay_ms
  2526                           
  2527                           ;procedures.c: 128:                 }
  2528  0141  3001               	movlw	1
  2529  0142  0141               	movlb	1	; select bank1
  2530  0143  07A8               	addwf	Wave@x^(0+128),f
  2531  0144  3000               	movlw	0
  2532  0145  3DA9               	addwfc	(Wave@x+1)^(0+128),f
  2533  0146  3003               	movlw	3
  2534  0147  0229               	subwf	(Wave@x+1)^(0+128),w
  2535  0148  30E8               	movlw	232
  2536  0149  1903               	skipnz
  2537  014A  0228               	subwf	Wave@x^(0+128),w
  2538  014B  1C03               	skipc
  2539  014C  2925               	goto	l2397
  2540                           
  2541                           ;procedures.c: 129:                 for (uint16_t x=1000; x>0; x--){
  2542  014D  30E8               	movlw	232
  2543  014E  00AA               	movwf	Wave@x_798^(0+128)
  2544  014F  3003               	movlw	3
  2545  0150  00AB               	movwf	(Wave@x_798^(0+128)+1)
  2546  0151                     l2409:
  2547                           
  2548                           ;procedures.c: 130:                     PWM3_LoadDutyValue(x);
  2549  0151  082B               	movf	(Wave@x_798+1)^(0+128),w
  2550  0152  0140               	movlb	0	; select bank0
  2551  0153  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2552  0154  0141               	movlb	1	; select bank1
  2553  0155  082A               	movf	Wave@x_798^(0+128),w
  2554  0156  0140               	movlb	0	; select bank0
  2555  0157  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2556  0158  269F               	fcall	_PWM3_LoadDutyValue
  2557                           
  2558                           ;procedures.c: 131:                     delay_ms(ActivePeriod/2);
  2559  0159  3002               	movlw	2
  2560  015A  0140               	movlb	0	; select bank0
  2561  015B  00AC               	movwf	___awdiv@divisor
  2562  015C  3000               	movlw	0
  2563  015D  00AD               	movwf	___awdiv@divisor+1
  2564  015E  0141               	movlb	1	; select bank1
  2565  015F  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2566  0160  0140               	movlb	0	; select bank0
  2567  0161  00AF               	movwf	___awdiv@dividend+1
  2568  0162  0141               	movlb	1	; select bank1
  2569  0163  0832               	movf	Wave@ActivePeriod^(0+128),w
  2570  0164  0140               	movlb	0	; select bank0
  2571  0165  00AE               	movwf	___awdiv@dividend
  2572  0166  24AC               	fcall	___awdiv
  2573  0167  0140               	movlb	0	; select bank0
  2574  0168  082D               	movf	?___awdiv+1,w
  2575  0169  00B6               	movwf	delay_ms@count+1
  2576  016A  082C               	movf	?___awdiv,w
  2577  016B  00B5               	movwf	delay_ms@count
  2578  016C  2665               	fcall	_delay_ms
  2579                           
  2580                           ;procedures.c: 132:                 }
  2581  016D  3001               	movlw	1
  2582  016E  0141               	movlb	1	; select bank1
  2583  016F  02AA               	subwf	Wave@x_798^(0+128),f
  2584  0170  3000               	movlw	0
  2585  0171  3BAB               	subwfb	(Wave@x_798+1)^(0+128),f
  2586  0172  082A               	movf	Wave@x_798^(0+128),w
  2587  0173  042B               	iorwf	(Wave@x_798+1)^(0+128),w
  2588  0174  1D03               	btfss	3,2
  2589  0175  2951               	goto	l2409
  2590  0176                     l2415:
  2591                           
  2592                           ;procedures.c: 134:                 PWM3_LoadDutyValue(800);
  2593  0176  3020               	movlw	32
  2594  0177  0140               	movlb	0	; select bank0
  2595  0178  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2596  0179  3003               	movlw	3
  2597  017A  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2598  017B  269F               	fcall	_PWM3_LoadDutyValue
  2599                           
  2600                           ;procedures.c: 135:                 delay_s(ActivePeriod);
  2601  017C  0141               	movlb	1	; select bank1
  2602  017D  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2603  017E  0140               	movlb	0	; select bank0
  2604  017F  00CA               	movwf	delay_s@count+1
  2605  0180  0141               	movlb	1	; select bank1
  2606  0181  0832               	movf	Wave@ActivePeriod^(0+128),w
  2607  0182  0140               	movlb	0	; select bank0
  2608  0183  00C9               	movwf	delay_s@count
  2609  0184  2622               	fcall	_delay_s
  2610  0185                     l2417:
  2611                           
  2612                           ;procedures.c: 137:                 for (uint16_t x=0; x<1000; x++){
  2613  0185  0141               	movlb	1	; select bank1
  2614  0186  01AC               	clrf	Wave@x_799^(0+128)
  2615  0187  01AD               	clrf	(Wave@x_799+1)^(0+128)
  2616  0188                     l2423:
  2617                           
  2618                           ;procedures.c: 138:                     PWM3_LoadDutyValue(x);
  2619  0188  082D               	movf	(Wave@x_799+1)^(0+128),w
  2620  0189  0140               	movlb	0	; select bank0
  2621  018A  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2622  018B  0141               	movlb	1	; select bank1
  2623  018C  082C               	movf	Wave@x_799^(0+128),w
  2624  018D  0140               	movlb	0	; select bank0
  2625  018E  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2626  018F  269F               	fcall	_PWM3_LoadDutyValue
  2627                           
  2628                           ;procedures.c: 139:                     delay_ms(ActivePeriod);
  2629  0190  0141               	movlb	1	; select bank1
  2630  0191  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2631  0192  0140               	movlb	0	; select bank0
  2632  0193  00B6               	movwf	delay_ms@count+1
  2633  0194  0141               	movlb	1	; select bank1
  2634  0195  0832               	movf	Wave@ActivePeriod^(0+128),w
  2635  0196  0140               	movlb	0	; select bank0
  2636  0197  00B5               	movwf	delay_ms@count
  2637  0198  2665               	fcall	_delay_ms
  2638                           
  2639                           ;procedures.c: 140:                 }
  2640  0199  3001               	movlw	1
  2641  019A  0141               	movlb	1	; select bank1
  2642  019B  07AC               	addwf	Wave@x_799^(0+128),f
  2643  019C  3000               	movlw	0
  2644  019D  3DAD               	addwfc	(Wave@x_799+1)^(0+128),f
  2645  019E  3003               	movlw	3
  2646  019F  022D               	subwf	(Wave@x_799+1)^(0+128),w
  2647  01A0  30E8               	movlw	232
  2648  01A1  1903               	skipnz
  2649  01A2  022C               	subwf	Wave@x_799^(0+128),w
  2650  01A3  1C03               	skipc
  2651  01A4  2988               	goto	l2423
  2652  01A5                     l2429:
  2653                           
  2654                           ;procedures.c: 142:                 for (uint16_t x=0; x<1000; x+=100){
  2655  01A5  0141               	movlb	1	; select bank1
  2656  01A6  01AE               	clrf	Wave@x_800^(0+128)
  2657  01A7  01AF               	clrf	(Wave@x_800+1)^(0+128)
  2658  01A8                     l2435:
  2659                           
  2660                           ;procedures.c: 143:                     PWM3_LoadDutyValue(x);
  2661  01A8  082F               	movf	(Wave@x_800+1)^(0+128),w
  2662  01A9  0140               	movlb	0	; select bank0
  2663  01AA  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2664  01AB  0141               	movlb	1	; select bank1
  2665  01AC  082E               	movf	Wave@x_800^(0+128),w
  2666  01AD  0140               	movlb	0	; select bank0
  2667  01AE  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2668  01AF  269F               	fcall	_PWM3_LoadDutyValue
  2669                           
  2670                           ;procedures.c: 144:                     for (int i=0;i<100;i++)
  2671  01B0  0141               	movlb	1	; select bank1
  2672  01B1  01A4               	clrf	Wave@i_801^(0+128)
  2673  01B2  01A5               	clrf	(Wave@i_801+1)^(0+128)
  2674  01B3                     l2443:
  2675                           
  2676                           ;procedures.c: 145:                         delay_ms(ActivePeriod);
  2677  01B3  0141               	movlb	1	; select bank1
  2678  01B4  0833               	movf	(Wave@ActivePeriod+1)^(0+128),w
  2679  01B5  0140               	movlb	0	; select bank0
  2680  01B6  00B6               	movwf	delay_ms@count+1
  2681  01B7  0141               	movlb	1	; select bank1
  2682  01B8  0832               	movf	Wave@ActivePeriod^(0+128),w
  2683  01B9  0140               	movlb	0	; select bank0
  2684  01BA  00B5               	movwf	delay_ms@count
  2685  01BB  2665               	fcall	_delay_ms
  2686  01BC  3001               	movlw	1
  2687  01BD  0141               	movlb	1	; select bank1
  2688  01BE  07A4               	addwf	Wave@i_801^(0+128),f
  2689  01BF  3000               	movlw	0
  2690  01C0  3DA5               	addwfc	(Wave@i_801+1)^(0+128),f
  2691  01C1  0825               	movf	(Wave@i_801+1)^(0+128),w
  2692  01C2  3A80               	xorlw	128
  2693  01C3  0140               	movlb	0	; select bank0
  2694  01C4  00D1               	movwf	??_Wave
  2695  01C5  3080               	movlw	128
  2696  01C6  0251               	subwf	??_Wave,w
  2697  01C7  1D03               	skipz
  2698  01C8  29CC               	goto	u1955
  2699  01C9  3064               	movlw	100
  2700  01CA  0141               	movlb	1	; select bank1
  2701  01CB  0224               	subwf	Wave@i_801^(0+128),w
  2702  01CC                     u1955:
  2703  01CC  1C03               	skipc
  2704  01CD  29B3               	goto	l2443
  2705                           
  2706                           ;procedures.c: 146:                 }
  2707  01CE  3064               	movlw	100
  2708  01CF  0141               	movlb	1	; select bank1
  2709  01D0  07AE               	addwf	Wave@x_800^(0+128),f
  2710  01D1  3000               	movlw	0
  2711  01D2  3DAF               	addwfc	(Wave@x_800+1)^(0+128),f
  2712  01D3  3003               	movlw	3
  2713  01D4  022F               	subwf	(Wave@x_800+1)^(0+128),w
  2714  01D5  30E8               	movlw	232
  2715  01D6  1903               	skipnz
  2716  01D7  022E               	subwf	Wave@x_800^(0+128),w
  2717  01D8  1803               	btfsc	3,0
  2718  01D9  29F2               	goto	l2453
  2719  01DA  29A8               	goto	l2435
  2720  01DB                     l2451:
  2721                           
  2722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2723                           ; Switch size 1, requested type "simple"
  2724                           ; Number of cases is 1, Range of values is 0 to 0
  2725                           ; switch strategies available:
  2726                           ; Name         Instructions Cycles
  2727                           ; simple_byte            4     3 (average)
  2728                           ; direct_byte            8     6 (fixed)
  2729                           ; jumptable            260     6 (fixed)
  2730                           ;	Chosen strategy is simple_byte
  2731  01DB  0140               	movlb	0	; select bank0
  2732  01DC  0850               	movf	Wave@type+1,w
  2733  01DD  3A00               	xorlw	0	; case 0
  2734  01DE  1903               	skipnz
  2735  01DF  29E1               	goto	l2599
  2736  01E0  29F2               	goto	l2453
  2737  01E1                     l2599:
  2738                           
  2739                           ; Switch size 1, requested type "simple"
  2740                           ; Number of cases is 5, Range of values is 1 to 5
  2741                           ; switch strategies available:
  2742                           ; Name         Instructions Cycles
  2743                           ; simple_byte           16     9 (average)
  2744                           ; direct_byte           19     9 (fixed)
  2745                           ; jumptable            263     9 (fixed)
  2746                           ;	Chosen strategy is simple_byte
  2747  01E1  084F               	movf	Wave@type,w
  2748  01E2  3A01               	xorlw	1	; case 1
  2749  01E3  1903               	skipnz
  2750  01E4  2914               	goto	l2389
  2751  01E5  3A03               	xorlw	3	; case 2
  2752  01E6  1903               	skipnz
  2753  01E7  2922               	goto	l2391
  2754  01E8  3A01               	xorlw	1	; case 3
  2755  01E9  1903               	skipnz
  2756  01EA  2976               	goto	l2415
  2757  01EB  3A07               	xorlw	7	; case 4
  2758  01EC  1903               	skipnz
  2759  01ED  2985               	goto	l2417
  2760  01EE  3A01               	xorlw	1	; case 5
  2761  01EF  1903               	skipnz
  2762  01F0  29A5               	goto	l2429
  2763  01F1  29F2               	goto	l2453
  2764  01F2                     l2453:
  2765                           
  2766                           ;procedures.c: 148:         PWM3_LoadDutyValue(0);
  2767  01F2  3000               	movlw	0
  2768  01F3  0140               	movlb	0	; select bank0
  2769  01F4  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  2770  01F5  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2771  01F6  269F               	fcall	_PWM3_LoadDutyValue
  2772                           
  2773                           ;procedures.c: 149:         delay_s(InactivePeriod);
  2774  01F7  0141               	movlb	1	; select bank1
  2775  01F8  0827               	movf	(Wave@InactivePeriod+1)^(0+128),w
  2776  01F9  0140               	movlb	0	; select bank0
  2777  01FA  00CA               	movwf	delay_s@count+1
  2778  01FB  0141               	movlb	1	; select bank1
  2779  01FC  0826               	movf	Wave@InactivePeriod^(0+128),w
  2780  01FD  0140               	movlb	0	; select bank0
  2781  01FE  00C9               	movwf	delay_s@count
  2782  01FF  2622               	fcall	_delay_s
  2783                           
  2784                           ;procedures.c: 150:     }
  2785  0200  3001               	movlw	1
  2786  0201  0141               	movlb	1	; select bank1
  2787  0202  07A2               	addwf	Wave@i^(0+128),f
  2788  0203  3000               	movlw	0
  2789  0204  3DA3               	addwfc	(Wave@i+1)^(0+128),f
  2790  0205                     l2457:
  2791  0205  0823               	movf	(Wave@i+1)^(0+128),w
  2792  0206  3A80               	xorlw	128
  2793  0207  0140               	movlb	0	; select bank0
  2794  0208  00D1               	movwf	??_Wave
  2795  0209  0141               	movlb	1	; select bank1
  2796  020A  0821               	movf	(Wave@Cycles+1)^(0+128),w
  2797  020B  3A80               	xorlw	128
  2798  020C  0140               	movlb	0	; select bank0
  2799  020D  0251               	subwf	??_Wave,w
  2800  020E  1D03               	skipz
  2801  020F  2A13               	goto	u1975
  2802  0210  0141               	movlb	1	; select bank1
  2803  0211  0820               	movf	Wave@Cycles^(0+128),w
  2804  0212  0222               	subwf	Wave@i^(0+128),w
  2805  0213                     u1975:
  2806  0213  1C03               	skipc
  2807  0214  29DB               	goto	l2451
  2808                           
  2809                           ;procedures.c: 151:     do { LATAbits.LATA2 = 1; } while(0);
  2810  0215  0140               	movlb	0	; select bank0
  2811  0216  1518               	bsf	24,2	;volatile
  2812  0217  0008               	return
  2813  0218                     __end_of_Wave:
  2814                           
  2815                           	psect	text2
  2816  0665                     __ptext2:	
  2817 ;; *************** function _delay_ms *****************
  2818 ;; Defined at:
  2819 ;;		line 24 in file "procedures.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  count           2   21[BANK0 ] int 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  i               2   24[BANK0 ] int 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2833 ;;      Params:         0       2       0       0
  2834 ;;      Locals:         0       2       0       0
  2835 ;;      Temps:          0       1       0       0
  2836 ;;      Totals:         0       5       0       0
  2837 ;;Total ram usage:        5 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 4
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_Wave
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _delay_ms
  2849  0665                     _delay_ms:
  2850                           
  2851                           ;procedures.c: 25:     for (int i=0; i<count; i++)
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _delay_ms: [wreg+status,2]
  2855  0665  0140               	movlb	0	; select bank0
  2856  0666  01B8               	clrf	delay_ms@i
  2857  0667  01B9               	clrf	delay_ms@i+1
  2858  0668                     l340:
  2859  0668  0839               	movf	delay_ms@i+1,w
  2860  0669  3A80               	xorlw	128
  2861  066A  00B7               	movwf	??_delay_ms
  2862  066B  0836               	movf	delay_ms@count+1,w
  2863  066C  3A80               	xorlw	128
  2864  066D  0237               	subwf	??_delay_ms,w
  2865  066E  1D03               	skipz
  2866  066F  2E72               	goto	u1205
  2867  0670  0835               	movf	delay_ms@count,w
  2868  0671  0238               	subwf	delay_ms@i,w
  2869  0672                     u1205:
  2870  0672  1803               	btfsc	3,0
  2871  0673  0008               	return
  2872                           
  2873                           ;procedures.c: 26:         _delay((unsigned long)((1000)*(8000000/4000000.0)));
  2874  0674  3003               	movlw	3
  2875  0675  0140               	movlb	0	; select bank0
  2876  0676  00B7               	movwf	??_delay_ms
  2877  0677  3097               	movlw	151
  2878  0678                     u2047:
  2879  0678  0B89               	decfsz	9,f
  2880  0679  2E78               	goto	u2047
  2881  067A  0BB7               	decfsz	??_delay_ms,f
  2882  067B  2E78               	goto	u2047
  2883  067C  3200               	nop2
  2884  067D  3001               	movlw	1
  2885  067E  0140               	movlb	0	; select bank0
  2886  067F  07B8               	addwf	delay_ms@i,f
  2887  0680  3000               	movlw	0
  2888  0681  3DB9               	addwfc	delay_ms@i+1,f
  2889  0682  2E68               	goto	l340
  2890  0683                     __end_of_delay_ms:
  2891                           
  2892                           	psect	text3
  2893  04AC                     __ptext3:	
  2894 ;; *************** function ___awdiv *****************
  2895 ;; Defined at:
  2896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  divisor         2   12[BANK0 ] int 
  2899 ;;  dividend        2   14[BANK0 ] int 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  quotient        2   19[BANK0 ] int 
  2902 ;;  sign            1   18[BANK0 ] unsigned char 
  2903 ;;  counter         1   17[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2   12[BANK0 ] int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2913 ;;      Params:         0       4       0       0
  2914 ;;      Locals:         0       4       0       0
  2915 ;;      Temps:          0       1       0       0
  2916 ;;      Totals:         0       9       0       0
  2917 ;;Total ram usage:        9 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 4
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_Wave
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function ___awdiv
  2929  04AC                     ___awdiv:
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2933  04AC  0140               	movlb	0	; select bank0
  2934  04AD  01B2               	clrf	___awdiv@sign
  2935  04AE  1FAD               	btfss	___awdiv@divisor+1,7
  2936  04AF  2CB7               	goto	l1879
  2937  04B0  09AC               	comf	___awdiv@divisor,f
  2938  04B1  09AD               	comf	___awdiv@divisor+1,f
  2939  04B2  0AAC               	incf	___awdiv@divisor,f
  2940  04B3  1903               	skipnz
  2941  04B4  0AAD               	incf	___awdiv@divisor+1,f
  2942  04B5  01B2               	clrf	___awdiv@sign
  2943  04B6  0AB2               	incf	___awdiv@sign,f
  2944  04B7                     l1879:
  2945  04B7  1FAF               	btfss	___awdiv@dividend+1,7
  2946  04B8  2CC2               	goto	l1885
  2947  04B9  09AE               	comf	___awdiv@dividend,f
  2948  04BA  09AF               	comf	___awdiv@dividend+1,f
  2949  04BB  0AAE               	incf	___awdiv@dividend,f
  2950  04BC  1903               	skipnz
  2951  04BD  0AAF               	incf	___awdiv@dividend+1,f
  2952  04BE  3001               	movlw	1
  2953  04BF  00B0               	movwf	??___awdiv
  2954  04C0  0830               	movf	??___awdiv,w
  2955  04C1  06B2               	xorwf	___awdiv@sign,f
  2956  04C2                     l1885:
  2957  04C2  01B3               	clrf	___awdiv@quotient
  2958  04C3  01B4               	clrf	___awdiv@quotient+1
  2959  04C4  082C               	movf	___awdiv@divisor,w
  2960  04C5  042D               	iorwf	___awdiv@divisor+1,w
  2961  04C6  1903               	btfsc	3,2
  2962  04C7  2CF1               	goto	l1907
  2963  04C8  01B1               	clrf	___awdiv@counter
  2964  04C9  0AB1               	incf	___awdiv@counter,f
  2965  04CA                     l1895:
  2966  04CA  1BAD               	btfsc	___awdiv@divisor+1,7
  2967  04CB  2CD6               	goto	l1897
  2968  04CC  3001               	movlw	1
  2969  04CD                     u1305:
  2970  04CD  35AC               	lslf	___awdiv@divisor,f
  2971  04CE  0DAD               	rlf	___awdiv@divisor+1,f
  2972  04CF  0B89               	decfsz	9,f
  2973  04D0  2CCD               	goto	u1305
  2974  04D1  3001               	movlw	1
  2975  04D2  00B0               	movwf	??___awdiv
  2976  04D3  0830               	movf	??___awdiv,w
  2977  04D4  07B1               	addwf	___awdiv@counter,f
  2978  04D5  2CCA               	goto	l1895
  2979  04D6                     l1897:
  2980  04D6  3001               	movlw	1
  2981  04D7                     u1325:
  2982  04D7  35B3               	lslf	___awdiv@quotient,f
  2983  04D8  0DB4               	rlf	___awdiv@quotient+1,f
  2984  04D9  0B89               	decfsz	9,f
  2985  04DA  2CD7               	goto	u1325
  2986  04DB  082D               	movf	___awdiv@divisor+1,w
  2987  04DC  022F               	subwf	___awdiv@dividend+1,w
  2988  04DD  1D03               	skipz
  2989  04DE  2CE1               	goto	u1335
  2990  04DF  082C               	movf	___awdiv@divisor,w
  2991  04E0  022E               	subwf	___awdiv@dividend,w
  2992  04E1                     u1335:
  2993  04E1  1C03               	skipc
  2994  04E2  2CE8               	goto	l1903
  2995  04E3  082C               	movf	___awdiv@divisor,w
  2996  04E4  02AE               	subwf	___awdiv@dividend,f
  2997  04E5  082D               	movf	___awdiv@divisor+1,w
  2998  04E6  3BAF               	subwfb	___awdiv@dividend+1,f
  2999  04E7  1433               	bsf	___awdiv@quotient,0
  3000  04E8                     l1903:
  3001  04E8  3001               	movlw	1
  3002  04E9                     u1345:
  3003  04E9  36AD               	lsrf	___awdiv@divisor+1,f
  3004  04EA  0CAC               	rrf	___awdiv@divisor,f
  3005  04EB  0B89               	decfsz	9,f
  3006  04EC  2CE9               	goto	u1345
  3007  04ED  3001               	movlw	1
  3008  04EE  02B1               	subwf	___awdiv@counter,f
  3009  04EF  1D03               	btfss	3,2
  3010  04F0  2CD6               	goto	l1897
  3011  04F1                     l1907:
  3012  04F1  0832               	movf	___awdiv@sign,w
  3013  04F2  1903               	btfsc	3,2
  3014  04F3  2CF9               	goto	l1911
  3015  04F4  09B3               	comf	___awdiv@quotient,f
  3016  04F5  09B4               	comf	___awdiv@quotient+1,f
  3017  04F6  0AB3               	incf	___awdiv@quotient,f
  3018  04F7  1903               	skipnz
  3019  04F8  0AB4               	incf	___awdiv@quotient+1,f
  3020  04F9                     l1911:
  3021  04F9  0834               	movf	___awdiv@quotient+1,w
  3022  04FA  00AD               	movwf	?___awdiv+1
  3023  04FB  0833               	movf	___awdiv@quotient,w
  3024  04FC  00AC               	movwf	?___awdiv
  3025  04FD  0008               	return
  3026  04FE                     __end_of___awdiv:
  3027                           
  3028                           	psect	text4
  3029  03C7                     __ptext4:	
  3030 ;; *************** function _SelectEvent *****************
  3031 ;; Defined at:
  3032 ;;		line 30 in file "procedures.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  x               2   44[BANK0 ] int 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2   41[BANK0 ] int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0, pclath, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3046 ;;      Params:         0       2       0       0
  3047 ;;      Locals:         0       2       0       0
  3048 ;;      Temps:          0       1       0       0
  3049 ;;      Totals:         0       5       0       0
  3050 ;;Total ram usage:        5 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 7
  3053 ;; This function calls:
  3054 ;;		_RandomRange
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _SelectEvent
  3062  03C7                     _SelectEvent:
  3063                           
  3064                           ;procedures.c: 31:     int x = RandomRange(0,100);
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _SelectEvent: [wreg+status,2+status,0+pclath+cstack]
  3068  03C7  3000               	movlw	0
  3069  03C8  0140               	movlb	0	; select bank0
  3070  03C9  00C5               	movwf	RandomRange@low
  3071  03CA  00C6               	movwf	RandomRange@low+1
  3072  03CB  3064               	movlw	100
  3073  03CC  00C7               	movwf	RandomRange@high
  3074  03CD  3000               	movlw	0
  3075  03CE  00C8               	movwf	RandomRange@high+1
  3076  03CF  2712               	fcall	_RandomRange
  3077  03D0  0140               	movlb	0	; select bank0
  3078  03D1  0846               	movf	?_RandomRange+1,w
  3079  03D2  00CD               	movwf	SelectEvent@x+1
  3080  03D3  0845               	movf	?_RandomRange,w
  3081  03D4  00CC               	movwf	SelectEvent@x
  3082                           
  3083                           ;procedures.c: 32:     if (x < 5) return 0;
  3084  03D5  084D               	movf	SelectEvent@x+1,w
  3085  03D6  3A80               	xorlw	128
  3086  03D7  00CB               	movwf	??_SelectEvent
  3087  03D8  3080               	movlw	128
  3088  03D9  024B               	subwf	??_SelectEvent,w
  3089  03DA  1D03               	skipz
  3090  03DB  2BDE               	goto	u1985
  3091  03DC  3005               	movlw	5
  3092  03DD  024C               	subwf	SelectEvent@x,w
  3093  03DE                     u1985:
  3094  03DE  1803               	skipnc
  3095  03DF  2BE4               	goto	l2475
  3096  03E0  0140               	movlb	0	; select bank0
  3097  03E1  01C9               	clrf	?_SelectEvent
  3098  03E2  01CA               	clrf	?_SelectEvent+1
  3099  03E3  0008               	return
  3100  03E4                     l2475:
  3101                           
  3102                           ;procedures.c: 33:     x -= 5;
  3103  03E4  30FB               	movlw	251
  3104  03E5  0140               	movlb	0	; select bank0
  3105  03E6  07CC               	addwf	SelectEvent@x,f
  3106  03E7  30FF               	movlw	255
  3107  03E8  3DCD               	addwfc	SelectEvent@x+1,f
  3108                           
  3109                           ;procedures.c: 34:     if (x < 50) return 1;
  3110  03E9  084D               	movf	SelectEvent@x+1,w
  3111  03EA  3A80               	xorlw	128
  3112  03EB  00CB               	movwf	??_SelectEvent
  3113  03EC  3080               	movlw	128
  3114  03ED  024B               	subwf	??_SelectEvent,w
  3115  03EE  1D03               	skipz
  3116  03EF  2BF2               	goto	u1995
  3117  03F0  3032               	movlw	50
  3118  03F1  024C               	subwf	SelectEvent@x,w
  3119  03F2                     u1995:
  3120  03F2  1803               	skipnc
  3121  03F3  2BFA               	goto	l2481
  3122  03F4  3001               	movlw	1
  3123  03F5  0140               	movlb	0	; select bank0
  3124  03F6  00C9               	movwf	?_SelectEvent
  3125  03F7  3000               	movlw	0
  3126  03F8  00CA               	movwf	?_SelectEvent+1
  3127  03F9  0008               	return
  3128  03FA                     l2481:
  3129                           
  3130                           ;procedures.c: 35:     x -= 50;
  3131  03FA  30CE               	movlw	206
  3132  03FB  0140               	movlb	0	; select bank0
  3133  03FC  07CC               	addwf	SelectEvent@x,f
  3134  03FD  30FF               	movlw	255
  3135  03FE  3DCD               	addwfc	SelectEvent@x+1,f
  3136                           
  3137                           ;procedures.c: 36:     if (x < 10) return 2;
  3138  03FF  084D               	movf	SelectEvent@x+1,w
  3139  0400  3A80               	xorlw	128
  3140  0401  00CB               	movwf	??_SelectEvent
  3141  0402  3080               	movlw	128
  3142  0403  024B               	subwf	??_SelectEvent,w
  3143  0404  1D03               	skipz
  3144  0405  2C08               	goto	u2005
  3145  0406  300A               	movlw	10
  3146  0407  024C               	subwf	SelectEvent@x,w
  3147  0408                     u2005:
  3148  0408  1803               	skipnc
  3149  0409  2C10               	goto	l2487
  3150  040A  3002               	movlw	2
  3151  040B  0140               	movlb	0	; select bank0
  3152  040C  00C9               	movwf	?_SelectEvent
  3153  040D  3000               	movlw	0
  3154  040E  00CA               	movwf	?_SelectEvent+1
  3155  040F  0008               	return
  3156  0410                     l2487:
  3157                           
  3158                           ;procedures.c: 37:     x -= 10;
  3159  0410  30F6               	movlw	246
  3160  0411  0140               	movlb	0	; select bank0
  3161  0412  07CC               	addwf	SelectEvent@x,f
  3162  0413  30FF               	movlw	255
  3163  0414  3DCD               	addwfc	SelectEvent@x+1,f
  3164                           
  3165                           ;procedures.c: 38:     if (x < 35) return RandomRange(3,7);
  3166  0415  084D               	movf	SelectEvent@x+1,w
  3167  0416  3A80               	xorlw	128
  3168  0417  00CB               	movwf	??_SelectEvent
  3169  0418  3080               	movlw	128
  3170  0419  024B               	subwf	??_SelectEvent,w
  3171  041A  1D03               	skipz
  3172  041B  2C1E               	goto	u2015
  3173  041C  3023               	movlw	35
  3174  041D  024C               	subwf	SelectEvent@x,w
  3175  041E                     u2015:
  3176  041E  1803               	skipnc
  3177  041F  2C30               	goto	l2495
  3178  0420  3003               	movlw	3
  3179  0421  0140               	movlb	0	; select bank0
  3180  0422  00C5               	movwf	RandomRange@low
  3181  0423  3000               	movlw	0
  3182  0424  00C6               	movwf	RandomRange@low+1
  3183  0425  3007               	movlw	7
  3184  0426  00C7               	movwf	RandomRange@high
  3185  0427  3000               	movlw	0
  3186  0428  00C8               	movwf	RandomRange@high+1
  3187  0429  2712               	fcall	_RandomRange
  3188  042A  0140               	movlb	0	; select bank0
  3189  042B  0846               	movf	?_RandomRange+1,w
  3190  042C  00CA               	movwf	?_SelectEvent+1
  3191  042D  0845               	movf	?_RandomRange,w
  3192  042E  00C9               	movwf	?_SelectEvent
  3193  042F  0008               	return
  3194  0430                     l2495:
  3195  0430  3000               	movlw	0
  3196  0431  0140               	movlb	0	; select bank0
  3197  0432  00C5               	movwf	RandomRange@low
  3198  0433  00C6               	movwf	RandomRange@low+1
  3199  0434  3007               	movlw	7
  3200  0435  00C7               	movwf	RandomRange@high
  3201  0436  3000               	movlw	0
  3202  0437  00C8               	movwf	RandomRange@high+1
  3203  0438  2712               	fcall	_RandomRange
  3204  0439  0140               	movlb	0	; select bank0
  3205  043A  0846               	movf	?_RandomRange+1,w
  3206  043B  00CA               	movwf	?_SelectEvent+1
  3207  043C  0845               	movf	?_RandomRange,w
  3208  043D  00C9               	movwf	?_SelectEvent
  3209  043E  0008               	return
  3210  043F                     __end_of_SelectEvent:
  3211                           
  3212                           	psect	text5
  3213  0751                     __ptext5:	
  3214 ;; *************** function _SYSTEM_Initialize *****************
  3215 ;; Defined at:
  3216 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3230 ;;      Params:         0       0       0       0
  3231 ;;      Locals:         0       0       0       0
  3232 ;;      Temps:          0       0       0       0
  3233 ;;      Totals:         0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 6
  3237 ;; This function calls:
  3238 ;;		_ADC_Initialize
  3239 ;;		_OSCILLATOR_Initialize
  3240 ;;		_PIN_MANAGER_Initialize
  3241 ;;		_PWM3_Initialize
  3242 ;;		_TMR1_Initialize
  3243 ;;		_TMR2_Initialize
  3244 ;;		_WDT_Initialize
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _SYSTEM_Initialize
  3252  0751                     _SYSTEM_Initialize:
  3253                           
  3254                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3258  0751  26FD               	fcall	_PIN_MANAGER_Initialize
  3259                           
  3260                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3261  0752  275F               	fcall	_OSCILLATOR_Initialize
  3262                           
  3263                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3264  0753  2775               	fcall	_WDT_Initialize
  3265                           
  3266                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  3267  0754  2726               	fcall	_ADC_Initialize
  3268                           
  3269                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  3270  0755  2759               	fcall	_PWM3_Initialize
  3271                           
  3272                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3273  0756  2736               	fcall	_TMR2_Initialize
  3274                           
  3275                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  3276  0757  26B8               	fcall	_TMR1_Initialize
  3277  0758  0008               	return
  3278  0759                     __end_of_SYSTEM_Initialize:
  3279                           
  3280                           	psect	text6
  3281  0775                     __ptext6:	
  3282 ;; *************** function _WDT_Initialize *****************
  3283 ;; Defined at:
  3284 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		status,2
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3298 ;;      Params:         0       0       0       0
  3299 ;;      Locals:         0       0       0       0
  3300 ;;      Temps:          0       0       0       0
  3301 ;;      Totals:         0       0       0       0
  3302 ;;Total ram usage:        0 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 4
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_SYSTEM_Initialize
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _WDT_Initialize
  3314  0775                     _WDT_Initialize:
  3315                           
  3316                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x00;
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _WDT_Initialize: [status,2]
  3320  0775  0150               	movlb	16	; select bank16
  3321  0776  018C               	clrf	12	;volatile
  3322  0777  0008               	return
  3323  0778                     __end_of_WDT_Initialize:
  3324                           
  3325                           	psect	text7
  3326  0736                     __ptext7:	
  3327 ;; *************** function _TMR2_Initialize *****************
  3328 ;; Defined at:
  3329 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3343 ;;      Params:         0       0       0       0
  3344 ;;      Locals:         0       0       0       0
  3345 ;;      Temps:          0       0       0       0
  3346 ;;      Totals:         0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 4
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_SYSTEM_Initialize
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _TMR2_Initialize
  3359  0736                     _TMR2_Initialize:
  3360                           
  3361                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3365  0736  3001               	movlw	1
  3366  0737  0145               	movlb	5	; select bank5
  3367  0738  0090               	movwf	16	;volatile
  3368                           
  3369                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  3370  0739  018F               	clrf	15	;volatile
  3371                           
  3372                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  3373  073A  0191               	clrf	17	;volatile
  3374                           
  3375                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  3376  073B  30FF               	movlw	255
  3377  073C  008D               	movwf	13	;volatile
  3378                           
  3379                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  3380  073D  018C               	clrf	12	;volatile
  3381                           
  3382                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  3383  073E  014E               	movlb	14	; select bank14
  3384  073F  130D               	bcf	13,6	;volatile
  3385                           
  3386                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  3387  0740  3080               	movlw	128
  3388  0741  0145               	movlb	5	; select bank5
  3389  0742  008E               	movwf	14	;volatile
  3390  0743  0008               	return
  3391  0744                     __end_of_TMR2_Initialize:
  3392                           
  3393                           	psect	text8
  3394  06B8                     __ptext8:	
  3395 ;; *************** function _TMR1_Initialize *****************
  3396 ;; Defined at:
  3397 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3411 ;;      Params:         0       0       0       0
  3412 ;;      Locals:         0       0       0       0
  3413 ;;      Temps:          0       0       0       0
  3414 ;;      Totals:         0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 4
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_SYSTEM_Initialize
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _TMR1_Initialize
  3427  06B8                     _TMR1_Initialize:
  3428                           
  3429                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  3433  06B8  0144               	movlb	4	; select bank4
  3434  06B9  018F               	clrf	15	;volatile
  3435                           
  3436                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  3437  06BA  0190               	clrf	16	;volatile
  3438                           
  3439                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x01;
  3440  06BB  3001               	movlw	1
  3441  06BC  0091               	movwf	17	;volatile
  3442                           
  3443                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0xB1;
  3444  06BD  30B1               	movlw	177
  3445  06BE  008D               	movwf	13	;volatile
  3446                           
  3447                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xE0;
  3448  06BF  30E0               	movlw	224
  3449  06C0  008C               	movwf	12	;volatile
  3450                           
  3451                           ;mcc_generated_files/tmr1.c: 83:     PIR1bits.TMR1IF = 0;
  3452  06C1  014E               	movlb	14	; select bank14
  3453  06C2  128D               	bcf	13,5	;volatile
  3454                           
  3455                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3456  06C3  0144               	movlb	4	; select bank4
  3457  06C4  080D               	movf	13,w	;volatile
  3458  06C5  0140               	movlb	0	; select bank0
  3459  06C6  00DF               	movwf	_timer1ReloadVal+1	;volatile
  3460  06C7  0144               	movlb	4	; select bank4
  3461  06C8  080C               	movf	12,w	;volatile
  3462  06C9  0140               	movlb	0	; select bank0
  3463  06CA  00DE               	movwf	_timer1ReloadVal	;volatile
  3464                           
  3465                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  3466  06CB  3001               	movlw	1
  3467  06CC  0144               	movlb	4	; select bank4
  3468  06CD  008E               	movwf	14	;volatile
  3469  06CE  0008               	return
  3470  06CF                     __end_of_TMR1_Initialize:
  3471                           
  3472                           	psect	text9
  3473  0759                     __ptext9:	
  3474 ;; *************** function _PWM3_Initialize *****************
  3475 ;; Defined at:
  3476 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3490 ;;      Params:         0       0       0       0
  3491 ;;      Locals:         0       0       0       0
  3492 ;;      Temps:          0       0       0       0
  3493 ;;      Totals:         0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 4
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_SYSTEM_Initialize
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _PWM3_Initialize
  3506  0759                     _PWM3_Initialize:
  3507                           
  3508                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _PWM3_Initialize: [wreg+status,2]
  3512  0759  3080               	movlw	128
  3513  075A  0146               	movlb	6	; select bank6
  3514  075B  0096               	movwf	22	;volatile
  3515                           
  3516                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x00;
  3517  075C  0195               	clrf	21	;volatile
  3518                           
  3519                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0x00;
  3520  075D  0194               	clrf	20	;volatile
  3521  075E  0008               	return
  3522  075F                     __end_of_PWM3_Initialize:
  3523                           
  3524                           	psect	text10
  3525  06FD                     __ptext10:	
  3526 ;; *************** function _PIN_MANAGER_Initialize *****************
  3527 ;; Defined at:
  3528 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3542 ;;      Params:         0       0       0       0
  3543 ;;      Locals:         0       0       0       0
  3544 ;;      Temps:          0       0       0       0
  3545 ;;      Totals:         0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 4
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_SYSTEM_Initialize
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _PIN_MANAGER_Initialize
  3558  06FD                     _PIN_MANAGER_Initialize:
  3559                           
  3560                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x04;
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3564  06FD  3004               	movlw	4
  3565  06FE  0140               	movlb	0	; select bank0
  3566  06FF  0098               	movwf	24	;volatile
  3567                           
  3568                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x0B;
  3569  0700  300B               	movlw	11
  3570  0701  0092               	movwf	18	;volatile
  3571                           
  3572                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x17;
  3573  0702  3017               	movlw	23
  3574  0703  017E               	movlb	62	; select bank62
  3575  0704  00B8               	movwf	56	;volatile
  3576                           
  3577                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  3578  0705  01B9               	clrf	57	;volatile
  3579                           
  3580                           ;mcc_generated_files/pin_manager.c: 80:     ODCONA = 0x00;
  3581  0706  01BA               	clrf	58	;volatile
  3582                           
  3583                           ;mcc_generated_files/pin_manager.c: 85:     SLRCONA = 0x37;
  3584  0707  3037               	movlw	55
  3585  0708  00BB               	movwf	59	;volatile
  3586                           
  3587                           ;mcc_generated_files/pin_manager.c: 90:     INLVLA = 0x3F;
  3588  0709  303F               	movlw	63
  3589  070A  00BC               	movwf	60	;volatile
  3590                           
  3591                           ;mcc_generated_files/pin_manager.c: 99:     ADACTPPS = 0x05;
  3592  070B  3005               	movlw	5
  3593  070C  017D               	movlb	61	; select bank61
  3594  070D  00C3               	movwf	67	;volatile
  3595                           
  3596                           ;mcc_generated_files/pin_manager.c: 100:     RA4PPS = 0x03;
  3597  070E  3003               	movlw	3
  3598  070F  017E               	movlb	62	; select bank62
  3599  0710  0094               	movwf	20	;volatile
  3600  0711  0008               	return
  3601  0712                     __end_of_PIN_MANAGER_Initialize:
  3602                           
  3603                           	psect	text11
  3604  075F                     __ptext11:	
  3605 ;; *************** function _OSCILLATOR_Initialize *****************
  3606 ;; Defined at:
  3607 ;;		line 62 in file "mcc_generated_files/mcc.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3621 ;;      Params:         0       0       0       0
  3622 ;;      Locals:         0       0       0       0
  3623 ;;      Temps:          0       0       0       0
  3624 ;;      Totals:         0       0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 4
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_SYSTEM_Initialize
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _OSCILLATOR_Initialize
  3637  075F                     _OSCILLATOR_Initialize:
  3638                           
  3639                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  3640                           
  3641                           ;incstack = 0
  3642                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3643  075F  0151               	movlb	17	; select bank17
  3644  0760  0191               	clrf	17	;volatile
  3645                           
  3646                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x03;
  3647  0761  3003               	movlw	3
  3648  0762  0093               	movwf	19	;volatile
  3649                           
  3650                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  3651  0763  0192               	clrf	18	;volatile
  3652  0764  0008               	return
  3653  0765                     __end_of_OSCILLATOR_Initialize:
  3654                           
  3655                           	psect	text12
  3656  0726                     __ptext12:	
  3657 ;; *************** function _ADC_Initialize *****************
  3658 ;; Defined at:
  3659 ;;		line 67 in file "mcc_generated_files/adc.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, pclath, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3673 ;;      Params:         0       0       0       0
  3674 ;;      Locals:         0       0       0       0
  3675 ;;      Temps:          0       0       0       0
  3676 ;;      Totals:         0       0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 5
  3680 ;; This function calls:
  3681 ;;		_ADC_SetInterruptHandler
  3682 ;; This function is called by:
  3683 ;;		_SYSTEM_Initialize
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _ADC_Initialize
  3689  0726                     _ADC_Initialize:
  3690                           
  3691                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3695  0726  30D0               	movlw	208
  3696  0727  0141               	movlb	1	; select bank1
  3697  0728  009E               	movwf	30	;volatile
  3698                           
  3699                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3700  0729  019B               	clrf	27	;volatile
  3701                           
  3702                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3703  072A  019C               	clrf	28	;volatile
  3704                           
  3705                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x05;
  3706  072B  3005               	movlw	5
  3707  072C  009D               	movwf	29	;volatile
  3708                           
  3709                           ;mcc_generated_files/adc.c: 84:     PIE1bits.ADIE = 1;
  3710  072D  014E               	movlb	14	; select bank14
  3711  072E  1417               	bsf	23,0	;volatile
  3712                           
  3713                           ;mcc_generated_files/adc.c: 87:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  3714  072F  3078               	movlw	low _ADC_DefaultInterruptHandler
  3715  0730  0140               	movlb	0	; select bank0
  3716  0731  00AC               	movwf	ADC_SetInterruptHandler@InterruptHandler
  3717  0732  3007               	movlw	high _ADC_DefaultInterruptHandler
  3718  0733  00AD               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  3719  0734  2765               	fcall	_ADC_SetInterruptHandler
  3720  0735  0008               	return
  3721  0736                     __end_of_ADC_Initialize:
  3722                           
  3723                           	psect	text13
  3724  0765                     __ptext13:	
  3725 ;; *************** function _ADC_SetInterruptHandler *****************
  3726 ;; Defined at:
  3727 ;;		line 156 in file "mcc_generated_files/adc.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  InterruptHan    2   12[BANK0 ] PTR FTN()void 
  3730 ;;		 -> ADCEvent(1), ADC_DefaultInterruptHandler(1), 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3742 ;;      Params:         0       2       0       0
  3743 ;;      Locals:         0       0       0       0
  3744 ;;      Temps:          0       0       0       0
  3745 ;;      Totals:         0       2       0       0
  3746 ;;Total ram usage:        2 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 4
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_ADC_Initialize
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _ADC_SetInterruptHandler
  3759  0765                     _ADC_SetInterruptHandler:
  3760                           
  3761                           ;mcc_generated_files/adc.c: 157:     ADC_InterruptHandler = InterruptHandler;
  3762                           
  3763                           ;incstack = 0
  3764                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  3765  0765  0140               	movlb	0	; select bank0
  3766  0766  082D               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  3767  0767  00DD               	movwf	_ADC_InterruptHandler+1
  3768  0768  082C               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  3769  0769  00DC               	movwf	_ADC_InterruptHandler
  3770  076A  0008               	return
  3771  076B                     __end_of_ADC_SetInterruptHandler:
  3772                           
  3773                           	psect	text14
  3774  06CF                     __ptext14:	
  3775 ;; *************** function _RestPeriod *****************
  3776 ;; Defined at:
  3777 ;;		line 97 in file "procedures.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3791 ;;      Params:         0       0       0       0
  3792 ;;      Locals:         0       0       0       0
  3793 ;;      Temps:          0       0       0       0
  3794 ;;      Totals:         0       0       0       0
  3795 ;;Total ram usage:        0 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 7
  3798 ;; This function calls:
  3799 ;;		_PWM3_LoadDutyValue
  3800 ;;		_RandomRange
  3801 ;;		_delay_s
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _RestPeriod
  3809  06CF                     _RestPeriod:
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in _RestPeriod: [wreg+status,2+status,0+pclath+cstack]
  3813                           ;procedures.c: 98:     do { LATAbits.LATA2 = 1; } while(0);
  3814  06CF  0140               	movlb	0	; select bank0
  3815  06D0  1518               	bsf	24,2	;volatile
  3816                           
  3817                           ;procedures.c: 99:     PWM3_LoadDutyValue(0);
  3818  06D1  3000               	movlw	0
  3819  06D2  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  3820  06D3  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3821  06D4  269F               	fcall	_PWM3_LoadDutyValue
  3822                           
  3823                           ;procedures.c: 100:     delay_s(RandomRange(1,100));
  3824  06D5  3001               	movlw	1
  3825  06D6  0140               	movlb	0	; select bank0
  3826  06D7  00C5               	movwf	RandomRange@low
  3827  06D8  3000               	movlw	0
  3828  06D9  00C6               	movwf	RandomRange@low+1
  3829  06DA  3064               	movlw	100
  3830  06DB  00C7               	movwf	RandomRange@high
  3831  06DC  3000               	movlw	0
  3832  06DD  00C8               	movwf	RandomRange@high+1
  3833  06DE  2712               	fcall	_RandomRange
  3834  06DF  0140               	movlb	0	; select bank0
  3835  06E0  0846               	movf	?_RandomRange+1,w
  3836  06E1  00CA               	movwf	delay_s@count+1
  3837  06E2  0845               	movf	?_RandomRange,w
  3838  06E3  00C9               	movwf	delay_s@count
  3839  06E4  2622               	fcall	_delay_s
  3840  06E5  0008               	return
  3841  06E6                     __end_of_RestPeriod:
  3842                           
  3843                           	psect	text15
  3844  06E6                     __ptext15:	
  3845 ;; *************** function _Constant *****************
  3846 ;; Defined at:
  3847 ;;		line 69 in file "procedures.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3861 ;;      Params:         0       0       0       0
  3862 ;;      Locals:         0       0       0       0
  3863 ;;      Temps:          0       0       0       0
  3864 ;;      Totals:         0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 7
  3868 ;; This function calls:
  3869 ;;		_PWM3_LoadDutyValue
  3870 ;;		_RandomRange
  3871 ;;		_delay_s
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _Constant
  3879  06E6                     _Constant:
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _Constant: [wreg+status,2+status,0+pclath+cstack]
  3883                           ;procedures.c: 70:     do { LATAbits.LATA2 = 1; } while(0);
  3884  06E6  0140               	movlb	0	; select bank0
  3885  06E7  1518               	bsf	24,2	;volatile
  3886                           
  3887                           ;procedures.c: 71:     PWM3_LoadDutyValue((uint16_t)0.15*1023);
  3888  06E8  3000               	movlw	0
  3889  06E9  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  3890  06EA  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3891  06EB  269F               	fcall	_PWM3_LoadDutyValue
  3892                           
  3893                           ;procedures.c: 72:     delay_s(RandomRange(1,100));
  3894  06EC  3001               	movlw	1
  3895  06ED  0140               	movlb	0	; select bank0
  3896  06EE  00C5               	movwf	RandomRange@low
  3897  06EF  3000               	movlw	0
  3898  06F0  00C6               	movwf	RandomRange@low+1
  3899  06F1  3064               	movlw	100
  3900  06F2  00C7               	movwf	RandomRange@high
  3901  06F3  3000               	movlw	0
  3902  06F4  00C8               	movwf	RandomRange@high+1
  3903  06F5  2712               	fcall	_RandomRange
  3904  06F6  0140               	movlb	0	; select bank0
  3905  06F7  0846               	movf	?_RandomRange+1,w
  3906  06F8  00CA               	movwf	delay_s@count+1
  3907  06F9  0845               	movf	?_RandomRange,w
  3908  06FA  00C9               	movwf	delay_s@count
  3909  06FB  2622               	fcall	_delay_s
  3910  06FC  0008               	return
  3911  06FD                     __end_of_Constant:
  3912                           
  3913                           	psect	text16
  3914  0622                     __ptext16:	
  3915 ;; *************** function _delay_s *****************
  3916 ;; Defined at:
  3917 ;;		line 18 in file "procedures.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  count           2   41[BANK0 ] int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  i               2   45[BANK0 ] int 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3931 ;;      Params:         0       2       0       0
  3932 ;;      Locals:         0       2       0       0
  3933 ;;      Temps:          0       2       0       0
  3934 ;;      Totals:         0       6       0       0
  3935 ;;Total ram usage:        6 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 4
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;;		_Constant
  3943 ;;		_RestPeriod
  3944 ;;		_Wave
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function _delay_s
  3950  0622                     _delay_s:
  3951                           
  3952                           ;procedures.c: 19:     for (int i=0; i<count; i++)
  3953                           
  3954                           ;incstack = 0
  3955                           ; Regs used in _delay_s: [wreg+status,2]
  3956  0622  0140               	movlb	0	; select bank0
  3957  0623  01CD               	clrf	delay_s@i
  3958  0624  01CE               	clrf	delay_s@i+1
  3959  0625                     l334:
  3960  0625  084E               	movf	delay_s@i+1,w
  3961  0626  3A80               	xorlw	128
  3962  0627  00CB               	movwf	??_delay_s
  3963  0628  084A               	movf	delay_s@count+1,w
  3964  0629  3A80               	xorlw	128
  3965  062A  024B               	subwf	??_delay_s,w
  3966  062B  1D03               	skipz
  3967  062C  2E2F               	goto	u1195
  3968  062D  0849               	movf	delay_s@count,w
  3969  062E  024D               	subwf	delay_s@i,w
  3970  062F                     u1195:
  3971  062F  1803               	btfsc	3,0
  3972  0630  0008               	return
  3973                           
  3974                           ;procedures.c: 20:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3975  0631  300B               	movlw	11
  3976  0632  0140               	movlb	0	; select bank0
  3977  0633  00CC               	movwf	??_delay_s+1
  3978  0634  3026               	movlw	38
  3979  0635  00CB               	movwf	??_delay_s
  3980  0636  305D               	movlw	93
  3981  0637                     u2057:
  3982  0637  0B89               	decfsz	9,f
  3983  0638  2E37               	goto	u2057
  3984  0639  0BCB               	decfsz	??_delay_s,f
  3985  063A  2E37               	goto	u2057
  3986  063B  0BCC               	decfsz	??_delay_s+1,f
  3987  063C  2E37               	goto	u2057
  3988  063D  3200               	nop2
  3989  063E  3001               	movlw	1
  3990  063F  0140               	movlb	0	; select bank0
  3991  0640  07CD               	addwf	delay_s@i,f
  3992  0641  3000               	movlw	0
  3993  0642  3DCE               	addwfc	delay_s@i+1,f
  3994  0643  2E25               	goto	l334
  3995  0644                     __end_of_delay_s:
  3996                           
  3997                           	psect	text17
  3998  0218                     __ptext17:	
  3999 ;; *************** function _ADCP *****************
  4000 ;; Defined at:
  4001 ;;		line 76 in file "procedures.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  ii              2    2[BANK1 ] int 
  4006 ;;  i               2    0[BANK1 ] int 
  4007 ;;  DutyValue       2    4[BANK1 ] unsigned short 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, pclath, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4017 ;;      Params:         0       0       0       0
  4018 ;;      Locals:         0       0       6       0
  4019 ;;      Temps:          0       4       0       0
  4020 ;;      Totals:         0       4       6       0
  4021 ;;Total ram usage:       10 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 7
  4024 ;; This function calls:
  4025 ;;		_PWM3_LoadDutyValue
  4026 ;;		_RandomRange
  4027 ;;		___lwdiv
  4028 ;;		___wmul
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _ADCP
  4036  0218                     _ADCP:
  4037                           
  4038                           ;incstack = 0
  4039                           ; Regs used in _ADCP: [wreg+status,2+status,0+pclath+cstack]
  4040                           ;procedures.c: 77:     do { LATAbits.LATA2 = 0; } while(0);
  4041  0218  0140               	movlb	0	; select bank0
  4042  0219  1118               	bcf	24,2	;volatile
  4043                           
  4044                           ;procedures.c: 79:     for (int i=0; i<RandomRange(1,100);i++){
  4045  021A  0141               	movlb	1	; select bank1
  4046  021B  01A0               	clrf	ADCP@i^(0+128)
  4047  021C  01A1               	clrf	(ADCP@i+1)^(0+128)
  4048  021D                     l2371:
  4049  021D  3001               	movlw	1
  4050  021E  0140               	movlb	0	; select bank0
  4051  021F  00C5               	movwf	RandomRange@low
  4052  0220  3000               	movlw	0
  4053  0221  00C6               	movwf	RandomRange@low+1
  4054  0222  3064               	movlw	100
  4055  0223  00C7               	movwf	RandomRange@high
  4056  0224  3000               	movlw	0
  4057  0225  00C8               	movwf	RandomRange@high+1
  4058  0226  2712               	fcall	_RandomRange
  4059  0227  0141               	movlb	1	; select bank1
  4060  0228  0821               	movf	(ADCP@i+1)^(0+128),w
  4061  0229  3A80               	xorlw	128
  4062  022A  0140               	movlb	0	; select bank0
  4063  022B  00C9               	movwf	??_ADCP
  4064  022C  0846               	movf	?_RandomRange+1,w
  4065  022D  3A80               	xorlw	128
  4066  022E  0249               	subwf	??_ADCP,w
  4067  022F  1D03               	skipz
  4068  0230  2A34               	goto	u1915
  4069  0231  0845               	movf	?_RandomRange,w
  4070  0232  0141               	movlb	1	; select bank1
  4071  0233  0220               	subwf	ADCP@i^(0+128),w
  4072  0234                     u1915:
  4073  0234  1803               	btfsc	3,0
  4074  0235  2AAE               	goto	l2373
  4075                           
  4076                           ;procedures.c: 80:         for (int ii=0; ii< 1000; ii++){
  4077  0236  0141               	movlb	1	; select bank1
  4078  0237  01A2               	clrf	ADCP@ii^(0+128)
  4079  0238  01A3               	clrf	(ADCP@ii+1)^(0+128)
  4080  0239                     l2351:
  4081                           
  4082                           ;procedures.c: 82:             if(ADCValue > ADCAverage)
  4083  0239  0140               	movlb	0	; select bank0
  4084  023A  0857               	movf	_ADCValue+1,w
  4085  023B  0263               	subwf	_ADCAverage+1,w
  4086  023C  1D03               	skipz
  4087  023D  2A40               	goto	u1895
  4088  023E  0856               	movf	_ADCValue,w
  4089  023F  0262               	subwf	_ADCAverage,w
  4090  0240                     u1895:
  4091  0240  1803               	skipnc
  4092  0241  2A4A               	goto	l2355
  4093                           
  4094                           ;procedures.c: 83:                 DutyValue = (uint16_t) (ADCValue - ADCAverage);
  4095  0242  0862               	movf	_ADCAverage,w
  4096  0243  0256               	subwf	_ADCValue,w
  4097  0244  0141               	movlb	1	; select bank1
  4098  0245  00A4               	movwf	ADCP@DutyValue^(0+128)
  4099  0246  0140               	movlb	0	; select bank0
  4100  0247  0863               	movf	_ADCAverage+1,w
  4101  0248  3B57               	subwfb	_ADCValue+1,w
  4102  0249  2A51               	goto	L1
  4103  024A                     l2355:
  4104                           
  4105                           ;procedures.c: 85:                 DutyValue = (uint16_t) (ADCAverage - ADCValue);
  4106  024A  0856               	movf	_ADCValue,w
  4107  024B  0262               	subwf	_ADCAverage,w
  4108  024C  0141               	movlb	1	; select bank1
  4109  024D  00A4               	movwf	ADCP@DutyValue^(0+128)
  4110  024E  0140               	movlb	0	; select bank0
  4111  024F  0857               	movf	_ADCValue+1,w
  4112  0250  3B63               	subwfb	_ADCAverage+1,w
  4113  0251                     L1:
  4114  0251  0141               	movlb	1	; select bank1
  4115  0252  00A5               	movwf	(ADCP@DutyValue+1)^(0+128)
  4116                           
  4117                           ;procedures.c: 86:             DutyValue *= (2*(1023-ADC_Tol))/1023;
  4118  0253  30FF               	movlw	255
  4119  0254  0140               	movlb	0	; select bank0
  4120  0255  00C9               	movwf	??_ADCP
  4121  0256  3003               	movlw	3
  4122  0257  00CA               	movwf	??_ADCP+1
  4123  0258  0860               	movf	_ADC_Tol,w
  4124  0259  0249               	subwf	??_ADCP,w
  4125  025A  00CB               	movwf	??_ADCP+2
  4126  025B  0861               	movf	_ADC_Tol+1,w
  4127  025C  3B4A               	subwfb	??_ADCP+1,w
  4128  025D  00CC               	movwf	??_ADCP+3
  4129  025E  354B               	lslf	??_ADCP+2,w
  4130  025F  00AE               	movwf	___lwdiv@dividend
  4131  0260  0D4C               	rlf	??_ADCP+3,w
  4132  0261  00AF               	movwf	___lwdiv@dividend+1
  4133  0262  30FF               	movlw	255
  4134  0263  00AC               	movwf	___lwdiv@divisor
  4135  0264  3003               	movlw	3
  4136  0265  00AD               	movwf	___lwdiv@divisor+1
  4137  0266  258A               	fcall	___lwdiv
  4138  0267  0140               	movlb	0	; select bank0
  4139  0268  082D               	movf	?___lwdiv+1,w
  4140  0269  00B5               	movwf	___wmul@multiplier+1
  4141  026A  082C               	movf	?___lwdiv,w
  4142  026B  00B4               	movwf	___wmul@multiplier
  4143  026C  0141               	movlb	1	; select bank1
  4144  026D  0825               	movf	(ADCP@DutyValue+1)^(0+128),w
  4145  026E  0140               	movlb	0	; select bank0
  4146  026F  00B7               	movwf	___wmul@multiplicand+1
  4147  0270  0141               	movlb	1	; select bank1
  4148  0271  0824               	movf	ADCP@DutyValue^(0+128),w
  4149  0272  0140               	movlb	0	; select bank0
  4150  0273  00B6               	movwf	___wmul@multiplicand
  4151  0274  2683               	fcall	___wmul
  4152  0275  0140               	movlb	0	; select bank0
  4153  0276  0835               	movf	?___wmul+1,w
  4154  0277  0141               	movlb	1	; select bank1
  4155  0278  00A5               	movwf	(ADCP@DutyValue+1)^(0+128)
  4156  0279  0140               	movlb	0	; select bank0
  4157  027A  0834               	movf	?___wmul,w
  4158  027B  0141               	movlb	1	; select bank1
  4159  027C  00A4               	movwf	ADCP@DutyValue^(0+128)
  4160                           
  4161                           ;procedures.c: 87:             DutyValue += ADC_Tol;
  4162  027D  0140               	movlb	0	; select bank0
  4163  027E  0860               	movf	_ADC_Tol,w
  4164  027F  0141               	movlb	1	; select bank1
  4165  0280  07A4               	addwf	ADCP@DutyValue^(0+128),f
  4166  0281  0140               	movlb	0	; select bank0
  4167  0282  0861               	movf	_ADC_Tol+1,w
  4168  0283  0141               	movlb	1	; select bank1
  4169  0284  3DA5               	addwfc	(ADCP@DutyValue+1)^(0+128),f
  4170                           
  4171                           ;procedures.c: 88:             PWM3_LoadDutyValue(DutyValue);
  4172  0285  0825               	movf	(ADCP@DutyValue+1)^(0+128),w
  4173  0286  0140               	movlb	0	; select bank0
  4174  0287  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4175  0288  0141               	movlb	1	; select bank1
  4176  0289  0824               	movf	ADCP@DutyValue^(0+128),w
  4177  028A  0140               	movlb	0	; select bank0
  4178  028B  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  4179  028C  269F               	fcall	_PWM3_LoadDutyValue
  4180                           
  4181                           ;procedures.c: 89:             _delay((unsigned long)((1)*(8000000/4000.0)));
  4182  028D  3003               	movlw	3
  4183  028E  0140               	movlb	0	; select bank0
  4184  028F  00C9               	movwf	??_ADCP
  4185  0290  3097               	movlw	151
  4186  0291                     u2067:
  4187  0291  0B89               	decfsz	9,f
  4188  0292  2A91               	goto	u2067
  4189  0293  0BC9               	decfsz	??_ADCP,f
  4190  0294  2A91               	goto	u2067
  4191  0295  3200               	nop2
  4192                           
  4193                           ;procedures.c: 90:         }
  4194  0296  3001               	movlw	1
  4195  0297  0141               	movlb	1	; select bank1
  4196  0298  07A2               	addwf	ADCP@ii^(0+128),f
  4197  0299  3000               	movlw	0
  4198  029A  3DA3               	addwfc	(ADCP@ii+1)^(0+128),f
  4199  029B  0823               	movf	(ADCP@ii+1)^(0+128),w
  4200  029C  3A80               	xorlw	128
  4201  029D  0140               	movlb	0	; select bank0
  4202  029E  00C9               	movwf	??_ADCP
  4203  029F  3083               	movlw	131
  4204  02A0  0249               	subwf	??_ADCP,w
  4205  02A1  1D03               	skipz
  4206  02A2  2AA6               	goto	u1905
  4207  02A3  30E8               	movlw	232
  4208  02A4  0141               	movlb	1	; select bank1
  4209  02A5  0222               	subwf	ADCP@ii^(0+128),w
  4210  02A6                     u1905:
  4211  02A6  1C03               	skipc
  4212  02A7  2A39               	goto	l2351
  4213                           
  4214                           ;procedures.c: 91:     }
  4215  02A8  3001               	movlw	1
  4216  02A9  0141               	movlb	1	; select bank1
  4217  02AA  07A0               	addwf	ADCP@i^(0+128),f
  4218  02AB  3000               	movlw	0
  4219  02AC  3DA1               	addwfc	(ADCP@i+1)^(0+128),f
  4220  02AD  2A1D               	goto	l2371
  4221  02AE                     l2373:
  4222                           
  4223                           ;procedures.c: 92:     PWM3_LoadDutyValue(0);
  4224  02AE  3000               	movlw	0
  4225  02AF  0140               	movlb	0	; select bank0
  4226  02B0  00AC               	movwf	PWM3_LoadDutyValue@dutyValue
  4227  02B1  00AD               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4228  02B2  269F               	fcall	_PWM3_LoadDutyValue
  4229  02B3  0140               	movlb	0	; select bank0
  4230  02B4  1518               	bsf	24,2	;volatile
  4231  02B5  0008               	return
  4232  02B6                     __end_of_ADCP:
  4233                           
  4234                           	psect	text18
  4235  0683                     __ptext18:	
  4236 ;; *************** function ___wmul *****************
  4237 ;; Defined at:
  4238 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  multiplier      2   20[BANK0 ] unsigned int 
  4241 ;;  multiplicand    2   22[BANK0 ] unsigned int 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  product         2   24[BANK0 ] unsigned int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2   20[BANK0 ] unsigned int 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4253 ;;      Params:         0       4       0       0
  4254 ;;      Locals:         0       2       0       0
  4255 ;;      Temps:          0       0       0       0
  4256 ;;      Totals:         0       6       0       0
  4257 ;;Total ram usage:        6 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 4
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_ADCP
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function ___wmul
  4269  0683                     ___wmul:
  4270                           
  4271                           ;incstack = 0
  4272                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4273  0683  0140               	movlb	0	; select bank0
  4274  0684  01B8               	clrf	___wmul@product
  4275  0685  01B9               	clrf	___wmul@product+1
  4276  0686                     l2303:
  4277  0686  1C34               	btfss	___wmul@multiplier,0
  4278  0687  2E8C               	goto	l493
  4279  0688  0836               	movf	___wmul@multiplicand,w
  4280  0689  07B8               	addwf	___wmul@product,f
  4281  068A  0837               	movf	___wmul@multiplicand+1,w
  4282  068B  3DB9               	addwfc	___wmul@product+1,f
  4283  068C                     l493:
  4284  068C  3001               	movlw	1
  4285  068D                     u1795:
  4286  068D  35B6               	lslf	___wmul@multiplicand,f
  4287  068E  0DB7               	rlf	___wmul@multiplicand+1,f
  4288  068F  0B89               	decfsz	9,f
  4289  0690  2E8D               	goto	u1795
  4290  0691  3001               	movlw	1
  4291  0692                     u1805:
  4292  0692  36B5               	lsrf	___wmul@multiplier+1,f
  4293  0693  0CB4               	rrf	___wmul@multiplier,f
  4294  0694  0B89               	decfsz	9,f
  4295  0695  2E92               	goto	u1805
  4296  0696  0834               	movf	___wmul@multiplier,w
  4297  0697  0435               	iorwf	___wmul@multiplier+1,w
  4298  0698  1D03               	btfss	3,2
  4299  0699  2E86               	goto	l2303
  4300  069A  0839               	movf	___wmul@product+1,w
  4301  069B  00B5               	movwf	?___wmul+1
  4302  069C  0838               	movf	___wmul@product,w
  4303  069D  00B4               	movwf	?___wmul
  4304  069E  0008               	return
  4305  069F                     __end_of___wmul:
  4306                           
  4307                           	psect	text19
  4308  058A                     __ptext19:	
  4309 ;; *************** function ___lwdiv *****************
  4310 ;; Defined at:
  4311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  divisor         2   12[BANK0 ] unsigned int 
  4314 ;;  dividend        2   14[BANK0 ] unsigned int 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  quotient        2   18[BANK0 ] unsigned int 
  4317 ;;  counter         1   17[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2   12[BANK0 ] unsigned int 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4327 ;;      Params:         0       4       0       0
  4328 ;;      Locals:         0       3       0       0
  4329 ;;      Temps:          0       1       0       0
  4330 ;;      Totals:         0       8       0       0
  4331 ;;Total ram usage:        8 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 4
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_ADCP
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function ___lwdiv
  4343  058A                     ___lwdiv:
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4347  058A  0140               	movlb	0	; select bank0
  4348  058B  01B2               	clrf	___lwdiv@quotient
  4349  058C  01B3               	clrf	___lwdiv@quotient+1
  4350  058D  082C               	movf	___lwdiv@divisor,w
  4351  058E  042D               	iorwf	___lwdiv@divisor+1,w
  4352  058F  1903               	btfsc	3,2
  4353  0590  2DBA               	goto	l2337
  4354  0591  01B1               	clrf	___lwdiv@counter
  4355  0592  0AB1               	incf	___lwdiv@counter,f
  4356  0593                     l2325:
  4357  0593  1BAD               	btfsc	___lwdiv@divisor+1,7
  4358  0594  2D9F               	goto	l2327
  4359  0595  3001               	movlw	1
  4360  0596                     u1835:
  4361  0596  35AC               	lslf	___lwdiv@divisor,f
  4362  0597  0DAD               	rlf	___lwdiv@divisor+1,f
  4363  0598  0B89               	decfsz	9,f
  4364  0599  2D96               	goto	u1835
  4365  059A  3001               	movlw	1
  4366  059B  00B0               	movwf	??___lwdiv
  4367  059C  0830               	movf	??___lwdiv,w
  4368  059D  07B1               	addwf	___lwdiv@counter,f
  4369  059E  2D93               	goto	l2325
  4370  059F                     l2327:
  4371  059F  3001               	movlw	1
  4372  05A0                     u1855:
  4373  05A0  35B2               	lslf	___lwdiv@quotient,f
  4374  05A1  0DB3               	rlf	___lwdiv@quotient+1,f
  4375  05A2  0B89               	decfsz	9,f
  4376  05A3  2DA0               	goto	u1855
  4377  05A4  082D               	movf	___lwdiv@divisor+1,w
  4378  05A5  022F               	subwf	___lwdiv@dividend+1,w
  4379  05A6  1D03               	skipz
  4380  05A7  2DAA               	goto	u1865
  4381  05A8  082C               	movf	___lwdiv@divisor,w
  4382  05A9  022E               	subwf	___lwdiv@dividend,w
  4383  05AA                     u1865:
  4384  05AA  1C03               	skipc
  4385  05AB  2DB1               	goto	l2333
  4386  05AC  082C               	movf	___lwdiv@divisor,w
  4387  05AD  02AE               	subwf	___lwdiv@dividend,f
  4388  05AE  082D               	movf	___lwdiv@divisor+1,w
  4389  05AF  3BAF               	subwfb	___lwdiv@dividend+1,f
  4390  05B0  1432               	bsf	___lwdiv@quotient,0
  4391  05B1                     l2333:
  4392  05B1  3001               	movlw	1
  4393  05B2                     u1875:
  4394  05B2  36AD               	lsrf	___lwdiv@divisor+1,f
  4395  05B3  0CAC               	rrf	___lwdiv@divisor,f
  4396  05B4  0B89               	decfsz	9,f
  4397  05B5  2DB2               	goto	u1875
  4398  05B6  3001               	movlw	1
  4399  05B7  02B1               	subwf	___lwdiv@counter,f
  4400  05B8  1D03               	btfss	3,2
  4401  05B9  2D9F               	goto	l2327
  4402  05BA                     l2337:
  4403  05BA  0833               	movf	___lwdiv@quotient+1,w
  4404  05BB  00AD               	movwf	?___lwdiv+1
  4405  05BC  0832               	movf	___lwdiv@quotient,w
  4406  05BD  00AC               	movwf	?___lwdiv
  4407  05BE  0008               	return
  4408  05BF                     __end_of___lwdiv:
  4409                           
  4410                           	psect	text20
  4411  0712                     __ptext20:	
  4412 ;; *************** function _RandomRange *****************
  4413 ;; Defined at:
  4414 ;;		line 43 in file "procedures.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  low             2   37[BANK0 ] int 
  4417 ;;  high            2   39[BANK0 ] int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2   37[BANK0 ] int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0, pclath, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4429 ;;      Params:         0       4       0       0
  4430 ;;      Locals:         0       0       0       0
  4431 ;;      Temps:          0       0       0       0
  4432 ;;      Totals:         0       4       0       0
  4433 ;;Total ram usage:        4 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 6
  4436 ;; This function calls:
  4437 ;;		___awmod
  4438 ;;		_rand
  4439 ;; This function is called by:
  4440 ;;		_SelectEvent
  4441 ;;		_Constant
  4442 ;;		_ADCP
  4443 ;;		_RestPeriod
  4444 ;;		_Wave
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function _RandomRange
  4450  0712                     _RandomRange:
  4451                           
  4452                           ;procedures.c: 44:     return rand()%((high-low+1)+low);
  4453                           
  4454                           ;incstack = 0
  4455                           ; Regs used in _RandomRange: [wreg+status,2+status,0+pclath+cstack]
  4456  0712  0140               	movlb	0	; select bank0
  4457  0713  0847               	movf	RandomRange@high,w
  4458  0714  3E01               	addlw	1
  4459  0715  00BE               	movwf	___awmod@divisor
  4460  0716  3000               	movlw	0
  4461  0717  3D48               	addwfc	RandomRange@high+1,w
  4462  0718  00BF               	movwf	___awmod@divisor+1
  4463  0719  25BF               	fcall	_rand
  4464  071A  0140               	movlb	0	; select bank0
  4465  071B  0839               	movf	?_rand+1,w
  4466  071C  00C1               	movwf	___awmod@dividend+1
  4467  071D  0838               	movf	?_rand,w
  4468  071E  00C0               	movwf	___awmod@dividend
  4469  071F  24FE               	fcall	___awmod
  4470  0720  0140               	movlb	0	; select bank0
  4471  0721  083F               	movf	?___awmod+1,w
  4472  0722  00C6               	movwf	?_RandomRange+1
  4473  0723  083E               	movf	?___awmod,w
  4474  0724  00C5               	movwf	?_RandomRange
  4475  0725  0008               	return
  4476  0726                     __end_of_RandomRange:
  4477                           
  4478                           	psect	text21
  4479  05BF                     __ptext21:	
  4480 ;; *************** function _rand *****************
  4481 ;; Defined at:
  4482 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2   24[BANK0 ] int 
  4489 ;; Registers used:
  4490 ;;		wreg, status,2, status,0, pclath, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4496 ;;      Params:         0       2       0       0
  4497 ;;      Locals:         0       0       0       0
  4498 ;;      Temps:          0       4       0       0
  4499 ;;      Totals:         0       6       0       0
  4500 ;;Total ram usage:        6 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; Hardware stack levels required when called: 5
  4503 ;; This function calls:
  4504 ;;		___lmul
  4505 ;; This function is called by:
  4506 ;;		_RandomRange
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _rand
  4512  05BF                     _rand:
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  4516  05BF  0140               	movlb	0	; select bank0
  4517  05C0  085B               	movf	_seed+3,w
  4518  05C1  00AF               	movwf	___lmul@multiplier+3
  4519  05C2  085A               	movf	_seed+2,w
  4520  05C3  00AE               	movwf	___lmul@multiplier+2
  4521  05C4  0859               	movf	_seed+1,w
  4522  05C5  00AD               	movwf	___lmul@multiplier+1
  4523  05C6  0858               	movf	_seed,w
  4524  05C7  00AC               	movwf	___lmul@multiplier
  4525  05C8  304C               	movlw	76
  4526  05C9  00B3               	movwf	___lmul@multiplicand+3
  4527  05CA  3095               	movlw	149
  4528  05CB  00B2               	movwf	___lmul@multiplicand+2
  4529  05CC  307F               	movlw	127
  4530  05CD  00B1               	movwf	___lmul@multiplicand+1
  4531  05CE  302D               	movlw	45
  4532  05CF  00B0               	movwf	___lmul@multiplicand
  4533  05D0  25F2               	fcall	___lmul
  4534  05D1  3001               	movlw	1
  4535  05D2  0140               	movlb	0	; select bank0
  4536  05D3  072C               	addwf	?___lmul,w
  4537  05D4  00D8               	movwf	_seed
  4538  05D5  3000               	movlw	0
  4539  05D6  3D2D               	addwfc	?___lmul+1,w
  4540  05D7  00D9               	movwf	_seed+1
  4541  05D8  3000               	movlw	0
  4542  05D9  3D2E               	addwfc	?___lmul+2,w
  4543  05DA  00DA               	movwf	_seed+2
  4544  05DB  3000               	movlw	0
  4545  05DC  3D2F               	addwfc	?___lmul+3,w
  4546  05DD  00DB               	movwf	_seed+3
  4547  05DE  0858               	movf	_seed,w
  4548  05DF  00BA               	movwf	??_rand
  4549  05E0  0859               	movf	_seed+1,w
  4550  05E1  00BB               	movwf	??_rand+1
  4551  05E2  085A               	movf	_seed+2,w
  4552  05E3  00BC               	movwf	??_rand+2
  4553  05E4  085B               	movf	_seed+3,w
  4554  05E5  00BD               	movwf	??_rand+3
  4555  05E6  3011               	movlw	17
  4556  05E7                     u1675:
  4557  05E7  36BD               	lsrf	??_rand+3,f
  4558  05E8  0CBC               	rrf	??_rand+2,f
  4559  05E9  0CBB               	rrf	??_rand+1,f
  4560  05EA  0CBA               	rrf	??_rand,f
  4561  05EB  0B89               	decfsz	9,f
  4562  05EC  2DE7               	goto	u1675
  4563  05ED  083B               	movf	??_rand+1,w
  4564  05EE  00B9               	movwf	?_rand+1
  4565  05EF  083A               	movf	??_rand,w
  4566  05F0  00B8               	movwf	?_rand
  4567  05F1  0008               	return
  4568  05F2                     __end_of_rand:
  4569                           
  4570                           	psect	text22
  4571  05F2                     __ptext22:	
  4572 ;; *************** function ___lmul *****************
  4573 ;; Defined at:
  4574 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  multiplier      4   12[BANK0 ] unsigned long 
  4577 ;;  multiplicand    4   16[BANK0 ] unsigned long 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  product         4   20[BANK0 ] unsigned long 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  4   12[BANK0 ] unsigned long 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4589 ;;      Params:         0       8       0       0
  4590 ;;      Locals:         0       4       0       0
  4591 ;;      Temps:          0       0       0       0
  4592 ;;      Totals:         0      12       0       0
  4593 ;;Total ram usage:       12 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; Hardware stack levels required when called: 4
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_rand
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function ___lmul
  4605  05F2                     ___lmul:
  4606                           
  4607                           ;incstack = 0
  4608                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4609  05F2  3000               	movlw	0
  4610  05F3  0140               	movlb	0	; select bank0
  4611  05F4  00B7               	movwf	___lmul@product+3
  4612  05F5  3000               	movlw	0
  4613  05F6  00B6               	movwf	___lmul@product+2
  4614  05F7  3000               	movlw	0
  4615  05F8  00B5               	movwf	___lmul@product+1
  4616  05F9  3000               	movlw	0
  4617  05FA  00B4               	movwf	___lmul@product
  4618  05FB                     l2239:
  4619  05FB  1C2C               	btfss	___lmul@multiplier,0
  4620  05FC  2E05               	goto	l2243
  4621  05FD  0830               	movf	___lmul@multiplicand,w
  4622  05FE  07B4               	addwf	___lmul@product,f
  4623  05FF  0831               	movf	___lmul@multiplicand+1,w
  4624  0600  3DB5               	addwfc	___lmul@product+1,f
  4625  0601  0832               	movf	___lmul@multiplicand+2,w
  4626  0602  3DB6               	addwfc	___lmul@product+2,f
  4627  0603  0833               	movf	___lmul@multiplicand+3,w
  4628  0604  3DB7               	addwfc	___lmul@product+3,f
  4629  0605                     l2243:
  4630  0605  3001               	movlw	1
  4631  0606                     u1645:
  4632  0606  35B0               	lslf	___lmul@multiplicand,f
  4633  0607  0DB1               	rlf	___lmul@multiplicand+1,f
  4634  0608  0DB2               	rlf	___lmul@multiplicand+2,f
  4635  0609  0DB3               	rlf	___lmul@multiplicand+3,f
  4636  060A  0B89               	decfsz	9,f
  4637  060B  2E06               	goto	u1645
  4638  060C  3001               	movlw	1
  4639  060D                     u1655:
  4640  060D  36AF               	lsrf	___lmul@multiplier+3,f
  4641  060E  0CAE               	rrf	___lmul@multiplier+2,f
  4642  060F  0CAD               	rrf	___lmul@multiplier+1,f
  4643  0610  0CAC               	rrf	___lmul@multiplier,f
  4644  0611  0B89               	decfsz	9,f
  4645  0612  2E0D               	goto	u1655
  4646  0613  082F               	movf	___lmul@multiplier+3,w
  4647  0614  042E               	iorwf	___lmul@multiplier+2,w
  4648  0615  042D               	iorwf	___lmul@multiplier+1,w
  4649  0616  042C               	iorwf	___lmul@multiplier,w
  4650  0617  1D03               	skipz
  4651  0618  2DFB               	goto	l2239
  4652  0619  0837               	movf	___lmul@product+3,w
  4653  061A  00AF               	movwf	?___lmul+3
  4654  061B  0836               	movf	___lmul@product+2,w
  4655  061C  00AE               	movwf	?___lmul+2
  4656  061D  0835               	movf	___lmul@product+1,w
  4657  061E  00AD               	movwf	?___lmul+1
  4658  061F  0834               	movf	___lmul@product,w
  4659  0620  00AC               	movwf	?___lmul
  4660  0621  0008               	return
  4661  0622                     __end_of___lmul:
  4662                           
  4663                           	psect	text23
  4664  04FE                     __ptext23:	
  4665 ;; *************** function ___awmod *****************
  4666 ;; Defined at:
  4667 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  divisor         2   30[BANK0 ] int 
  4670 ;;  dividend        2   32[BANK0 ] int 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  sign            1   36[BANK0 ] unsigned char 
  4673 ;;  counter         1   35[BANK0 ] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2   30[BANK0 ] int 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4683 ;;      Params:         0       4       0       0
  4684 ;;      Locals:         0       2       0       0
  4685 ;;      Temps:          0       1       0       0
  4686 ;;      Totals:         0       7       0       0
  4687 ;;Total ram usage:        7 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 4
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_RandomRange
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function ___awmod
  4699  04FE                     ___awmod:
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4703  04FE  0140               	movlb	0	; select bank0
  4704  04FF  01C4               	clrf	___awmod@sign
  4705  0500  1FC1               	btfss	___awmod@dividend+1,7
  4706  0501  2D09               	goto	l2265
  4707  0502  09C0               	comf	___awmod@dividend,f
  4708  0503  09C1               	comf	___awmod@dividend+1,f
  4709  0504  0AC0               	incf	___awmod@dividend,f
  4710  0505  1903               	skipnz
  4711  0506  0AC1               	incf	___awmod@dividend+1,f
  4712  0507  01C4               	clrf	___awmod@sign
  4713  0508  0AC4               	incf	___awmod@sign,f
  4714  0509                     l2265:
  4715  0509  1FBF               	btfss	___awmod@divisor+1,7
  4716  050A  2D10               	goto	l2269
  4717  050B  09BE               	comf	___awmod@divisor,f
  4718  050C  09BF               	comf	___awmod@divisor+1,f
  4719  050D  0ABE               	incf	___awmod@divisor,f
  4720  050E  1903               	skipnz
  4721  050F  0ABF               	incf	___awmod@divisor+1,f
  4722  0510                     l2269:
  4723  0510  083E               	movf	___awmod@divisor,w
  4724  0511  043F               	iorwf	___awmod@divisor+1,w
  4725  0512  1903               	btfsc	3,2
  4726  0513  2D37               	goto	l2287
  4727  0514  01C3               	clrf	___awmod@counter
  4728  0515  0AC3               	incf	___awmod@counter,f
  4729  0516                     l2277:
  4730  0516  1BBF               	btfsc	___awmod@divisor+1,7
  4731  0517  2D22               	goto	l2279
  4732  0518  3001               	movlw	1
  4733  0519                     u1715:
  4734  0519  35BE               	lslf	___awmod@divisor,f
  4735  051A  0DBF               	rlf	___awmod@divisor+1,f
  4736  051B  0B89               	decfsz	9,f
  4737  051C  2D19               	goto	u1715
  4738  051D  3001               	movlw	1
  4739  051E  00C2               	movwf	??___awmod
  4740  051F  0842               	movf	??___awmod,w
  4741  0520  07C3               	addwf	___awmod@counter,f
  4742  0521  2D16               	goto	l2277
  4743  0522                     l2279:
  4744  0522  083F               	movf	___awmod@divisor+1,w
  4745  0523  0241               	subwf	___awmod@dividend+1,w
  4746  0524  1D03               	skipz
  4747  0525  2D28               	goto	u1735
  4748  0526  083E               	movf	___awmod@divisor,w
  4749  0527  0240               	subwf	___awmod@dividend,w
  4750  0528                     u1735:
  4751  0528  1C03               	skipc
  4752  0529  2D2E               	goto	l2283
  4753  052A  083E               	movf	___awmod@divisor,w
  4754  052B  02C0               	subwf	___awmod@dividend,f
  4755  052C  083F               	movf	___awmod@divisor+1,w
  4756  052D  3BC1               	subwfb	___awmod@dividend+1,f
  4757  052E                     l2283:
  4758  052E  3001               	movlw	1
  4759  052F                     u1745:
  4760  052F  36BF               	lsrf	___awmod@divisor+1,f
  4761  0530  0CBE               	rrf	___awmod@divisor,f
  4762  0531  0B89               	decfsz	9,f
  4763  0532  2D2F               	goto	u1745
  4764  0533  3001               	movlw	1
  4765  0534  02C3               	subwf	___awmod@counter,f
  4766  0535  1D03               	btfss	3,2
  4767  0536  2D22               	goto	l2279
  4768  0537                     l2287:
  4769  0537  0844               	movf	___awmod@sign,w
  4770  0538  1903               	btfsc	3,2
  4771  0539  2D3F               	goto	l2291
  4772  053A  09C0               	comf	___awmod@dividend,f
  4773  053B  09C1               	comf	___awmod@dividend+1,f
  4774  053C  0AC0               	incf	___awmod@dividend,f
  4775  053D  1903               	skipnz
  4776  053E  0AC1               	incf	___awmod@dividend+1,f
  4777  053F                     l2291:
  4778  053F  0841               	movf	___awmod@dividend+1,w
  4779  0540  00BF               	movwf	?___awmod+1
  4780  0541  0840               	movf	___awmod@dividend,w
  4781  0542  00BE               	movwf	?___awmod
  4782  0543  0008               	return
  4783  0544                     __end_of___awmod:
  4784                           
  4785                           	psect	text24
  4786  069F                     __ptext24:	
  4787 ;; *************** function _PWM3_LoadDutyValue *****************
  4788 ;; Defined at:
  4789 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  dutyValue       2   12[BANK0 ] unsigned short 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4803 ;;      Params:         0       2       0       0
  4804 ;;      Locals:         0       0       0       0
  4805 ;;      Temps:          0       2       0       0
  4806 ;;      Totals:         0       4       0       0
  4807 ;;Total ram usage:        4 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 4
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;;		_Constant
  4815 ;;		_ADCP
  4816 ;;		_RestPeriod
  4817 ;;		_Wave
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           
  4822                           ;psect for function _PWM3_LoadDutyValue
  4823  069F                     _PWM3_LoadDutyValue:
  4824                           
  4825                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4826                           
  4827                           ;incstack = 0
  4828                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  4829  069F  0140               	movlb	0	; select bank0
  4830  06A0  082D               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  4831  06A1  00AF               	movwf	??_PWM3_LoadDutyValue+1
  4832  06A2  082C               	movf	PWM3_LoadDutyValue@dutyValue,w
  4833  06A3  00AE               	movwf	??_PWM3_LoadDutyValue
  4834  06A4  36AF               	lsrf	??_PWM3_LoadDutyValue+1,f
  4835  06A5  0CAE               	rrf	??_PWM3_LoadDutyValue,f
  4836  06A6  36AF               	lsrf	??_PWM3_LoadDutyValue+1,f
  4837  06A7  0CAE               	rrf	??_PWM3_LoadDutyValue,f
  4838  06A8  082E               	movf	??_PWM3_LoadDutyValue,w
  4839  06A9  0146               	movlb	6	; select bank6
  4840  06AA  0095               	movwf	21	;volatile
  4841                           
  4842                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  4843  06AB  0140               	movlb	0	; select bank0
  4844  06AC  082C               	movf	PWM3_LoadDutyValue@dutyValue,w
  4845  06AD  3903               	andlw	3
  4846  06AE  00AE               	movwf	??_PWM3_LoadDutyValue
  4847  06AF  3005               	movlw	5
  4848  06B0                     u1775:
  4849  06B0  35AE               	lslf	??_PWM3_LoadDutyValue,f
  4850  06B1  3EFF               	addlw	-1
  4851  06B2  1D03               	skipz
  4852  06B3  2EB0               	goto	u1775
  4853  06B4  352E               	lslf	??_PWM3_LoadDutyValue,w
  4854  06B5  0146               	movlb	6	; select bank6
  4855  06B6  0094               	movwf	20	;volatile
  4856  06B7  0008               	return
  4857  06B8                     __end_of_PWM3_LoadDutyValue:
  4858                           
  4859                           	psect	intentry
  4860  0004                     __pintentry:	
  4861 ;; *************** function _INTERRUPT_InterruptManager *****************
  4862 ;; Defined at:
  4863 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4877 ;;      Params:         0       0       0       0
  4878 ;;      Locals:         0       0       0       0
  4879 ;;      Temps:          0       0       0       0
  4880 ;;      Totals:         0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 3
  4884 ;; This function calls:
  4885 ;;		_ADC_ISR
  4886 ;; This function is called by:
  4887 ;;		Interrupt level 1
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891  0004                     _INTERRUPT_InterruptManager:
  4892                           
  4893                           ;incstack = 0
  4894  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4895                           
  4896                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4897  0005  3180               	pagesel	$
  4898                           
  4899                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4900  0006  1F0B               	btfss	11,6	;volatile
  4901  0007  280D               	goto	i1l188
  4902                           
  4903                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4904  0008  014E               	movlb	14	; select bank14
  4905  0009  1817               	btfsc	23,0	;volatile
  4906  000A  1C0D               	btfss	13,0	;volatile
  4907  000B  280D               	goto	i1l188
  4908                           
  4909                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             ADC_ISR();
  4910  000C  2744               	fcall	_ADC_ISR
  4911  000D                     i1l188:	
  4912                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4913                           
  4914  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4915  000E  0009               	retfie
  4916  000F                     __end_of_INTERRUPT_InterruptManager:
  4917                           
  4918                           	psect	text26
  4919  0744                     __ptext26:	
  4920 ;; *************** function _ADC_ISR *****************
  4921 ;; Defined at:
  4922 ;;		line 145 in file "mcc_generated_files/adc.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0, pclath, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4936 ;;      Params:         0       0       0       0
  4937 ;;      Locals:         0       0       0       0
  4938 ;;      Temps:          0       0       0       0
  4939 ;;      Totals:         0       0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 2
  4943 ;; This function calls:
  4944 ;;		Absolute function
  4945 ;;		_ADCEvent
  4946 ;;		_ADC_DefaultInterruptHandler
  4947 ;; This function is called by:
  4948 ;;		_INTERRUPT_InterruptManager
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _ADC_ISR
  4954  0744                     _ADC_ISR:
  4955                           
  4956                           ;mcc_generated_files/adc.c: 148:     PIR1bits.ADIF = 0;
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
  4960  0744  014E               	movlb	14	; select bank14
  4961  0745  100D               	bcf	13,0	;volatile
  4962                           
  4963                           ;mcc_generated_files/adc.c: 150:  if(ADC_InterruptHandler)
  4964  0746  0140               	movlb	0	; select bank0
  4965  0747  085C               	movf	_ADC_InterruptHandler,w
  4966  0748  045D               	iorwf	_ADC_InterruptHandler+1,w
  4967  0749  1903               	btfsc	3,2
  4968  074A  0008               	return
  4969                           
  4970                           ;mcc_generated_files/adc.c: 151:     {;mcc_generated_files/adc.c: 152:         ADC_Inter
      +                          ruptHandler();
  4971  074B  085D               	movf	_ADC_InterruptHandler+1,w
  4972  074C  008A               	movwf	10
  4973  074D  085C               	movf	_ADC_InterruptHandler,w
  4974  074E  000A               	callw
  4975  074F  3187               	pagesel	$
  4976  0750  0008               	return
  4977  0751                     __end_of_ADC_ISR:
  4978                           
  4979                           	psect	text27
  4980  0544                     __ptext27:	
  4981 ;; *************** function _ADCEvent *****************
  4982 ;; Defined at:
  4983 ;;		line 53 in file "procedures.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0, pclath, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4997 ;;      Params:         0       0       0       0
  4998 ;;      Locals:         0       0       0       0
  4999 ;;      Temps:          0       0       0       0
  5000 ;;      Totals:         0       0       0       0
  5001 ;;Total ram usage:        0 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 1
  5004 ;; This function calls:
  5005 ;;		_ADC_Activity
  5006 ;;		_ADC_GetConversionResult
  5007 ;;		___flge
  5008 ;;		___xxtofl
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;;		_ADC_ISR
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _ADCEvent
  5017  0544                     _ADCEvent:
  5018                           
  5019                           ;procedures.c: 54:     ADCValue = ADC_GetConversionResult();
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in _ADCEvent: [wreg+status,2+status,0+pclath+cstack]
  5023  0544  276B               	fcall	_ADC_GetConversionResult
  5024  0545  0871               	movf	?_ADC_GetConversionResult+1,w
  5025  0546  0140               	movlb	0	; select bank0
  5026  0547  00D7               	movwf	_ADCValue+1
  5027  0548  0870               	movf	?_ADC_GetConversionResult,w
  5028  0549  00D6               	movwf	_ADCValue
  5029                           
  5030                           ;procedures.c: 56:     if(ADC_Activity(ADCValue)){
  5031  054A  0857               	movf	_ADCValue+1,w
  5032  054B  00F1               	movwf	ADC_Activity@Value+1
  5033  054C  0856               	movf	_ADCValue,w
  5034  054D  00F0               	movwf	ADC_Activity@Value
  5035  054E  2644               	fcall	_ADC_Activity
  5036  054F  3A00               	xorlw	0
  5037  0550  1903               	skipnz
  5038  0551  2D5D               	goto	i1l1853
  5039                           
  5040                           ;procedures.c: 57:         do { LATAbits.LATA5 = 1; } while(0);
  5041  0552  0140               	movlb	0	; select bank0
  5042  0553  1698               	bsf	24,5	;volatile
  5043                           
  5044                           ;procedures.c: 58:         InactiveADC = 0;
  5045  0554  3000               	movlw	0
  5046  0555  00D5               	movwf	_InactiveADC+3
  5047  0556  3000               	movlw	0
  5048  0557  00D4               	movwf	_InactiveADC+2
  5049  0558  3000               	movlw	0
  5050  0559  00D3               	movwf	_InactiveADC+1
  5051  055A  3000               	movlw	0
  5052  055B  00D2               	movwf	_InactiveADC
  5053                           
  5054                           ;procedures.c: 59:     }
  5055  055C  0008               	return
  5056  055D                     i1l1853:
  5057  055D  0140               	movlb	0	; select bank0
  5058  055E  0855               	movf	_InactiveADC+3,w
  5059  055F  00F3               	movwf	___xxtofl@val+3
  5060  0560  0854               	movf	_InactiveADC+2,w
  5061  0561  00F2               	movwf	___xxtofl@val+2
  5062  0562  0853               	movf	_InactiveADC+1,w
  5063  0563  00F1               	movwf	___xxtofl@val+1
  5064  0564  0852               	movf	_InactiveADC,w
  5065  0565  00F0               	movwf	___xxtofl@val
  5066  0566  3000               	movlw	0
  5067  0567  22B6               	fcall	___xxtofl
  5068  0568  0873               	movf	?___xxtofl+3,w
  5069  0569  0140               	movlb	0	; select bank0
  5070  056A  00A3               	movwf	___flge@ff1+3
  5071  056B  0872               	movf	?___xxtofl+2,w
  5072  056C  00A2               	movwf	___flge@ff1+2
  5073  056D  0871               	movf	?___xxtofl+1,w
  5074  056E  00A1               	movwf	___flge@ff1+1
  5075  056F  0870               	movf	?___xxtofl,w
  5076  0570  00A0               	movwf	___flge@ff1
  5077  0571  3049               	movlw	73
  5078  0572  00A7               	movwf	___flge@ff2+3
  5079  0573  309F               	movlw	159
  5080  0574  00A6               	movwf	___flge@ff2+2
  5081  0575  3038               	movlw	56
  5082  0576  00A5               	movwf	___flge@ff2+1
  5083  0577  30DF               	movlw	223
  5084  0578  00A4               	movwf	___flge@ff2
  5085  0579  234B               	fcall	___flge
  5086  057A  1803               	btfsc	3,0
  5087  057B  2D86               	goto	i1l366
  5088                           
  5089                           ;procedures.c: 61:         InactiveADC++;
  5090  057C  3001               	movlw	1
  5091  057D  0140               	movlb	0	; select bank0
  5092  057E  07D2               	addwf	_InactiveADC,f
  5093  057F  3000               	movlw	0
  5094  0580  3DD3               	addwfc	_InactiveADC+1,f
  5095  0581  3000               	movlw	0
  5096  0582  3DD4               	addwfc	_InactiveADC+2,f
  5097  0583  3000               	movlw	0
  5098  0584  3DD5               	addwfc	_InactiveADC+3,f
  5099  0585  0008               	return
  5100  0586                     i1l366:	
  5101                           ;procedures.c: 62:     else{
  5102                           
  5103                           
  5104                           ;procedures.c: 63:         (INTCONbits.PEIE = 0);
  5105  0586  130B               	bcf	11,6	;volatile
  5106                           
  5107                           ;procedures.c: 64:         do { LATAbits.LATA5 = 0; } while(0);
  5108  0587  0140               	movlb	0	; select bank0
  5109  0588  1298               	bcf	24,5	;volatile
  5110  0589  0008               	return
  5111  058A                     __end_of_ADCEvent:
  5112                           
  5113                           	psect	text28
  5114  0778                     __ptext28:	
  5115 ;; *************** function _ADC_DefaultInterruptHandler *****************
  5116 ;; Defined at:
  5117 ;;		line 160 in file "mcc_generated_files/adc.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      void 
  5124 ;; Registers used:
  5125 ;;		None
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5131 ;;      Params:         0       0       0       0
  5132 ;;      Locals:         0       0       0       0
  5133 ;;      Temps:          0       0       0       0
  5134 ;;      Totals:         0       0       0       0
  5135 ;;Total ram usage:        0 bytes
  5136 ;; Hardware stack levels used: 1
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_ADC_Initialize
  5141 ;;		_ADC_ISR
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _ADC_DefaultInterruptHandler
  5147  0778                     _ADC_DefaultInterruptHandler:
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in _ADC_DefaultInterruptHandler: []
  5151  0778  0008               	return
  5152  0779                     __end_of_ADC_DefaultInterruptHandler:
  5153                           
  5154                           	psect	text29
  5155  02B6                     __ptext29:	
  5156 ;; *************** function ___xxtofl *****************
  5157 ;; Defined at:
  5158 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  sign            1    wreg     unsigned char 
  5161 ;;  val             4    0[COMMON] long 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  sign            1    8[COMMON] unsigned char 
  5164 ;;  arg             4   10[COMMON] unsigned long 
  5165 ;;  exp             1    9[COMMON] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  4    0[COMMON] unsigned char 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5175 ;;      Params:         4       0       0       0
  5176 ;;      Locals:         6       0       0       0
  5177 ;;      Temps:          4       0       0       0
  5178 ;;      Totals:        14       0       0       0
  5179 ;;Total ram usage:       14 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_ADCEvent
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function ___xxtofl
  5190  02B6                     ___xxtofl:
  5191                           
  5192                           ;incstack = 0
  5193                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5194                           ;___xxtofl@sign stored from wreg
  5195  02B6  00F8               	movwf	___xxtofl@sign
  5196  02B7  0878               	movf	___xxtofl@sign,w
  5197  02B8  1D03               	btfss	3,2
  5198  02B9  1FF3               	btfss	___xxtofl@val+3,7
  5199  02BA  2ACB               	goto	i1l1739
  5200  02BB  0970               	comf	___xxtofl@val,w
  5201  02BC  00FA               	movwf	___xxtofl@arg
  5202  02BD  0971               	comf	___xxtofl@val+1,w
  5203  02BE  00FB               	movwf	___xxtofl@arg+1
  5204  02BF  0972               	comf	___xxtofl@val+2,w
  5205  02C0  00FC               	movwf	___xxtofl@arg+2
  5206  02C1  0973               	comf	___xxtofl@val+3,w
  5207  02C2  00FD               	movwf	___xxtofl@arg+3
  5208  02C3  0AFA               	incf	___xxtofl@arg,f
  5209  02C4  1903               	skipnz
  5210  02C5  0AFB               	incf	___xxtofl@arg+1,f
  5211  02C6  1903               	skipnz
  5212  02C7  0AFC               	incf	___xxtofl@arg+2,f
  5213  02C8  1903               	skipnz
  5214  02C9  0AFD               	incf	___xxtofl@arg+3,f
  5215  02CA  2AD3               	goto	i1l934
  5216  02CB                     i1l1739:
  5217  02CB  0873               	movf	___xxtofl@val+3,w
  5218  02CC  00FD               	movwf	___xxtofl@arg+3
  5219  02CD  0872               	movf	___xxtofl@val+2,w
  5220  02CE  00FC               	movwf	___xxtofl@arg+2
  5221  02CF  0871               	movf	___xxtofl@val+1,w
  5222  02D0  00FB               	movwf	___xxtofl@arg+1
  5223  02D1  0870               	movf	___xxtofl@val,w
  5224  02D2  00FA               	movwf	___xxtofl@arg
  5225  02D3                     i1l934:
  5226  02D3  0873               	movf	___xxtofl@val+3,w
  5227  02D4  0472               	iorwf	___xxtofl@val+2,w
  5228  02D5  0471               	iorwf	___xxtofl@val+1,w
  5229  02D6  0470               	iorwf	___xxtofl@val,w
  5230  02D7  1D03               	skipz
  5231  02D8  2AE2               	goto	i1l1745
  5232  02D9  3000               	movlw	0
  5233  02DA  00F3               	movwf	?___xxtofl+3
  5234  02DB  3000               	movlw	0
  5235  02DC  00F2               	movwf	?___xxtofl+2
  5236  02DD  3000               	movlw	0
  5237  02DE  00F1               	movwf	?___xxtofl+1
  5238  02DF  3000               	movlw	0
  5239  02E0  00F0               	movwf	?___xxtofl
  5240  02E1  0008               	return
  5241  02E2                     i1l1745:
  5242  02E2  3096               	movlw	150
  5243  02E3  00F4               	movwf	??___xxtofl
  5244  02E4  0874               	movf	??___xxtofl,w
  5245  02E5  00F9               	movwf	___xxtofl@exp
  5246  02E6                     i1l1749:
  5247  02E6  30FE               	movlw	254
  5248  02E7  057D               	andwf	___xxtofl@arg+3,w
  5249  02E8  1903               	btfsc	3,2
  5250  02E9  2B09               	goto	i1l940
  5251  02EA  3001               	movlw	1
  5252  02EB  00F4               	movwf	??___xxtofl
  5253  02EC  0874               	movf	??___xxtofl,w
  5254  02ED  07F9               	addwf	___xxtofl@exp,f
  5255  02EE  3001               	movlw	1
  5256  02EF                     u107_25:
  5257  02EF  36FD               	lsrf	___xxtofl@arg+3,f
  5258  02F0  0CFC               	rrf	___xxtofl@arg+2,f
  5259  02F1  0CFB               	rrf	___xxtofl@arg+1,f
  5260  02F2  0CFA               	rrf	___xxtofl@arg,f
  5261  02F3  0B89               	decfsz	9,f
  5262  02F4  2AEF               	goto	u107_25
  5263  02F5  2AE6               	goto	i1l1749
  5264  02F6                     i1l1751:
  5265  02F6  3001               	movlw	1
  5266  02F7  00F4               	movwf	??___xxtofl
  5267  02F8  0874               	movf	??___xxtofl,w
  5268  02F9  07F9               	addwf	___xxtofl@exp,f
  5269  02FA  3001               	movlw	1
  5270  02FB  07FA               	addwf	___xxtofl@arg,f
  5271  02FC  3000               	movlw	0
  5272  02FD  3DFB               	addwfc	___xxtofl@arg+1,f
  5273  02FE  3000               	movlw	0
  5274  02FF  3DFC               	addwfc	___xxtofl@arg+2,f
  5275  0300  3000               	movlw	0
  5276  0301  3DFD               	addwfc	___xxtofl@arg+3,f
  5277  0302  3001               	movlw	1
  5278  0303                     u109_25:
  5279  0303  36FD               	lsrf	___xxtofl@arg+3,f
  5280  0304  0CFC               	rrf	___xxtofl@arg+2,f
  5281  0305  0CFB               	rrf	___xxtofl@arg+1,f
  5282  0306  0CFA               	rrf	___xxtofl@arg,f
  5283  0307  0B89               	decfsz	9,f
  5284  0308  2B03               	goto	u109_25
  5285  0309                     i1l940:
  5286  0309  30FF               	movlw	255
  5287  030A  057D               	andwf	___xxtofl@arg+3,w
  5288  030B  1903               	btfsc	3,2
  5289  030C  2B1B               	goto	i1l1759
  5290  030D  2AF6               	goto	i1l1751
  5291  030E                     i1l1761:
  5292  030E  3002               	movlw	2
  5293  030F  0279               	subwf	___xxtofl@exp,w
  5294  0310  1C03               	btfss	3,0
  5295  0311  2B1D               	goto	i1l947
  5296  0312  3001               	movlw	1
  5297  0313  02F9               	subwf	___xxtofl@exp,f
  5298  0314  3001               	movlw	1
  5299  0315                     u111_25:
  5300  0315  35FA               	lslf	___xxtofl@arg,f
  5301  0316  0DFB               	rlf	___xxtofl@arg+1,f
  5302  0317  0DFC               	rlf	___xxtofl@arg+2,f
  5303  0318  0DFD               	rlf	___xxtofl@arg+3,f
  5304  0319  0B89               	decfsz	9,f
  5305  031A  2B15               	goto	u111_25
  5306  031B                     i1l1759:
  5307  031B  1FFC               	btfss	___xxtofl@arg+2,7
  5308  031C  2B0E               	goto	i1l1761
  5309  031D                     i1l947:
  5310  031D  1879               	btfsc	___xxtofl@exp,0
  5311  031E  2B27               	goto	i1l948
  5312  031F  30FF               	movlw	255
  5313  0320  05FA               	andwf	___xxtofl@arg,f
  5314  0321  30FF               	movlw	255
  5315  0322  05FB               	andwf	___xxtofl@arg+1,f
  5316  0323  307F               	movlw	127
  5317  0324  05FC               	andwf	___xxtofl@arg+2,f
  5318  0325  30FF               	movlw	255
  5319  0326  05FD               	andwf	___xxtofl@arg+3,f
  5320  0327                     i1l948:
  5321  0327  1003               	clrc
  5322  0328  0CF9               	rrf	___xxtofl@exp,f
  5323  0329  0879               	movf	___xxtofl@exp,w
  5324  032A  00F4               	movwf	??___xxtofl
  5325  032B  01F5               	clrf	??___xxtofl+1
  5326  032C  01F6               	clrf	??___xxtofl+2
  5327  032D  01F7               	clrf	??___xxtofl+3
  5328  032E  3018               	movlw	24
  5329  032F                     u115_25:
  5330  032F  35F4               	lslf	??___xxtofl,f
  5331  0330  0DF5               	rlf	??___xxtofl+1,f
  5332  0331  0DF6               	rlf	??___xxtofl+2,f
  5333  0332  0DF7               	rlf	??___xxtofl+3,f
  5334  0333  0B89               	decfsz	9,f
  5335  0334  2B2F               	goto	u115_25
  5336  0335  0874               	movf	??___xxtofl,w
  5337  0336  04FA               	iorwf	___xxtofl@arg,f
  5338  0337  0875               	movf	??___xxtofl+1,w
  5339  0338  04FB               	iorwf	___xxtofl@arg+1,f
  5340  0339  0876               	movf	??___xxtofl+2,w
  5341  033A  04FC               	iorwf	___xxtofl@arg+2,f
  5342  033B  0877               	movf	??___xxtofl+3,w
  5343  033C  04FD               	iorwf	___xxtofl@arg+3,f
  5344  033D  0878               	movf	___xxtofl@sign,w
  5345  033E  1D03               	btfss	3,2
  5346  033F  1FF3               	btfss	___xxtofl@val+3,7
  5347  0340  2B42               	goto	i1l1773
  5348  0341  17FD               	bsf	___xxtofl@arg+3,7
  5349  0342                     i1l1773:
  5350  0342  087D               	movf	___xxtofl@arg+3,w
  5351  0343  00F3               	movwf	?___xxtofl+3
  5352  0344  087C               	movf	___xxtofl@arg+2,w
  5353  0345  00F2               	movwf	?___xxtofl+2
  5354  0346  087B               	movf	___xxtofl@arg+1,w
  5355  0347  00F1               	movwf	?___xxtofl+1
  5356  0348  087A               	movf	___xxtofl@arg,w
  5357  0349  00F0               	movwf	?___xxtofl
  5358  034A  0008               	return
  5359  034B                     __end_of___xxtofl:
  5360                           
  5361                           	psect	text30
  5362  034B                     __ptext30:	
  5363 ;; *************** function ___flge *****************
  5364 ;; Defined at:
  5365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  ff1             4    0[BANK0 ] unsigned char 
  5368 ;;  ff2             4    4[BANK0 ] unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5380 ;;      Params:         0       8       0       0
  5381 ;;      Locals:         0       0       0       0
  5382 ;;      Temps:          0       4       0       0
  5383 ;;      Totals:         0      12       0       0
  5384 ;;Total ram usage:       12 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_ADCEvent
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           
  5394                           ;psect for function ___flge
  5395  034B                     ___flge:
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5399  034B  3000               	movlw	0
  5400  034C  0140               	movlb	0	; select bank0
  5401  034D  0520               	andwf	___flge@ff1,w
  5402  034E  00A8               	movwf	??___flge
  5403  034F  3000               	movlw	0
  5404  0350  0521               	andwf	___flge@ff1+1,w
  5405  0351  00A9               	movwf	??___flge+1
  5406  0352  3080               	movlw	128
  5407  0353  0522               	andwf	___flge@ff1+2,w
  5408  0354  00AA               	movwf	??___flge+2
  5409  0355  307F               	movlw	127
  5410  0356  0523               	andwf	___flge@ff1+3,w
  5411  0357  00AB               	movwf	??___flge+3
  5412  0358  082B               	movf	??___flge+3,w
  5413  0359  042A               	iorwf	??___flge+2,w
  5414  035A  0429               	iorwf	??___flge+1,w
  5415  035B  0428               	iorwf	??___flge,w
  5416  035C  1D03               	skipz
  5417  035D  2B66               	goto	i1l671
  5418  035E  3000               	movlw	0
  5419  035F  00A3               	movwf	___flge@ff1+3
  5420  0360  3000               	movlw	0
  5421  0361  00A2               	movwf	___flge@ff1+2
  5422  0362  3000               	movlw	0
  5423  0363  00A1               	movwf	___flge@ff1+1
  5424  0364  3000               	movlw	0
  5425  0365  00A0               	movwf	___flge@ff1
  5426  0366                     i1l671:
  5427  0366  3000               	movlw	0
  5428  0367  0524               	andwf	___flge@ff2,w
  5429  0368  00A8               	movwf	??___flge
  5430  0369  3000               	movlw	0
  5431  036A  0525               	andwf	___flge@ff2+1,w
  5432  036B  00A9               	movwf	??___flge+1
  5433  036C  3080               	movlw	128
  5434  036D  0526               	andwf	___flge@ff2+2,w
  5435  036E  00AA               	movwf	??___flge+2
  5436  036F  307F               	movlw	127
  5437  0370  0527               	andwf	___flge@ff2+3,w
  5438  0371  00AB               	movwf	??___flge+3
  5439  0372  082B               	movf	??___flge+3,w
  5440  0373  042A               	iorwf	??___flge+2,w
  5441  0374  0429               	iorwf	??___flge+1,w
  5442  0375  0428               	iorwf	??___flge,w
  5443  0376  1D03               	skipz
  5444  0377  2B80               	goto	i1l1719
  5445  0378  3000               	movlw	0
  5446  0379  00A7               	movwf	___flge@ff2+3
  5447  037A  3000               	movlw	0
  5448  037B  00A6               	movwf	___flge@ff2+2
  5449  037C  3000               	movlw	0
  5450  037D  00A5               	movwf	___flge@ff2+1
  5451  037E  3000               	movlw	0
  5452  037F  00A4               	movwf	___flge@ff2
  5453  0380                     i1l1719:
  5454  0380  1FA3               	btfss	___flge@ff1+3,7
  5455  0381  2B9A               	goto	i1l1723
  5456  0382  3000               	movlw	0
  5457  0383  00A8               	movwf	??___flge
  5458  0384  3000               	movlw	0
  5459  0385  00A9               	movwf	??___flge+1
  5460  0386  3000               	movlw	0
  5461  0387  00AA               	movwf	??___flge+2
  5462  0388  3080               	movlw	128
  5463  0389  00AB               	movwf	??___flge+3
  5464  038A  0820               	movf	___flge@ff1,w
  5465  038B  02A8               	subwf	??___flge,f
  5466  038C  0821               	movf	___flge@ff1+1,w
  5467  038D  3BA9               	subwfb	??___flge+1,f
  5468  038E  0822               	movf	___flge@ff1+2,w
  5469  038F  3BAA               	subwfb	??___flge+2,f
  5470  0390  0823               	movf	___flge@ff1+3,w
  5471  0391  3BAB               	subwfb	??___flge+3,f
  5472  0392  082B               	movf	??___flge+3,w
  5473  0393  00A3               	movwf	___flge@ff1+3
  5474  0394  082A               	movf	??___flge+2,w
  5475  0395  00A2               	movwf	___flge@ff1+2
  5476  0396  0829               	movf	??___flge+1,w
  5477  0397  00A1               	movwf	___flge@ff1+1
  5478  0398  0828               	movf	??___flge,w
  5479  0399  00A0               	movwf	___flge@ff1
  5480  039A                     i1l1723:
  5481  039A  1FA7               	btfss	___flge@ff2+3,7
  5482  039B  2BB4               	goto	i1l674
  5483  039C  3000               	movlw	0
  5484  039D  00A8               	movwf	??___flge
  5485  039E  3000               	movlw	0
  5486  039F  00A9               	movwf	??___flge+1
  5487  03A0  3000               	movlw	0
  5488  03A1  00AA               	movwf	??___flge+2
  5489  03A2  3080               	movlw	128
  5490  03A3  00AB               	movwf	??___flge+3
  5491  03A4  0824               	movf	___flge@ff2,w
  5492  03A5  02A8               	subwf	??___flge,f
  5493  03A6  0825               	movf	___flge@ff2+1,w
  5494  03A7  3BA9               	subwfb	??___flge+1,f
  5495  03A8  0826               	movf	___flge@ff2+2,w
  5496  03A9  3BAA               	subwfb	??___flge+2,f
  5497  03AA  0827               	movf	___flge@ff2+3,w
  5498  03AB  3BAB               	subwfb	??___flge+3,f
  5499  03AC  082B               	movf	??___flge+3,w
  5500  03AD  00A7               	movwf	___flge@ff2+3
  5501  03AE  082A               	movf	??___flge+2,w
  5502  03AF  00A6               	movwf	___flge@ff2+2
  5503  03B0  0829               	movf	??___flge+1,w
  5504  03B1  00A5               	movwf	___flge@ff2+1
  5505  03B2  0828               	movf	??___flge,w
  5506  03B3  00A4               	movwf	___flge@ff2
  5507  03B4                     i1l674:
  5508  03B4  3080               	movlw	128
  5509  03B5  06A3               	xorwf	___flge@ff1+3,f
  5510  03B6  3080               	movlw	128
  5511  03B7  06A7               	xorwf	___flge@ff2+3,f
  5512  03B8  0827               	movf	___flge@ff2+3,w
  5513  03B9  0223               	subwf	___flge@ff1+3,w
  5514  03BA  1D03               	skipz
  5515  03BB  0008               	return
  5516  03BC  0826               	movf	___flge@ff2+2,w
  5517  03BD  0222               	subwf	___flge@ff1+2,w
  5518  03BE  1D03               	skipz
  5519  03BF  0008               	return
  5520  03C0  0825               	movf	___flge@ff2+1,w
  5521  03C1  0221               	subwf	___flge@ff1+1,w
  5522  03C2  1D03               	skipz
  5523  03C3  0008               	return
  5524  03C4  0824               	movf	___flge@ff2,w
  5525  03C5  0220               	subwf	___flge@ff1,w
  5526  03C6  0008               	return
  5527  03C7                     __end_of___flge:
  5528                           
  5529                           	psect	text31
  5530  076B                     __ptext31:	
  5531 ;; *************** function _ADC_GetConversionResult *****************
  5532 ;; Defined at:
  5533 ;;		line 111 in file "mcc_generated_files/adc.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  2    0[COMMON] unsigned short 
  5540 ;; Registers used:
  5541 ;;		wreg
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5547 ;;      Params:         2       0       0       0
  5548 ;;      Locals:         0       0       0       0
  5549 ;;      Temps:          0       0       0       0
  5550 ;;      Totals:         2       0       0       0
  5551 ;;Total ram usage:        2 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_ADCEvent
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           
  5561                           ;psect for function _ADC_GetConversionResult
  5562  076B                     _ADC_GetConversionResult:
  5563                           
  5564                           ;mcc_generated_files/adc.c: 114:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in _ADC_GetConversionResult: [wreg]
  5568  076B  0141               	movlb	1	; select bank1
  5569  076C  081C               	movf	28,w	;volatile
  5570  076D  00F1               	movwf	?_ADC_GetConversionResult+1
  5571  076E  081B               	movf	27,w	;volatile
  5572  076F  00F0               	movwf	?_ADC_GetConversionResult
  5573  0770  0008               	return
  5574  0771                     __end_of_ADC_GetConversionResult:
  5575                           
  5576                           	psect	text32
  5577  0644                     __ptext32:	
  5578 ;; *************** function _ADC_Activity *****************
  5579 ;; Defined at:
  5580 ;;		line 48 in file "procedures.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  Value           2    0[COMMON] unsigned short 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      _Bool 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5594 ;;      Params:         2       0       0       0
  5595 ;;      Locals:         1       0       0       0
  5596 ;;      Temps:          2       0       0       0
  5597 ;;      Totals:         5       0       0       0
  5598 ;;Total ram usage:        5 bytes
  5599 ;; Hardware stack levels used: 1
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_ADCEvent
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function _ADC_Activity
  5609  0644                     _ADC_Activity:
  5610                           
  5611                           ;procedures.c: 49:     return (Value > (ADCAverage + ADC_Tol))|(Value < (ADCAverage - AD
      +                          C_Tol));
  5612                           
  5613                           ;incstack = 0
  5614                           ; Regs used in _ADC_Activity: [wreg+status,2+status,0]
  5615  0644  01F4               	clrf	_ADC_Activity$779
  5616  0645  0AF4               	incf	_ADC_Activity$779,f
  5617  0646  0140               	movlb	0	; select bank0
  5618  0647  0860               	movf	_ADC_Tol,w
  5619  0648  0762               	addwf	_ADCAverage,w
  5620  0649  00F2               	movwf	??_ADC_Activity
  5621  064A  0861               	movf	_ADC_Tol+1,w
  5622  064B  3D63               	addwfc	_ADCAverage+1,w
  5623  064C  00F3               	movwf	??_ADC_Activity+1
  5624  064D  0871               	movf	ADC_Activity@Value+1,w
  5625  064E  0273               	subwf	??_ADC_Activity+1,w
  5626  064F  1D03               	skipz
  5627  0650  2E53               	goto	u88_25
  5628  0651  0870               	movf	ADC_Activity@Value,w
  5629  0652  0272               	subwf	??_ADC_Activity,w
  5630  0653                     u88_25:
  5631  0653  1C03               	skipc
  5632  0654  2E63               	goto	i1l1671
  5633  0655  0860               	movf	_ADC_Tol,w
  5634  0656  0262               	subwf	_ADCAverage,w
  5635  0657  00F2               	movwf	??_ADC_Activity
  5636  0658  0861               	movf	_ADC_Tol+1,w
  5637  0659  3B63               	subwfb	_ADCAverage+1,w
  5638  065A  00F3               	movwf	??_ADC_Activity+1
  5639  065B  0873               	movf	??_ADC_Activity+1,w
  5640  065C  0271               	subwf	ADC_Activity@Value+1,w
  5641  065D  1D03               	skipz
  5642  065E  2E61               	goto	u89_25
  5643  065F  0872               	movf	??_ADC_Activity,w
  5644  0660  0270               	subwf	ADC_Activity@Value,w
  5645  0661                     u89_25:
  5646  0661  1803               	btfsc	3,0
  5647  0662  01F4               	clrf	_ADC_Activity$779
  5648  0663                     i1l1671:
  5649  0663  0874               	movf	_ADC_Activity$779,w
  5650  0664  0008               	return
  5651  0665                     __end_of_ADC_Activity:
  5652  007E                     btemp	set	126	;btemp
  5653  007E                     int$flags	set	126
  5654  007E                     wtemp0	set	126
  5655                           
  5656                           	psect	config
  5657                           
  5658                           ;Config register CONFIG1 @ 0x8007
  5659                           ;	External Oscillator Mode Selection bits
  5660                           ;	FEXTOSC = OFF, Oscillator not enabled
  5661                           ;	Power-up Default Value for COSC bits
  5662                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  5663                           ;	Clock Out Enable bit
  5664                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5665                           ;	VDD Range Analog Calibration Selection bit
  5666                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  5667  8007                     	org	32775
  5668  8007  3FCD               	dw	16333
  5669                           
  5670                           ;Config register CONFIG2 @ 0x8008
  5671                           ;	Master Clear Enable bit
  5672                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  5673                           ;	Power-up Timer Selection bits
  5674                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5675                           ;	WDT Operating Mode bits
  5676                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5677                           ;	Brown-out Reset Enable bits
  5678                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5679                           ;	Brown-out Reset Voltage Selection bit
  5680                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5681                           ;	PPSLOCKED One-Way Set Enable bit
  5682                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  5683                           ;	Stack Overflow/Underflow Reset Enable bit
  5684                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5685  8008                     	org	32776
  5686  8008  3FE7               	dw	16359
  5687                           
  5688                           ;Config register CONFIG4 @ 0x800A
  5689                           ;	Boot Block Size Selection bits
  5690                           ;	BBSIZE = BB512, 512 words boot block size
  5691                           ;	Boot Block Enable bit
  5692                           ;	BBEN = OFF, Boot Block is disabled
  5693                           ;	SAF Enable bit
  5694                           ;	SAFEN = OFF, SAF is disabled
  5695                           ;	Application Block Write Protection bit
  5696                           ;	WRTAPP = OFF, Application Block is not write-protected
  5697                           ;	Boot Block Write Protection bit
  5698                           ;	WRTB = OFF, Boot Block is not write-protected
  5699                           ;	Configuration Registers Write Protection bit
  5700                           ;	WRTC = OFF, Configuration Registers are not write-protected
  5701                           ;	Storage Area Flash (SAF) Write Protection bit
  5702                           ;	WRTSAF = OFF, SAF is not write-protected
  5703                           ;	Low Voltage Programming Enable bit
  5704                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  5705  800A                     	org	32778
  5706  800A  3FFF               	dw	16383
  5707                           
  5708                           ;Config register CONFIG5 @ 0x800B
  5709                           ;	User Program Flash Memory Code Protection bit
  5710                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5711  800B                     	org	32779
  5712  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         10
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      68
    BANK1            80     21      21
    BANK2            80      0       0

Pointer List with Targets:

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCEvent(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCEvent(), Absolute function(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ADCEvent->___xxtofl
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    _main->_Wave
    _Wave->_delay_s
    _delay_ms->___awdiv
    _SelectEvent->_RandomRange
    _ADC_Initialize->_ADC_SetInterruptHandler
    _RestPeriod->_delay_s
    _Constant->_delay_s
    _delay_s->_RandomRange
    _ADCP->_RandomRange
    ___wmul->___lwdiv
    _RandomRange->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _ADCEvent->___flge

Critical Paths under _main in BANK1

    _main->_Wave

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   29507
                                             20 BANK1      1     1      0
                               _ADCP
            _ADC_SetInterruptHandler
                           _Constant
                 _PWM3_LoadDutyValue
                         _RestPeriod
                  _SYSTEM_Initialize
                        _SelectEvent
                               _Wave
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _Wave                                                23    21      2    8602
                                             47 BANK0      3     1      2
                                              0 BANK1     20    20      0
                 _PWM3_LoadDutyValue
                        _RandomRange
                            ___awdiv
                           _delay_ms
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     350
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1668
                                             12 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _SelectEvent                                          5     3      2    3436
                                             41 BANK0      5     3      2
                        _RandomRange
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _RestPeriod                                           0     0      0    5020
                 _PWM3_LoadDutyValue
                        _RandomRange
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _Constant                                             0     0      0    5020
                 _PWM3_LoadDutyValue
                        _RandomRange
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              6     4      2     578
                                             41 BANK0      6     4      2
                        _RandomRange (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADCP                                                10    10      0    5361
                                             41 BANK0      4     4      0
                                              0 BANK1      6     6      0
                 _PWM3_LoadDutyValue
                        _RandomRange
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                             20 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                             12 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _RandomRange                                          4     0      4    3300
                                             37 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     316
                                             24 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     316
                                             12 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                             30 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2    1142
                                             12 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     876
                            _ADC_ISR
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0     876
                   Absolute function *
                           _ADCEvent *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADCEvent                                             0     0      0     876
                       _ADC_Activity
            _ADC_GetConversionResult
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _ADC_Activity                                         5     3      2     144
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCP
     _PWM3_LoadDutyValue
     _RandomRange
       ___awdiv (ARG)
       ___awmod (ARG)
         _rand (ARG)
           ___lmul
       _rand (ARG)
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
   _ADC_SetInterruptHandler
   _Constant
     _PWM3_LoadDutyValue
     _RandomRange
     _delay_s
       _RandomRange (ARG)
   _PWM3_LoadDutyValue
   _RestPeriod
     _PWM3_LoadDutyValue
     _RandomRange
     _delay_s
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _SelectEvent
     _RandomRange
   _Wave
     _PWM3_LoadDutyValue
     _RandomRange
     ___awdiv
     _delay_ms
       ___awdiv (ARG)
     _delay_s
   _delay_s

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADCEvent *
       _ADC_Activity
       _ADC_GetConversionResult
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
     _ADC_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      44       5       85.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     15      15       7       26.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      67      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      67      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Sep 25 16:51:21 2021

                           ___awdiv@sign 0032                      ___wmul@multiplicand 0036  
                                    l401 00A7                                      l340 0668  
                                    l334 0625                                      l298 0461  
                                    l299 0462                                      l493 068C  
                                    _PR2 028D                          _timer1ReloadVal 005E  
                        __end_of_ADC_ISR 0751          __end_of_ADC_SetInterruptHandler 076B  
                           ___awmod@sign 0044                          _TMR2_Initialize 0736  
                                    wreg 0009             ?_ADC_DefaultInterruptHandler 0070  
                                   l2303 0686                                     l2243 0605  
                                   l2333 05B1                                     l2325 0593  
                                   l2239 05FB                                     l2327 059F  
                                   l2351 0239                                     l2423 0188  
                                   l2415 0176                                     l2503 0447  
                                   l2265 0509                                     l2337 05BA  
                                   l2417 0185                                     l2409 0151  
                                   l2521 0475                                     l2513 0460  
                                   l2291 053F                                     l2283 052E  
                                   l2355 024A                                     l2371 021D  
                                   l2451 01DB                                     l2443 01B3  
                                   l2435 01A8                                     l2523 047B  
                                   l2515 0463                                     l2277 0516  
                                   l2269 0510                                     l2373 02AE  
                                   l2453 01F2                                     l2429 01A5  
                                   l2381 0078                                     l2517 0469  
                                   l2279 0522                                     l2287 0537  
                                   l1911 04F9                                     l1903 04E8  
                                   l2391 0122                                     l2383 00E8  
                                   l2527 0481                                     l2519 046F  
                                   l2481 03FA                                     l2457 0205  
                                   l2385 00F6                                     l2529 0487  
                                   l2475 03E4                                     l1907 04F1  
                                   l2397 0125                                     l2389 0114  
                                   l2495 0430                                     l2487 0410  
                                   l2595 0491                                     l1885 04C2  
                                   l2597 00EE                                     l1895 04CA  
                                   l1879 04B7                                     l2599 01E1  
                                   l1897 04D6                                     _ADCP 0218  
                                   u2005 0408                                     u1205 0672  
                                   u2015 041E                                     u1305 04CD  
                                   u1325 04D7                                     u2037 045A  
                                   _LATA 0018                                     u1335 04E1  
                                   u2047 0678                                     u2057 0637  
                                   u1345 04E9                                     u2067 0291  
                                   u1195 062F                                     _T2PR 028D  
                                   u1715 0519                                     u1645 0606  
                                   u1805 0692                                     u1735 0528  
                                   u1655 060D                                     u1745 052F  
                                   u1905 02A6                                     u1675 05E7  
                                   u1835 0596                                     u1915 0234  
                                   u1775 06B0                                     u1855 05A0  
                                   u1865 05AA                                     u1875 05B2  
                                   u1795 068D                                     u1955 01CC  
                                   u1895 0240                                     u1975 0213  
                                   u1985 03DE                                     u1995 03F2  
                                   _TMR2 028C                                     _WPUA 1F39  
                                   _Wave 0025                                     _main 043F  
                                   _rand 05BF                                     _seed 0058  
                       __end_of_ADCEvent 058A                                     btemp 007E  
                                   start 000F                    __size_of_ADC_Activity 0021  
                                  ADCP@i 00A0                                    ?_ADCP 0070  
         __size_of_OSCILLATOR_Initialize 0006            __end_of_OSCILLATOR_Initialize 0765  
                                  ?_Wave 004F                                    ?_main 0070  
                                  ?_rand 0038                          __end_of___awdiv 04FE  
                        __end_of___awmod 0544                                    _T1CLK 0211  
                        ___awdiv@divisor 002C                                    _T1CON 020E  
                                  _T2CON 028E                                    _T2HLT 028F  
                        __end_of___lwdiv 05BF                                    _T2TMR 028C  
                                  _T2RST 0291                                    i1l188 000D  
                                  i1l366 0586                                    i1l671 0366  
                                  i1l674 03B4                                    i1l940 0309  
                                  i1l934 02D3                                    i1l947 031D  
                                  i1l948 0327                          ___awdiv@counter 0031  
                                  _OSCEN 0891                                    _TMR1H 020D  
                                  _TMR1L 020C                                    _TRISA 0012  
                                  u88_25 0653                                    u89_25 0661  
       __size_of_ADC_GetConversionResult 0006                          __end_of_delay_s 0644  
                    ___lmul@multiplicand 0030                                    Wave@i 00A2  
                                  Wave@x 00A8                           _WDT_Initialize 0775  
                __end_of_PWM3_Initialize 075F                  __end_of_TMR1_Initialize 06CF  
                                  pclath 000A                             _ADC_Activity 0644  
                                  status 0003                                    wtemp0 007E  
                          ??_RandomRange 0049                             __end_of_ADCP 02B6  
                        __initialization 0010                             __end_of_Wave 0218  
                           __end_of_main 04AC                             __end_of_rand 05F2  
                       __end_of_Constant 06FD                                   ??_ADCP 0049  
                                 ADCP@ii 00A2                  __end_of_TMR2_Initialize 0744  
                              ??_ADC_ISR 007E              ?_INTERRUPT_InterruptManager 0070  
                                 ??_Wave 0051                                   ??_main 00B4  
                                 ??_rand 003A                            ??_SelectEvent 004B  
                 __end_of_WDT_Initialize 0778                               Wave@Cycles 00A0  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADRESH 009C                                   _ADRESL 009B  
                       ___awdiv@dividend 002E                                   _ANSELA 1F38  
                                 _T1GATE 0210                                   _T1GCON 020F  
                                 _RA4PPS 1F14                                   u111_25 0315  
                                 _ODCONA 1F3A                                   i1l1723 039A  
                                 i1l1671 0663                                   i1l1719 0380  
                                 i1l1751 02F6                                   i1l1761 030E  
                                 i1l1745 02E2                                   i1l1739 02CB  
                                 i1l1773 0342                                   i1l1749 02E6  
                                 i1l1853 055D                                   i1l1759 031B  
                                 u115_25 032F                                   u107_25 02EF  
                                 u109_25 0303                                   _INLVLA 1F3C  
                                 _OSCFRQ 0893                                   _WDTCON 080C  
                       __end_of___xxtofl 034B                         __end_of_delay_ms 0683  
                             _RestPeriod 06CF     __size_of_ADC_DefaultInterruptHandler 0001  
       __size_of_ADC_SetInterruptHandler 0006                                   ___flge 034B  
                                 ___lmul 05F2              __size_of_PWM3_LoadDutyValue 0019  
                                 ___wmul 0683                                ??___awdiv 0030  
                              ??___awmod 0042                      __end_of_RandomRange 0726  
                              ??___lwdiv 0030                         ___awdiv@quotient 0033  
                        ___awmod@divisor 003E                                ??_delay_s 004B  
                        ___awmod@counter 0043                                ?_ADCEvent 0070  
                        ?_WDT_Initialize 0070                              _InactiveADC 0052  
                     Wave@InactivePeriod 00A6  ADC_SetInterruptHandler@InterruptHandler 002C  
                    __end_of_SelectEvent 043F                               ___flge@ff1 0020  
                             ___flge@ff2 0024                         ?_TMR1_Initialize 0070  
                       ?_PWM3_Initialize 0070                             ___xxtofl@arg 007A  
                           ___xxtofl@exp 0079                        _SYSTEM_Initialize 0751  
                           ___xxtofl@val 0070                  __end_of__initialization 0022  
                     ?_SYSTEM_Initialize 0070                           __pcstackCOMMON 0070  
                           __pidataBANK0 0771                      ??_SYSTEM_Initialize 002E  
                       ?_TMR2_Initialize 0070                  _ADC_GetConversionResult 076B  
                             ??_ADCEvent 007E                __end_of_SYSTEM_Initialize 0759  
                              ?_Constant 0070                               __pbssBANK0 0052  
                            _RandomRange 0712                              ?_RestPeriod 0070  
                             __pmaintext 043F                                  ?___flge 0020  
                                ?___lmul 002C                                  ?___wmul 0034  
                             __pintentry 0004                            ADCP@DutyValue 00A4  
                                _ADC_ISR 0744                           ___lmul@product 0034  
                                _ADC_Tol 0060                  __size_of_ADC_Initialize 0010  
                            _SelectEvent 03C7                                ?___xxtofl 0070  
                              ?_delay_ms 0035                                  _OSCTUNE 0892  
                                _PWM3DCH 0315                                  _PWM3DCL 0314  
                                _PWM3CON 0316                                  _SLRCONA 1F3B  
                             ??_Constant 004F                     _ADC_InterruptHandler 005C  
                _ADC_SetInterruptHandler 0765                          __size_of___flge 007C  
                                ___awdiv 04AC                          __size_of___lmul 0030  
                                ___awmod 04FE                          __size_of___wmul 001C  
                                ___lwdiv 058A                ??_ADC_GetConversionResult 0072  
                                _delay_s 0622                                  __ptext1 0025  
                                __ptext2 0665                                  __ptext3 04AC  
                                __ptext4 03C7                                  __ptext5 0751  
                                __ptext6 0775                                  __ptext7 0736  
                                __ptext8 06B8                                  __ptext9 0759  
                              _T1CONbits 020E                    _OSCILLATOR_Initialize 075F  
                              _T2CONbits 028E                               ??___xxtofl 0074  
                       ___awmod@dividend 0040                 ??_PIN_MANAGER_Initialize 002C  
                              _T2HLTbits 028F                      __size_of_RestPeriod 0017  
                             ??_delay_ms 0037               __size_of_SYSTEM_Initialize 0008  
                   end_of_initialization 0022                                _T2RSTbits 0291  
                       ??_WDT_Initialize 002C                                _PORTAbits 000C  
    __end_of_ADC_DefaultInterruptHandler 0779              _ADC_DefaultInterruptHandler 0778  
                          ___xxtofl@sign 0078                          RandomRange@high 0047  
                      __size_of_ADCEvent 0046            ??_ADC_DefaultInterruptHandler 0070  
              ??_ADC_SetInterruptHandler 002E                         Wave@ActivePeriod 00B2  
             __end_of_PWM3_LoadDutyValue 06B8                           __end_of___flge 03C7  
                         __end_of___lmul 0622                           __end_of___wmul 069F  
                          delay_ms@count 0035                           _ADC_Initialize 0726  
                 ?_OSCILLATOR_Initialize 0070                      start_initialization 0010  
        __size_of_PIN_MANAGER_Initialize 0015                             SelectEvent@x 004C  
                              Wave@i_801 00A4                        __size_of_Constant 0017  
                              Wave@x_800 00AE                                Wave@x_798 00AA  
                              Wave@x_799 00AC                             ?_RandomRange 0045  
                           ??_RestPeriod 004F                 __size_of_PWM3_Initialize 0006  
               __size_of_TMR1_Initialize 0017                                 ??___flge 0028  
                               ??___lmul 0034                                 ??___wmul 0038  
                 __end_of_ADC_Initialize 0736                              __pdataBANK0 0060  
                               ?_ADC_ISR 0070                             ?_SelectEvent 0049  
                              ___latbits 0000                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0                 __size_of_TMR2_Initialize 000E  
                     __end_of_RestPeriod 06E6                        __size_of___xxtofl 0095  
                      ADC_Activity@Value 0070                        __size_of_delay_ms 001E  
                          ?_ADC_Activity 0070                                __pnvBANK0 005C  
                       ___lwdiv@dividend 002E                   _PIN_MANAGER_Initialize 06FD  
                               ?___awdiv 002C                                 ?___awmod 003E  
                               ?___lwdiv 002C                          ?_ADC_Initialize 0070  
                               ?_delay_s 0049             ??_INTERRUPT_InterruptManager 007E  
                               _ADACTPPS 1EC3                                 _ADCEvent 0544  
                               _ADCValue 0056                         ___lwdiv@quotient 0032  
                               _T2CLKCON 0290                           ??_ADC_Activity 0072  
                         ___wmul@product 0038                                 _LATAbits 0018  
                              delay_ms@i 0038                                 _PIE1bits 0717  
    __size_of_INTERRUPT_InterruptManager 000B                                 _PIR1bits 070D  
                      ??_TMR1_Initialize 002C                        ??_PWM3_Initialize 002C  
                       __size_of_ADC_ISR 000D                               _ADCON0bits 009D  
                         RandomRange@low 0045                        ___wmul@multiplier 0034  
                           delay_s@count 0049                               _ADCAverage 0062  
                      ___lmul@multiplier 002C                                 _Constant 06E6  
                      ??_TMR2_Initialize 002C                                 Wave@type 004F  
               ?_ADC_GetConversionResult 0070                     __size_of_RandomRange 0014  
                ??_OSCILLATOR_Initialize 002C                         __size_of___awdiv 0052  
                       __size_of___awmod 0046                         __size_of___lwdiv 0035  
                       __size_of_delay_s 0022                         _ADC_Activity$779 0074  
                     _PWM3_LoadDutyValue 069F                                 ___xxtofl 02B6  
                               _delay_ms 0665                          ___lwdiv@divisor 002C  
                        ___lwdiv@counter 0031                     __size_of_SelectEvent 0078  
                               __ptext10 06FD                                 __ptext11 075F  
                               __ptext20 0712                                 __ptext12 0726  
                               __ptext21 05BF                                 __ptext13 0765  
                             _T1GCONbits 020F                                 __ptext30 034B  
                               __ptext22 05F2                                 __ptext14 06CF  
                               __ptext31 076B                                 __ptext23 04FE  
                               __ptext15 06E6                                 __ptext32 0644  
                               __ptext24 069F                                 __ptext16 0622  
                               __ptext17 0218                                 __ptext26 0744  
                               __ptext18 0683                                 __ptext27 0544  
                               __ptext19 058A                                 __ptext28 0778  
                               __ptext29 02B6                      ?_PWM3_LoadDutyValue 002C  
                          __size_of_ADCP 009E                            __size_of_Wave 01F3  
                          __size_of_main 006D                            __size_of_rand 0033  
                               delay_s@i 004D                         Wave@Event_Length 00B0  
                   ??_PWM3_LoadDutyValue 002E                                 int$flags 007E  
     __end_of_INTERRUPT_InterruptManager 000F               _INTERRUPT_InterruptManager 0004  
                   __end_of_ADC_Activity 0665                               _INTCONbits 000B  
               ?_ADC_SetInterruptHandler 002C                  __size_of_WDT_Initialize 0003  
                               intlevel1 0000                  ?_PIN_MANAGER_Initialize 0070  
        __end_of_ADC_GetConversionResult 0771                         ??_ADC_Initialize 002E  
            PWM3_LoadDutyValue@dutyValue 002C           __end_of_PIN_MANAGER_Initialize 0712  
                        _TMR1_Initialize 06B8                          _PWM3_Initialize 0759  
